{
    "components": {
        "requestBodies": {
            "Gate": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Gate"
                        }
                    }
                },
                "description": "gate",
                "required": true
            },
            "GateDisposition": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/GateDisposition"
                        }
                    }
                },
                "description": "gateDisposition",
                "required": true
            },
            "GateGroup": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/GateGroup"
                        }
                    }
                },
                "description": "gateGroup",
                "required": true
            },
            "GateGroupSkill": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/GateGroupSkill"
                        }
                    }
                },
                "description": "skill",
                "required": true
            },
            "GateQueueDtmfEvent": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/GateQueueDtmfEvent"
                        }
                    }
                },
                "description": "postPayload",
                "required": true
            },
            "GateQueueEvent": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/GateQueueEvent"
                        }
                    }
                },
                "description": "queueEvent",
                "required": true
            },
            "GateScheduleOverride": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/GateScheduleOverride"
                        }
                    }
                },
                "description": "scheduleOverride",
                "required": true
            },
            "PhoneBookEntry": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/PhoneBookEntry"
                        }
                    }
                },
                "description": "entry",
                "required": true
            }
        },
        "schemas": {
            "AccessTokenUserDetails": {
                "properties": {
                    "accessToken": {
                        "type": "string"
                    },
                    "adminId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "adminPasswordReset": {
                        "type": "boolean"
                    },
                    "adminUrl": {
                        "type": "string"
                    },
                    "agentDetails": {
                        "items": {
                            "$ref": "#/components/schemas/AgentV2"
                        },
                        "type": "array"
                    },
                    "agentUrl": {
                        "type": "string"
                    },
                    "analyticsUrl": {
                        "type": "string"
                    },
                    "iqUrl": {
                        "type": "string"
                    },
                    "isAdminPasswordReset": {
                        "type": "boolean"
                    },
                    "loginHashcode": {
                        "type": "string"
                    },
                    "mainAccountId": {
                        "type": "string"
                    },
                    "platformId": {
                        "type": "string"
                    },
                    "port": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "rcUser": {
                        "$ref": "#/components/schemas/Contact"
                    },
                    "redirectUrl": {
                        "type": "string"
                    },
                    "refreshToken": {
                        "type": "string"
                    },
                    "ssoLogin": {
                        "type": "boolean"
                    },
                    "tokenType": {
                        "type": "string"
                    }
                },
                "title": "AccessTokenUserDetails",
                "type": "object"
            },
            "Account": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "amdDefaultProfile": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "archivedAccount": {
                        "type": "boolean"
                    },
                    "audioRetentionDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "concurrentLogins": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "crmHost": {
                        "type": "string"
                    },
                    "crmInstance": {
                        "type": "string"
                    },
                    "crmPwd": {
                        "type": "string"
                    },
                    "crmUid": {
                        "type": "string"
                    },
                    "dataRetentionDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "databaseShardId": {
                        "type": "string"
                    },
                    "defaultCallerid": {
                        "type": "string"
                    },
                    "defaultHold": {
                        "type": "string"
                    },
                    "defaultIntellidialServerId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "defaultOutdialServerGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dncOrgId": {
                        "type": "string"
                    },
                    "dncOrgIdConfirmed": {
                        "type": "boolean"
                    },
                    "emailFromAddress": {
                        "type": "string"
                    },
                    "enable247Dialing": {
                        "type": "boolean"
                    },
                    "enableAgentRankRouting": {
                        "type": "boolean"
                    },
                    "enableAmdProfiles": {
                        "type": "boolean"
                    },
                    "enableBlankCallerid": {
                        "type": "boolean"
                    },
                    "enableCallEventTracking": {
                        "type": "boolean"
                    },
                    "enableCellScrubbing": {
                        "type": "boolean"
                    },
                    "enableCentralizedData": {
                        "type": "boolean"
                    },
                    "enableChat": {
                        "type": "boolean"
                    },
                    "enableCloudRouting": {
                        "type": "boolean"
                    },
                    "enableCorporateDirectory": {
                        "type": "boolean"
                    },
                    "enableCrmExport": {
                        "type": "boolean"
                    },
                    "enableFifo": {
                        "type": "boolean"
                    },
                    "enableFolderMode": {
                        "type": "boolean"
                    },
                    "enableForceLegacy": {
                        "type": "boolean"
                    },
                    "enableGoodData": {
                        "type": "boolean"
                    },
                    "enableHciDialer": {
                        "type": "boolean"
                    },
                    "enableInbound": {
                        "type": "boolean"
                    },
                    "enableIntlOutbound": {
                        "type": "boolean"
                    },
                    "enableListLoading": {
                        "type": "boolean"
                    },
                    "enableMultiuser": {
                        "type": "boolean"
                    },
                    "enableOutbound": {
                        "type": "boolean"
                    },
                    "enableOutboundPredictive": {
                        "type": "boolean"
                    },
                    "enableScheduledTasks": {
                        "type": "boolean"
                    },
                    "enableSoftphones": {
                        "type": "boolean"
                    },
                    "enableTaskMode": {
                        "type": "boolean"
                    },
                    "enableTcpaSafeMachineDetect": {
                        "type": "boolean"
                    },
                    "enableTracking": {
                        "type": "boolean"
                    },
                    "enableVisualIvr": {
                        "type": "boolean"
                    },
                    "enableVoiceBroadcast": {
                        "type": "boolean"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "ftpHost": {
                        "type": "string"
                    },
                    "ftpPwd": {
                        "type": "string"
                    },
                    "ftpUid": {
                        "type": "string"
                    },
                    "ivrAppsEnabled": {
                        "type": "boolean"
                    },
                    "mainAccount": {
                        "$ref": "#/components/schemas/MainAccount"
                    },
                    "mainAccountId": {
                        "type": "string"
                    },
                    "mainAccountName": {
                        "type": "string"
                    },
                    "maxBreakTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxLunchTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxOutPortsPerAgent": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minimumSec": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "notificationEmail": {
                        "type": "string"
                    },
                    "offHookHold": {
                        "type": "string"
                    },
                    "offHookWhisper": {
                        "type": "string"
                    },
                    "offHookWhisperGhost": {
                        "type": "string"
                    },
                    "offhookCallerid": {
                        "type": "string"
                    },
                    "outboundManualDefaultRingtime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "outboundPrepay": {
                        "type": "boolean"
                    },
                    "overrideDispositions": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "pciCompliance": {
                        "type": "boolean"
                    },
                    "pciComplianceRequest": {
                        "type": "boolean"
                    },
                    "phoneRecordingPin": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "primaryTimezone": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "rcAccountAccess": {
                        "enum": [
                            "DISABLED",
                            "ENABLED",
                            "REQUIRED"
                        ],
                        "type": "string"
                    },
                    "recordingAccessMode": {
                        "enum": [
                            "ANONYMOUS",
                            "ACCOUNT",
                            "RIGHTS_DOC",
                            "DISABLED"
                        ],
                        "type": "string"
                    },
                    "recordingFilenameFormat": {
                        "type": "string"
                    },
                    "recordingsDelivery": {
                        "type": "string"
                    },
                    "rounding": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "securityKey": {
                        "type": "string"
                    },
                    "softphoneHost": {
                        "type": "string"
                    },
                    "softphoneWsdl": {
                        "type": "string"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "tcpaSafeMode": {
                        "type": "boolean"
                    },
                    "usePowerBy": {
                        "type": "boolean"
                    },
                    "weekOffset": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "wfmType": {
                        "enum": [
                            "GENERIC",
                            "GENERIC_UDP",
                            "ASPECT",
                            "AC2",
                            "PIPKINS",
                            "MONET",
                            "NONE"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AccountAuxState": {
                "properties": {
                    "agentAuxState": {
                        "type": "string"
                    },
                    "baseAgentState": {
                        "$ref": "#/components/schemas/BaseAgentState"
                    },
                    "description": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isAgentSelectable": {
                        "type": "boolean"
                    },
                    "isRequired": {
                        "type": "boolean"
                    },
                    "rank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "stateId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AccountCallerId": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "callerId": {
                        "type": "string"
                    },
                    "callerIdId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AccountCreationRequest": {
                "properties": {
                    "accountName": {
                        "type": "string"
                    },
                    "databaseShardId": {
                        "type": "string"
                    },
                    "defaultIntellidialServerId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "defaultOutdialServerGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "mainAccountId": {
                        "type": "string"
                    },
                    "pciCompliance": {
                        "type": "boolean"
                    },
                    "tcpaSafeMode": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "accountName",
                    "databaseShardId",
                    "defaultIntellidialServerId",
                    "defaultOutdialServerGroupId",
                    "mainAccountId",
                    "pciCompliance",
                    "tcpaSafeMode"
                ],
                "type": "object"
            },
            "AccountIntegrationBase": {
                "properties": {
                    "_type": {
                        "type": "string"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "integrationType": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "AccountPrepayProfile": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "agent": {
                        "format": "double",
                        "type": "number"
                    },
                    "agentVoip": {
                        "format": "double",
                        "type": "number"
                    },
                    "inbound": {
                        "format": "double",
                        "type": "number"
                    },
                    "inboundTf": {
                        "format": "double",
                        "type": "number"
                    },
                    "machineMsgs": {
                        "format": "double",
                        "type": "number"
                    },
                    "monitoring": {
                        "format": "double",
                        "type": "number"
                    },
                    "offHook": {
                        "format": "double",
                        "type": "number"
                    },
                    "offHookVoip": {
                        "format": "double",
                        "type": "number"
                    },
                    "outbound": {
                        "format": "double",
                        "type": "number"
                    },
                    "transfer": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "AccountSkillStats": {
                "properties": {
                    "accountId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "availableCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "onlineCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "skillName": {
                        "type": "string"
                    },
                    "staffedCount": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AccountView": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "databaseShardId": {
                        "type": "string"
                    },
                    "defaultIntellidialServerId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "defaultOutdialServerGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "emailFromAddress": {
                        "type": "string"
                    },
                    "enable247Dialing": {
                        "type": "boolean"
                    },
                    "enableAgentRankRouting": {
                        "type": "boolean"
                    },
                    "enableAmdProfiles": {
                        "type": "boolean"
                    },
                    "enableChat": {
                        "type": "boolean"
                    },
                    "enableCloudRouting": {
                        "type": "boolean"
                    },
                    "enableFifo": {
                        "type": "boolean"
                    },
                    "enableFolderMode": {
                        "type": "boolean"
                    },
                    "enableGoodData": {
                        "type": "boolean"
                    },
                    "enableHciDialer": {
                        "type": "boolean"
                    },
                    "enableInbound": {
                        "type": "boolean"
                    },
                    "enableMultiUser": {
                        "type": "boolean"
                    },
                    "enableOutbound": {
                        "type": "boolean"
                    },
                    "enableSoftphones": {
                        "type": "boolean"
                    },
                    "enableTaskMode": {
                        "type": "boolean"
                    },
                    "enableTcpaSafeMachineDetect": {
                        "type": "boolean"
                    },
                    "enableTracking": {
                        "type": "boolean"
                    },
                    "enableVisualIvr": {
                        "type": "boolean"
                    },
                    "enableVoiceBroadcast": {
                        "type": "boolean"
                    },
                    "engageAccountId": {
                        "type": "string"
                    },
                    "ivrAppsEnabled": {
                        "type": "boolean"
                    },
                    "mainAccountId": {
                        "type": "string"
                    },
                    "mainAccountName": {
                        "type": "string"
                    },
                    "outboundPrepay": {
                        "type": "boolean"
                    },
                    "rcAccountAccess": {
                        "enum": [
                            "DISABLED",
                            "ENABLED",
                            "REQUIRED"
                        ],
                        "type": "string"
                    },
                    "rcAccountId": {
                        "type": "string"
                    },
                    "tcpaSafeMode": {
                        "type": "boolean"
                    },
                    "usePowerBy": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "AcdStats": {
                "properties": {
                    "abandoned": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "accepted": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "active": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "available": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "deflected": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gateGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gateId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gateName": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "inQueue": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastUpdate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "longCall": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "longestInQueue": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "presented": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "routing": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "schedule": {
                        "type": "string"
                    },
                    "scheduleOverride": {
                        "type": "string"
                    },
                    "selectable": {
                        "type": "boolean"
                    },
                    "shortAbandon": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "shortCall": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "slaFail": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "slaPass": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "staffed": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "successDispositions": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "totalAbandonTime": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "totalAnswerTime": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "totalQueueTime": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "totalTalkTime": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ActiveCall": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "activeCallSessions": {
                        "items": {
                            "$ref": "#/components/schemas/ActiveCallSession"
                        },
                        "type": "array"
                    },
                    "agentDisposition": {
                        "type": "string"
                    },
                    "ani": {
                        "type": "string"
                    },
                    "archive": {
                        "type": "boolean"
                    },
                    "auxPhone": {
                        "type": "string"
                    },
                    "billingKey": {
                        "type": "string"
                    },
                    "callFinalResult": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "callState": {
                        "type": "string"
                    },
                    "callType": {
                        "type": "string"
                    },
                    "campaign": {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    "campaignLead": {
                        "$ref": "#/components/schemas/CampaignLead"
                    },
                    "cloudProfileId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "currDequeueEventId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dequeueAgentSession": {
                        "$ref": "#/components/schemas/ActiveCallSession"
                    },
                    "dequeueAttempts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dequeueTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "dialType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialerSourceKey": {
                        "type": "string"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "dnisE164": {
                        "type": "string"
                    },
                    "enqueueTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "extraUrlData": {
                        "type": "string"
                    },
                    "gate": {
                        "$ref": "#/components/schemas/Gate"
                    },
                    "iqServerId": {
                        "type": "string"
                    },
                    "isLongCall": {
                        "type": "boolean"
                    },
                    "isShortAbandon": {
                        "type": "boolean"
                    },
                    "isShortCall": {
                        "type": "boolean"
                    },
                    "nextDequeueTime": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "nextSessionId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "optOut": {
                        "type": "boolean"
                    },
                    "originatingDnis": {
                        "type": "string"
                    },
                    "outboundDisposition": {
                        "type": "string"
                    },
                    "outboundExternid": {
                        "type": "string"
                    },
                    "primarySession": {
                        "$ref": "#/components/schemas/ActiveCallSession"
                    },
                    "priorityQueueEvent": {
                        "type": "string"
                    },
                    "recordingDeleted": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "recordingUrl": {
                        "type": "string"
                    },
                    "safeArchiveDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "skillOverride": {
                        "type": "string"
                    },
                    "slaPassed": {
                        "type": "boolean"
                    },
                    "slaQualified": {
                        "type": "boolean"
                    },
                    "sourceAppId": {
                        "type": "string"
                    },
                    "tracId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "uii": {
                        "type": "string"
                    },
                    "visualIvrId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "vruSourceKey": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActiveCallEventHistory": {
                "properties": {
                    "ani": {
                        "type": "string"
                    },
                    "callEventDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "callEventId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "callEventType": {
                        "type": "string"
                    },
                    "destDnis": {
                        "type": "string"
                    },
                    "destDnisE164": {
                        "type": "string"
                    },
                    "destId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "destName": {
                        "type": "string"
                    },
                    "destType": {
                        "enum": [
                            "CLOUD-PROFILE",
                            "CLOUD-DESTINATION",
                            "GATE",
                            "TRAC",
                            "CAMPAIGN",
                            "AGENT",
                            "IVR",
                            "VIVR"
                        ],
                        "type": "string"
                    },
                    "destUii": {
                        "type": "string"
                    },
                    "dtmfTrap": {
                        "type": "string"
                    },
                    "eventLog": {
                        "type": "string"
                    },
                    "origDnis": {
                        "type": "string"
                    },
                    "origDnisE164": {
                        "type": "string"
                    },
                    "origId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "origName": {
                        "type": "string"
                    },
                    "origType": {
                        "enum": [
                            "CLOUD-PROFILE",
                            "CLOUD-DESTINATION",
                            "GATE",
                            "TRAC",
                            "CAMPAIGN",
                            "AGENT",
                            "IVR",
                            "VIVR"
                        ],
                        "type": "string"
                    },
                    "origUii": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActiveCallHistory": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "activeCallEventHistories": {
                        "items": {
                            "$ref": "#/components/schemas/ActiveCallEventHistory"
                        },
                        "type": "array"
                    },
                    "activeCallSessionHistories": {
                        "items": {
                            "$ref": "#/components/schemas/ActiveCallSessionHistory"
                        },
                        "type": "array"
                    },
                    "agentDisposition": {
                        "type": "string"
                    },
                    "agentNameAndType": {
                        "$ref": "#/components/schemas/AgentNameAndType"
                    },
                    "ani": {
                        "type": "string"
                    },
                    "archive": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "auxPhone": {
                        "type": "string"
                    },
                    "billingKey": {
                        "type": "string"
                    },
                    "callFinalResult": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "callState": {
                        "type": "string"
                    },
                    "callType": {
                        "type": "string"
                    },
                    "currDequeueEventId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dequeueAttempts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dequeueTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "dialType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialTypeString": {
                        "type": "string"
                    },
                    "dialerSourceKey": {
                        "type": "string"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "dnisE164": {
                        "type": "string"
                    },
                    "enqueueTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "extraUrlData": {
                        "type": "string"
                    },
                    "historySource": {
                        "$ref": "#/components/schemas/HistorySource"
                    },
                    "iqServerId": {
                        "type": "string"
                    },
                    "isLongCall": {
                        "type": "boolean"
                    },
                    "isShortAbandon": {
                        "type": "boolean"
                    },
                    "isShortCall": {
                        "type": "boolean"
                    },
                    "leadId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "nextDequeueTime": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "nextSessionId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "optOut": {
                        "type": "boolean"
                    },
                    "originatingDnis": {
                        "type": "string"
                    },
                    "outboundDisposition": {
                        "type": "string"
                    },
                    "outboundExternid": {
                        "type": "string"
                    },
                    "priorityQueueEvent": {
                        "type": "string"
                    },
                    "recordingDeleted": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "recordingUrl": {
                        "type": "string"
                    },
                    "safeArchiveDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "scriptResult": {
                        "type": "string"
                    },
                    "skillOverride": {
                        "type": "string"
                    },
                    "slaPassed": {
                        "type": "boolean"
                    },
                    "slaQualified": {
                        "type": "boolean"
                    },
                    "sourceAppId": {
                        "type": "string"
                    },
                    "uii": {
                        "type": "string"
                    },
                    "vruSourceKey": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActiveCallListResponse": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "agentFirstName": {
                        "type": "string"
                    },
                    "agentLastName": {
                        "type": "string"
                    },
                    "ani": {
                        "type": "string"
                    },
                    "archive": {
                        "type": "boolean"
                    },
                    "callState": {
                        "type": "string"
                    },
                    "cnam": {
                        "type": "string"
                    },
                    "dequeueTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "destinationName": {
                        "type": "string"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "dnisE164": {
                        "type": "string"
                    },
                    "enqueueTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "uii": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActiveCallSession": {
                "properties": {
                    "agentDisposition": {
                        "type": "string"
                    },
                    "agentLogin": {
                        "$ref": "#/components/schemas/AgentLogin"
                    },
                    "agentNotes": {
                        "type": "string"
                    },
                    "archive": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "callDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "callerName": {
                        "type": "string"
                    },
                    "carrier": {
                        "type": "string"
                    },
                    "cloudDestinationId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialDisposition": {
                        "type": "string"
                    },
                    "dialDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "dialDuration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "duration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "iqServerId": {
                        "type": "string"
                    },
                    "isDequeueAgent": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isMonitoring": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "onHold": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "pk": {
                        "$ref": "#/components/schemas/ActiveCallSessionPK"
                    },
                    "recordingUrl": {
                        "type": "string"
                    },
                    "safeArchiveDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "sessionId": {
                        "type": "string"
                    },
                    "sessionType": {
                        "type": "string"
                    },
                    "skillProfileId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "termParty": {
                        "type": "string"
                    },
                    "termReason": {
                        "type": "string"
                    },
                    "transferFlag": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "wrapTime": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ActiveCallSessionHistory": {
                "properties": {
                    "agentLoginId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentNotes": {
                        "type": "string"
                    },
                    "archive": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "callDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "callerName": {
                        "type": "string"
                    },
                    "carrier": {
                        "type": "string"
                    },
                    "cloudDestinationId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialDisposition": {
                        "type": "string"
                    },
                    "dialDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "dialDuration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "duration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "iqServerId": {
                        "type": "string"
                    },
                    "isDequeueAgent": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isMonitoring": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "onHold": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "pk": {
                        "$ref": "#/components/schemas/ActiveCallSessionPK"
                    },
                    "recordingUrl": {
                        "type": "string"
                    },
                    "safeArchiveDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "sessionId": {
                        "type": "string"
                    },
                    "sessionType": {
                        "type": "string"
                    },
                    "skillProfileId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "termParty": {
                        "type": "string"
                    },
                    "termReason": {
                        "type": "string"
                    },
                    "transferFlag": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "wrapTime": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ActiveCallSessionPK": {
                "properties": {
                    "sessionId": {
                        "type": "string"
                    },
                    "uii": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActiveCallUniqueId": {
                "properties": {
                    "ani": {
                        "type": "string"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "dnisE164": {
                        "type": "string"
                    },
                    "originatingDnis": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActiveChat": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "activeChatSessions": {
                        "items": {
                            "$ref": "#/components/schemas/ActiveChatSession"
                        },
                        "type": "array"
                    },
                    "agentDisposition": {
                        "type": "string"
                    },
                    "ani": {
                        "type": "string"
                    },
                    "archive": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "billingKey": {
                        "type": "string"
                    },
                    "browserInfo": {
                        "type": "string"
                    },
                    "channelType": {
                        "type": "string"
                    },
                    "chatQueueId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatState": {
                        "enum": [
                            "CHAT_PREQUEUED",
                            "CHAT_QUEUED",
                            "CHAT_DEQUEUE_1",
                            "CHAT_DEQUEUE_2",
                            "CHAT_ACTIVE",
                            "CHAT_COMPLETED",
                            "CHAT_PQUEUED",
                            "CHAT_END",
                            "CHAT_IP_BLOCKED",
                            "CHAT_QUEUE_CLOSED",
                            "CHAT_NO_AGENTS",
                            "CHAT_MAX_QUEUE",
                            "CHAT_THROTTLE",
                            "CHAT_DISCONNECT"
                        ],
                        "type": "string"
                    },
                    "currDequeueEventId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dequeueAgentSession": {
                        "$ref": "#/components/schemas/ActiveChatSession"
                    },
                    "dequeueAttempts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dequeueTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "dnisE164": {
                        "type": "string"
                    },
                    "enqueueTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "jsonBaggage": {
                        "type": "string"
                    },
                    "nextDequeueTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "safeArchiveDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "skillOverride": {
                        "type": "string"
                    },
                    "sourceIp": {
                        "type": "string"
                    },
                    "uii": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActiveChatSession": {
                "properties": {
                    "agentDisposition": {
                        "type": "string"
                    },
                    "agentLogin": {
                        "$ref": "#/components/schemas/AgentLogin"
                    },
                    "agentNotes": {
                        "type": "string"
                    },
                    "archive": {
                        "type": "boolean"
                    },
                    "dequeueAgent": {
                        "type": "boolean"
                    },
                    "iqServerId": {
                        "type": "string"
                    },
                    "isDequeueAgent": {
                        "type": "boolean"
                    },
                    "safeArchiveDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "sessionEnd": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "sessionId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "sessionStart": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "sessionType": {
                        "type": "string"
                    },
                    "skillProfileId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "termParty": {
                        "type": "string"
                    },
                    "termReason": {
                        "type": "string"
                    },
                    "uii": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActiveState_boolean_": {
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ActiveStateboolean": {
                "properties": {
                    "isActive": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ActiveStateint": {
                "properties": {
                    "isActive": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AdminUserRequest": {
                "properties": {
                    "children": {
                        "items": {
                            "$ref": "#/components/schemas/User"
                        },
                        "type": "array"
                    },
                    "creationDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "fullName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "parentPath": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "phoneNumberE164": {
                        "type": "string"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    },
                    "rcAccountId": {
                        "type": "string"
                    },
                    "rcUserId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "regionalSettings": {
                        "$ref": "#/components/schemas/RegionalSettingRequestResponse"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Role"
                      }
                    },
                    "rootUser": {
                        "type": "boolean"
                    },
                    "userId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "userManagedByRC": {
                        "type": "boolean"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Agent": {
                "properties": {
                    "accountAccess": {
                        "$ref": "#/components/schemas/CollectionAgentAccountAccess"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "agentAccountAccess": {
                        "items": {
                            "$ref": "#/components/schemas/AgentAccountAccess"
                        },
                        "type": "array"
                    },
                    "agentChatGroupAccess": {
                        "items": {
                            "$ref": "#/components/schemas/AgentChatGroupAccess"
                        },
                        "type": "array"
                    },
                    "agentChatQueueAccesses": {
                        "$ref": "#/components/schemas/CollectionAgentChatQueueAccess"
                    },
                    "agentDialGroupMembers": {
                        "$ref": "#/components/schemas/CollectionAgentDialGroupMember"
                    },
                    "agentGateAccess": {
                        "$ref": "#/components/schemas/CollectionAgentGateAccess"
                    },
                    "agentGateGroupAccess": {
                        "items": {
                            "$ref": "#/components/schemas/AgentGateGroupAccess"
                        },
                        "type": "array"
                    },
                    "agentGroup": {
                        "$ref": "#/components/schemas/AgentGroup"
                    },
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentLoadBalance": {
                        "$ref": "#/components/schemas/CollectionAgentLoadBalanceMember"
                    },
                    "agentLoadBalanceMembers": {
                        "$ref": "#/components/schemas/CollectionAgentLoadBalanceMember"
                    },
                    "agentRank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentSkillProfiles": {
                        "$ref": "#/components/schemas/CollectionAgentSkillProfile"
                    },
                    "agentType": {
                        "enum": [
                            "AGENT",
                            "SUPERVISOR",
                            "MULTI_USER",
                            "MULTI_SUPERVISOR"
                        ],
                        "type": "string"
                    },
                    "allowAgentReports": {
                        "type": "boolean"
                    },
                    "allowAgentStats": {
                        "type": "boolean"
                    },
                    "allowAutoAnswer": {
                        "type": "boolean"
                    },
                    "allowBlended": {
                        "type": "boolean"
                    },
                    "allowCallControl": {
                        "type": "boolean"
                    },
                    "allowCampStats": {
                        "type": "boolean"
                    },
                    "allowChat": {
                        "type": "boolean"
                    },
                    "allowChatStats": {
                        "type": "boolean"
                    },
                    "allowChatVoiceConcurrent": {
                        "type": "boolean"
                    },
                    "allowCrossGateRequeue": {
                        "type": "boolean"
                    },
                    "allowDirectAgentTransfer": {
                        "enum": [
                            "DIRECT_TRANSFER_DISABLED",
                            "ALLOW_DIRECT_TRANSFER_TO_SAME_GROUP",
                            "ALLOW_DIRECT_TRANSFER_TO_ANY_GROUP"
                        ],
                        "type": "string"
                    },
                    "allowEndcallforeveryone": {
                        "type": "boolean"
                    },
                    "allowExternalChat": {
                        "type": "boolean"
                    },
                    "allowFromIpAddresses": {
                        "type": "string"
                    },
                    "allowGateStats": {
                        "type": "boolean"
                    },
                    "allowHangup": {
                        "type": "boolean"
                    },
                    "allowHistoricalDialing": {
                        "type": "boolean"
                    },
                    "allowHold": {
                        "type": "boolean"
                    },
                    "allowInbound": {
                        "type": "boolean"
                    },
                    "allowInboundIntlTransfer": {
                        "type": "boolean"
                    },
                    "allowLeadInserts": {
                        "type": "boolean"
                    },
                    "allowLoginControl": {
                        "type": "boolean"
                    },
                    "allowLoginUpdates": {
                        "type": "boolean"
                    },
                    "allowManualCalls": {
                        "type": "boolean"
                    },
                    "allowManualIntlCalls": {
                        "type": "boolean"
                    },
                    "allowManualIntlTransfer": {
                        "type": "boolean"
                    },
                    "allowManualOutboundGates": {
                        "type": "boolean"
                    },
                    "allowManualPass": {
                        "type": "boolean"
                    },
                    "allowOffHook": {
                        "type": "boolean"
                    },
                    "allowOutbound": {
                        "type": "boolean"
                    },
                    "allowRequeue": {
                        "type": "boolean"
                    },
                    "allowSelfAgentStats": {
                        "type": "boolean"
                    },
                    "allowTransfer": {
                        "type": "boolean"
                    },
                    "altDefaultLoginDest": {
                        "type": "string"
                    },
                    "chatQueueAssignments": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "createdOn": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "defaultAutoAnswerOn": {
                        "type": "boolean"
                    },
                    "defaultLoginDest": {
                        "type": "string"
                    },
                    "dialGroupAssignments": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "directAgentExtension": {
                        "type": "string"
                    },
                    "disableSupervisorMonitoring": {
                        "type": "boolean"
                    },
                    "email": {
                        "type": "string"
                    },
                    "enableSoftphone": {
                        "type": "boolean"
                    },
                    "externalAgentId": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "gateAssignments": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "gatesControlAgentVisibility": {
                        "type": "boolean"
                    },
                    "ghostRnaAction": {
                        "type": "string"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "initLoginBaseState": {
                        "type": "string"
                    },
                    "initLoginBaseStateId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "lastLoginDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "loadBalanceEnabled": {
                        "type": "boolean"
                    },
                    "location": {
                        "type": "string"
                    },
                    "manualOutboundDefaultCallerId": {
                        "type": "string"
                    },
                    "manualOutboundDefaultCallerIdE164": {
                        "type": "string"
                    },
                    "manualOutboundDefaultGate": {
                        "$ref": "#/components/schemas/Gate"
                    },
                    "maxChats": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "multiAccountAgent": {
                        "type": "boolean"
                    },
                    "parentAgentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "password": {
                        "type": "string"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "phoneLoginDialGroup": {
                        "$ref": "#/components/schemas/DialGroup"
                    },
                    "phoneLoginPin": {
                        "type": "string"
                    },
                    "rcUserId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "regionalSettings": {
                        "$ref": "#/components/schemas/RegionalSettingRequestResponse"
                    },
                    "showLeadHistory": {
                        "type": "boolean"
                    },
                    "sipPassword": {
                        "type": "string"
                    },
                    "sipSafeUsername": {
                        "type": "string"
                    },
                    "softphoneId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "team": {
                        "type": "string"
                    },
                    "transientAgent": {
                        "type": "boolean"
                    },
                    "transientDelete": {
                        "type": "boolean"
                    },
                    "transientDeleteDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "userManagedByRC": {
                        "type": "boolean"
                    },
                    "username": {
                        "type": "string"
                    },
                    "whereSupervisee": {
                        "items": {
                            "$ref": "#/components/schemas/AgentSupervisor"
                        },
                        "type": "array"
                    },
                    "whereSupervisor": {
                        "$ref": "#/components/schemas/CollectionAgentSupervisor"
                    }
                },
                "type": "object"
            },
            "AgentAccountAccess": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "agent": {
                        "$ref": "#/components/schemas/Agent"
                    },
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AgentBlockMonitor": {
                "properties": {
                    "blockMonitorId": {
                        "type": "string"
                    },
                    "duration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "endTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "recordingUrl": {
                        "type": "string"
                    },
                    "requestedBy": {
                        "type": "string"
                    },
                    "result": {
                        "type": "string"
                    },
                    "startTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "uii": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AgentChatGroupAccess": {
                "properties": {
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatGroupId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AgentChatQueueAccess": {
                "properties": {
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatQueue": {
                        "$ref": "#/components/schemas/ChatQueue"
                    },
                    "chatQueueId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AgentDetailsResult": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "agentGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentType": {
                        "enum": [
                            "AGENT",
                            "SUPERVISOR",
                            "MULTI_USER",
                            "MULTI_SUPERVISOR"
                        ],
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "rcUserId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "team": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AgentDialGroupMember": {
                "properties": {
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "hciClicker": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "AgentGateAccess": {
                "properties": {
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentRank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "defaultDestOverride": {
                        "type": "string"
                    },
                    "gateId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AgentGateGroupAccess": {
                "properties": {
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gateGroupId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AgentGateLoginRequest": {
                "properties": {
                    "action": {
                        "enum": [
                            "ADD",
                            "REMOVE"
                        ],
                        "type": "string"
                    },
                    "agentGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gateIds": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AgentGroup": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "agentGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agents": {
                        "$ref": "#/components/schemas/CollectionAgent"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AgentImportRequest": {
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "agentType": {
                        "type": "string"
                    },
                    "allowChat": {
                        "type": "boolean"
                    },
                    "allowInbound": {
                        "type": "boolean"
                    },
                    "allowOutbound": {
                        "type": "boolean"
                    },
                    "chatQueueAssignmentIds": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "dialGroupAssignmentIds": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "queueAssignmentIds": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "rcAccountId": {
                        "type": "string"
                    },
                    "rcOfficeUsers": {
                        "items": {
                            "$ref": "#/components/schemas/RcOfficeUser"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AgentLoadBalanceMember": {
                "properties": {
                    "masterAgentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slaveAccountId": {
                        "type": "string"
                    },
                    "slaveAgentId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AgentLoadBalanceMemberPK": {
                "properties": {
                    "masterAgentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "slaveAgentId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AgentLogin": {
                "properties": {
                    "agent": {
                        "$ref": "#/components/schemas/Agent"
                    },
                    "agentAuxState": {
                        "type": "string"
                    },
                    "agentBlockMonitor": {
                        "$ref": "#/components/schemas/CollectionAgentBlockMonitor"
                    },
                    "agentChatState": {
                        "type": "string"
                    },
                    "agentLoginChatQueues": {
                        "$ref": "#/components/schemas/CollectionAgentLoginChatQueues"
                    },
                    "agentLoginGates": {
                        "$ref": "#/components/schemas/CollectionAgentLoginGate"
                    },
                    "agentLoginId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentLoginType": {
                        "type": "string"
                    },
                    "agentOffhookSessions": {
                        "items": {
                            "$ref": "#/components/schemas/AgentOffhookSession"
                        },
                        "type": "array"
                    },
                    "agentPhone": {
                        "type": "string"
                    },
                    "agentRank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentSkillProfile": {
                        "$ref": "#/components/schemas/AgentSkillProfile"
                    },
                    "agentState": {
                        "type": "string"
                    },
                    "availableTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "awayTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "breakTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "callsHandled": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatAvailableTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatEngagedTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatPresentedTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatRnaTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatsHandled": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "currentChatCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialGroup": {
                        "$ref": "#/components/schemas/DialGroup"
                    },
                    "engagedTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "exportFlag": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "holdTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ipMapKey": {
                        "type": "string"
                    },
                    "iqServerId": {
                        "type": "string"
                    },
                    "isGhostLogin": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "lastArchiveStateDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "lastCallDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "loginDialGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "loginDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "loginHashcode": {
                        "type": "string"
                    },
                    "logoutDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "lunchTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "manualDials": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "monitorAgentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nextCallTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "parentAgentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "pendingDispTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "pendingDisposition": {
                        "type": "boolean"
                    },
                    "previewDials": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "reservedDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "reservedUii": {
                        "type": "string"
                    },
                    "ringTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "rnaCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "rnaTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "stateDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "trainTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "workTime": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AgentLoginAuthVerifyResult": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentLoginId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "authTokens": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "integrations": {
                        "items": {
                            "$ref": "#/components/schemas/AccountIntegrationBase"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AgentLoginChatQueues": {
                "properties": {
                    "agentLoginChatQueueId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "chatQueue": {
                        "$ref": "#/components/schemas/ChatQueue"
                    }
                },
                "type": "object"
            },
            "AgentLoginGate": {
                "properties": {
                    "agentLoginGateId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "agentRank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "destOverride": {
                        "type": "string"
                    },
                    "gate": {
                        "$ref": "#/components/schemas/Gate"
                    }
                },
                "type": "object"
            },
            "AgentLoginProductView": {
                "properties": {
                    "agentGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentLoginId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentLoginType": {
                        "type": "string"
                    },
                    "agentPhone": {
                        "type": "string"
                    },
                    "agentRank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentState": {
                        "type": "string"
                    },
                    "agentType": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "isGhostLogin": {
                        "type": "boolean"
                    },
                    "isOffhook": {
                        "type": "boolean"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "loginDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "pendingDisposition": {
                        "type": "boolean"
                    },
                    "stateDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AgentLoginRequest": {
                "properties": {
                    "defaultDialDest": {
                        "type": "string"
                    },
                    "gateIds": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AgentNameAndType": {
                "properties": {
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentName": {
                        "type": "string"
                    },
                    "agentType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AgentOffhookSession": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "ani": {
                        "type": "string"
                    },
                    "archive": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "carrier": {
                        "type": "string"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "dnisE164": {
                        "type": "string"
                    },
                    "endDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "iqServerId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "monitoring": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "offhookUii": {
                        "type": "string"
                    },
                    "safeArchiveDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "startDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "vruSourceKey": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AgentRequest": {
                "properties": {
                    "accountAccess": {
                        "items": {
                            "$ref": "#/components/schemas/AgentAccountAccess"
                        },
                        "type": "array"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "agentAccountAccess": {
                        "items": {
                            "$ref": "#/components/schemas/AgentAccountAccess"
                        },
                        "type": "array"
                    },
                    "agentChatGroupAccess": {
                        "items": {
                            "$ref": "#/components/schemas/AgentChatGroupAccess"
                        },
                        "type": "array"
                    },
                    "agentChatQueueAccesses": {
                        "$ref": "#/components/schemas/CollectionAgentChatQueueAccess"
                    },
                    "agentDialGroupMembers": {
                        "$ref": "#/components/schemas/CollectionAgentDialGroupMember"
                    },
                    "agentGateAccess": {
                        "items": {
                            "$ref": "#/components/schemas/AgentGateAccess"
                        },
                        "type": "array"
                    },
                    "agentGateGroupAccess": {
                        "items": {
                            "$ref": "#/components/schemas/AgentGateGroupAccess"
                        },
                        "type": "array"
                    },
                    "agentGroup": {
                        "$ref": "#/components/schemas/AgentGroup"
                    },
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentLoadBalance": {
                        "$ref": "#/components/schemas/CollectionAgentLoadBalanceMember"
                    },
                    "agentLoadBalanceMembers": {
                        "$ref": "#/components/schemas/CollectionAgentLoadBalanceMember"
                    },
                    "agentRank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentSkillProfiles": {
                        "items": {
                            "$ref": "#/components/schemas/AgentSkillProfile"
                        },
                        "type": "array"
                    },
                    "agentType": {
                        "enum": [
                            "AGENT",
                            "SUPERVISOR",
                            "MULTI_USER",
                            "MULTI_SUPERVISOR"
                        ],
                        "type": "string"
                    },
                    "allowAgentReports": {
                        "type": "boolean"
                    },
                    "allowAgentStats": {
                        "type": "boolean"
                    },
                    "allowAutoAnswer": {
                        "type": "boolean"
                    },
                    "allowBlended": {
                        "type": "boolean"
                    },
                    "allowCallControl": {
                        "type": "boolean"
                    },
                    "allowCampStats": {
                        "type": "boolean"
                    },
                    "allowChat": {
                        "type": "boolean"
                    },
                    "allowChatStats": {
                        "type": "boolean"
                    },
                    "allowChatVoiceConcurrent": {
                        "type": "boolean"
                    },
                    "allowCrossGateRequeue": {
                        "type": "boolean"
                    },
                    "allowDirectAgentTransfer": {
                        "enum": [
                            "DIRECT_TRANSFER_DISABLED",
                            "ALLOW_DIRECT_TRANSFER_TO_SAME_GROUP",
                            "ALLOW_DIRECT_TRANSFER_TO_ANY_GROUP"
                        ],
                        "type": "string"
                    },
                    "allowEndcallforeveryone": {
                        "type": "boolean"
                    },
                    "allowExternalChat": {
                        "type": "boolean"
                    },
                    "allowFromIpAddresses": {
                        "type": "string"
                    },
                    "allowGateStats": {
                        "type": "boolean"
                    },
                    "allowHangup": {
                        "type": "boolean"
                    },
                    "allowHistoricalDialing": {
                        "type": "boolean"
                    },
                    "allowHold": {
                        "type": "boolean"
                    },
                    "allowInbound": {
                        "type": "boolean"
                    },
                    "allowInboundIntlTransfer": {
                        "type": "boolean"
                    },
                    "allowLeadInserts": {
                        "type": "boolean"
                    },
                    "allowLoginControl": {
                        "type": "boolean"
                    },
                    "allowLoginUpdates": {
                        "type": "boolean"
                    },
                    "allowManualCalls": {
                        "type": "boolean"
                    },
                    "allowManualIntlCalls": {
                        "type": "boolean"
                    },
                    "allowManualIntlTransfer": {
                        "type": "boolean"
                    },
                    "allowManualOutboundGates": {
                        "type": "boolean"
                    },
                    "allowManualPass": {
                        "type": "boolean"
                    },
                    "allowOffHook": {
                        "type": "boolean"
                    },
                    "allowOutbound": {
                        "type": "boolean"
                    },
                    "allowRequeue": {
                        "type": "boolean"
                    },
                    "allowSelfAgentStats": {
                        "type": "boolean"
                    },
                    "allowTransfer": {
                        "type": "boolean"
                    },
                    "altDefaultLoginDest": {
                        "type": "string"
                    },
                    "chatQueueAssignments": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "createdOn": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "defaultAutoAnswerOn": {
                        "type": "boolean"
                    },
                    "defaultLoginDest": {
                        "type": "string"
                    },
                    "dialGroupAssignments": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "directAgentExtension": {
                        "type": "string"
                    },
                    "disableSupervisorMonitoring": {
                        "type": "boolean"
                    },
                    "email": {
                        "type": "string"
                    },
                    "enableSoftphone": {
                        "type": "boolean"
                    },
                    "externalAgentId": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "gateAssignments": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "gatesControlAgentVisibility": {
                        "type": "boolean"
                    },
                    "ghostRnaAction": {
                        "type": "string"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "initLoginBaseState": {
                        "type": "string"
                    },
                    "initLoginBaseStateId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "lastLoginDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "loadBalanceEnabled": {
                        "type": "boolean"
                    },
                    "location": {
                        "type": "string"
                    },
                    "manualOutboundDefaultCallerId": {
                        "type": "string"
                    },
                    "manualOutboundDefaultCallerIdE164": {
                        "type": "string"
                    },
                    "manualOutboundDefaultGate": {
                        "$ref": "#/components/schemas/Gate"
                    },
                    "maxChats": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "multiAccountAgent": {
                        "type": "boolean"
                    },
                    "parentAgentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "password": {
                        "type": "string"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "phoneLoginDialGroup": {
                        "$ref": "#/components/schemas/DialGroup"
                    },
                    "phoneLoginPin": {
                        "type": "string"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    },
                    "rcUserId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "regionalSettings": {
                        "$ref": "#/components/schemas/RegionalSettingRequestResponse"
                    },
                    "showLeadHistory": {
                        "type": "boolean"
                    },
                    "sipPassword": {
                        "type": "string"
                    },
                    "sipSafeUsername": {
                        "type": "string"
                    },
                    "softphoneId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "team": {
                        "type": "string"
                    },
                    "transientAgent": {
                        "type": "boolean"
                    },
                    "transientDelete": {
                        "type": "boolean"
                    },
                    "transientDeleteDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "userManagedByRC": {
                        "type": "boolean"
                    },
                    "username": {
                        "type": "string"
                    },
                    "whereSupervisee": {
                        "items": {
                            "$ref": "#/components/schemas/AgentSupervisor"
                        },
                        "type": "array"
                    },
                    "whereSupervisor": {
                        "$ref": "#/components/schemas/CollectionAgentSupervisor"
                    }
                },
                "type": "object"
            },
            "AgentSkillProfile": {
                "properties": {
                    "chatGroupSkills": {
                        "items": {
                            "$ref": "#/components/schemas/ChatGroupSkill"
                        },
                        "type": "array"
                    },
                    "createdOn": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "gateGroupSkills": {
                        "items": {
                            "$ref": "#/components/schemas/GateGroupSkill"
                        },
                        "type": "array"
                    },
                    "groupSkills": {
                        "items": {
                            "$ref": "#/components/schemas/GateGroupSkill"
                        },
                        "type": "array"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "profileDesc": {
                        "type": "string"
                    },
                    "profileId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "profileName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AgentStats": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "agentChatState": {
                        "type": "string"
                    },
                    "agentGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentGroupName": {
                        "type": "string"
                    },
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentLoginId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentLoginType": {
                        "type": "string"
                    },
                    "agentPhone": {
                        "type": "string"
                    },
                    "agentState": {
                        "type": "string"
                    },
                    "agentType": {
                        "type": "string"
                    },
                    "callAni": {
                        "type": "string"
                    },
                    "callDnis": {
                        "type": "string"
                    },
                    "callSource": {
                        "type": "string"
                    },
                    "callSourceDesc": {
                        "type": "string"
                    },
                    "callUii": {
                        "type": "string"
                    },
                    "callsHandled": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "campaignId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatsHandled": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "currentChatCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "gateId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isDequeueAgent": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isGhostLogin": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isOffhook": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "lastUpdate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "loginDialGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "loginTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "onHoldDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "pendingDisposition": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "pendingDispositionTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "profileName": {
                        "type": "string"
                    },
                    "rna": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "selectable": {
                        "type": "boolean"
                    },
                    "stateTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "successDispositions": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "totalChatTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "totalTalkTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AgentSupervisor": {
                "properties": {
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "supervisorId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AgentSupervisorPK": {
                "properties": {
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "supervisorId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AgentV2": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "agentGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentRank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentType": {
                        "type": "string"
                    },
                    "allowLoginControl": {
                        "type": "boolean"
                    },
                    "allowLoginUpdates": {
                        "type": "boolean"
                    },
                    "altDefaultLoginDest": {
                        "type": "string"
                    },
                    "directAgentExtension": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "enableSoftphone": {
                        "type": "boolean"
                    },
                    "externalAgentId": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "ghostRnaAction": {
                        "type": "string"
                    },
                    "initLoginBaseState": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "manualOutboundDefaultCallerId": {
                        "type": "string"
                    },
                    "maxChats": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "password": {
                        "type": "string"
                    },
                    "phoneLoginPin": {
                        "type": "string"
                    },
                    "rcUserId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "team": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "title": "AgentV2",
                "type": "object"
            },
            "AgentsLoggedInGatesView": {
                "properties": {
                    "gateGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gateId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gateName": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Alert": {
                "properties": {
                    "alertId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "alertMessageBody": {
                        "type": "string"
                    },
                    "alertMessageSubject": {
                        "type": "string"
                    },
                    "alertName": {
                        "type": "string"
                    },
                    "alertScript": {
                        "type": "string"
                    },
                    "intervalMin": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "itemIds": {
                        "type": "string"
                    },
                    "jsonBlob": {
                        "type": "string"
                    },
                    "nextRunTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "productType": {
                        "enum": [
                            "ACCOUNT",
                            "ACD",
                            "AGENT",
                            "CHAT_QUEUE",
                            "OUTBOUND",
                            "VISUAL_IVR",
                            "CLOUD_PROFILE",
                            "CLOUD_DESTINATION",
                            "TRAC_NUMBER",
                            "HTTP_SERVICES",
                            "SCRIPTING",
                            "TN_MANAGER",
                            "SURVEY",
                            "DNIS",
                            "TEAMS",
                            "KNOWLEDGE_BASE",
                            "UTILITIES"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AmdProfile": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "amdAfterGreetingSilence": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "amdBetweenWordSilence": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "amdGreeting": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "amdInitSilence": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "amdMaxWords": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "amdMinWordLength": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "amdProfileId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "amdProfileName": {
                        "type": "string"
                    },
                    "amdSilenceThreshold": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "amdTotalTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "countOfCampaigns": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "systemDefault": {
                        "type": "boolean"
                    },
                    "systemProfile": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ApplicationContext": {
                "properties": {
                    "applicationName": {
                        "type": "string"
                    },
                    "autowireCapableBeanFactory": {
                        "$ref": "#/components/schemas/AutowireCapableBeanFactory"
                    },
                    "beanDefinitionCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "beanDefinitionNames": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "classLoader": {
                        "$ref": "#/components/schemas/ClassLoader"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "environment": {
                        "$ref": "#/components/schemas/Environment"
                    },
                    "id": {
                        "type": "string"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/ApplicationContext"
                    },
                    "parentBeanFactory": {
                        "$ref": "#/components/schemas/BeanFactory"
                    },
                    "startupDate": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "title": "ApplicationContext",
                "type": "object"
            },
            "AssignedDnis": {
                "properties": {
                    "cloudRouteProfile": {
                        "$ref": "#/components/schemas/CloudRouteProfileSkinny"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "dnisDescription": {
                        "type": "string"
                    },
                    "dnisE164": {
                        "type": "string"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "endPointId": {
                        "type": "string"
                    },
                    "endPointType": {
                        "type": "string"
                    },
                    "gate": {
                        "$ref": "#/components/schemas/GateSkinnyAssignable"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "originatingDnis": {
                        "type": "string"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "tracNumber": {
                        "$ref": "#/components/schemas/TracNumberSkinny"
                    },
                    "visualIvr": {
                        "$ref": "#/components/schemas/VisualIvrSkinny"
                    }
                },
                "type": "object"
            },
            "AssignedSmsDnis": {
                "properties": {
                    "chatQueue": {
                        "$ref": "#/components/schemas/ChatQueueSkinny"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "dnisDescription": {
                        "type": "string"
                    },
                    "dnisE164": {
                        "type": "string"
                    },
                    "dnisPool": {
                        "$ref": "#/components/schemas/DnisPoolV2"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "originatingDnis": {
                        "type": "string"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateTime"
                    }
                },
                "type": "object"
            },
            "AudioFileView": {
                "properties": {
                    "fileName": {
                        "type": "string"
                    },
                    "fileSize": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "lastModified": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuditLog": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "actionType": {
                        "enum": [
                            "DELETE",
                            "CREATE",
                            "UPDATE"
                        ],
                        "type": "string"
                    },
                    "affectedEntityJson": {
                        "type": "string"
                    },
                    "auditLogResultList": {
                        "items": {
                            "$ref": "#/components/schemas/AuditLogResult"
                        },
                        "type": "array"
                    },
                    "auditedEntityDescription": {
                        "type": "object"
                    },
                    "auditedEntityId": {
                        "type": "object"
                    },
                    "authUser": {
                        "$ref": "#/components/schemas/AuditLogAuthenticatedUser"
                    },
                    "createTime": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "createTimeAsDateTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuditLogAuthenticatedUser": {
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "fullJson": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuditLogResult": {
                "properties": {
                    "attributeName": {
                        "type": "string"
                    },
                    "classType": {
                        "type": "string"
                    },
                    "newValue": {
                        "type": "object"
                    },
                    "originalValue": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "AuditLogSearchCriteria": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "ascOrDesc": {
                        "enum": [
                            "ASCENDING",
                            "DESCENDING"
                        ],
                        "type": "string"
                    },
                    "auditActions": {
                        "items": {
                            "enum": [
                                "DELETE",
                                "CREATE",
                                "UPDATE"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "auditedEntityId": {
                        "type": "string"
                    },
                    "createUserId": {
                        "type": "string"
                    },
                    "endDateTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "endDateTimeAsUnix": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "orderBy": {
                        "type": "string"
                    },
                    "searchEntities": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "startDateTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "startDateTimeAsUnix": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Auditable": {
                "properties": {
                    "fullPath": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AuthenticatedUser": {
                "properties": {
                    "authToken": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isApiToken": {
                        "type": "boolean"
                    },
                    "masterRightsDocs": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RightsDocument"
                        },
                        "type": "object"
                    },
                    "masterRightsDocsValues": {
                        "$ref": "#/components/schemas/CollectionRightsDocument"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rightsDocs": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/RightsDocument"
                        },
                        "type": "object"
                    },
                    "sourceIp": {
                        "type": "string"
                    },
                    "stayLoggedIn": {
                        "type": "boolean"
                    },
                    "superUser": {
                        "type": "boolean"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "AutowireCapableBeanFactory": {
                "title": "AutowireCapableBeanFactory",
                "type": "object"
            },
            "BaseAgentState": {
                "properties": {
                    "colKey": {
                        "type": "string"
                    },
                    "colLabel": {
                        "type": "string"
                    },
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isCore": {
                        "type": "boolean"
                    },
                    "isRequired": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BaseCsvDto": {
                "type": "object"
            },
            "BatchOperationResult": {
                "properties": {
                    "result": {
                        "items": {
                            "$ref": "#/components/schemas/ProductOperationResult"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "BeanFactory": {
                "title": "BeanFactory",
                "type": "object"
            },
            "Blob": {
                "properties": {
                    "binaryStream": {
                        "$ref": "#/components/schemas/InputStream"
                    }
                },
                "type": "object"
            },
            "BlockedANI": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "ani": {
                        "type": "string"
                    },
                    "aniE164": {
                        "type": "string"
                    },
                    "dateCreated": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "BlockedANIDeleteRequest": {
                "properties": {
                    "ani": {
                        "type": "string"
                    },
                    "aniE164": {
                        "type": "string"
                    },
                    "effectiveAni": {
                        "type": "string"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "BlockedIP": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "dateCreated": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "mask": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CallerIdBucket": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "bucketId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "bucketName": {
                        "type": "string"
                    },
                    "bwOrderId": {
                        "type": "string"
                    },
                    "callerIdBucketNumbers": {
                        "items": {
                            "$ref": "#/components/schemas/CallerIdBucketNumber"
                        },
                        "type": "array"
                    },
                    "callerIdName": {
                        "type": "string"
                    },
                    "createDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "excludedStates": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "forwardingDid": {
                        "type": "string"
                    },
                    "forwardingDidE164": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "orderStatus": {
                        "enum": [
                            "PENDING",
                            "COMPLETE",
                            "FAILED",
                            "DISCONNECT"
                        ],
                        "type": "string"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "CallerIdBucketNumber": {
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "lat": {
                        "format": "double",
                        "type": "number"
                    },
                    "lon": {
                        "format": "double",
                        "type": "number"
                    },
                    "numberId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "tnNumber": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Campaign": {
                "properties": {
                    "abandonMsg": {
                        "type": "string"
                    },
                    "afterCallBaseState": {
                        "type": "string"
                    },
                    "afterCallState": {
                        "$ref": "#/components/schemas/AccountAuxState"
                    },
                    "agentConnectSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "agentPopMessage": {
                        "type": "string"
                    },
                    "agentTermSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "allowLeadInserts": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "allowLeadUpdates": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "amdProfileId": {
                        "$ref": "#/components/schemas/AmdProfile"
                    },
                    "appUrl": {
                        "type": "string"
                    },
                    "aux1Label": {
                        "type": "string"
                    },
                    "aux2Label": {
                        "type": "string"
                    },
                    "aux3Label": {
                        "type": "string"
                    },
                    "aux4Label": {
                        "type": "string"
                    },
                    "aux5Label": {
                        "type": "string"
                    },
                    "billingCode": {
                        "type": "string"
                    },
                    "callerId": {
                        "type": "string"
                    },
                    "callerIdBucket": {
                        "$ref": "#/components/schemas/CallerIdBucket"
                    },
                    "campaignDesc": {
                        "type": "string"
                    },
                    "campaignDispositions": {
                        "$ref": "#/components/schemas/CollectionCampaignDisposition"
                    },
                    "campaignFilterStates": {
                        "$ref": "#/components/schemas/CollectionCampaignFilterStates"
                    },
                    "campaignFilterTimezones": {
                        "$ref": "#/components/schemas/CollectionCampaignFilterTimezones"
                    },
                    "campaignId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "campaignName": {
                        "type": "string"
                    },
                    "campaignPriority": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "campaignRequeueShortcuts": {
                        "$ref": "#/components/schemas/CollectionRequeueShortcut"
                    },
                    "campaignResultDest": {
                        "$ref": "#/components/schemas/ResultFileDestination"
                    },
                    "campaignUnlimitedFieldGroup": {
                        "$ref": "#/components/schemas/CampaignUnlimitedFieldGroup"
                    },
                    "campaignWhitelistTagMembers": {
                        "$ref": "#/components/schemas/CollectionWhitelistTagMembers"
                    },
                    "countryId": {
                        "type": "string"
                    },
                    "customDialZoneGroup": {
                        "$ref": "#/components/schemas/CustomDialZoneGroups"
                    },
                    "dialGroup": {
                        "$ref": "#/components/schemas/DialGroup"
                    },
                    "dialLoadedOrder": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dispositionTimeout": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dncScrubOption": {
                        "enum": [
                            "DO_NOT_SCRUB",
                            "INTERNAL_AND_NATIONAL",
                            "INTERNAL_ONLY",
                            "CELLULAR_AND_INTERNAL",
                            "CELLULAR_ONLY"
                        ],
                        "type": "string"
                    },
                    "enableGlobalPhoneBook": {
                        "type": "boolean"
                    },
                    "endCallMsg": {
                        "type": "string"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "exportFlag": {
                        "type": "boolean"
                    },
                    "filterEnabled": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "filterType": {
                        "type": "string"
                    },
                    "friSched": {
                        "type": "string"
                    },
                    "genericKeyValuePairs": {
                        "type": "string"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "hangupOnDisposition": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isActive": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastPassDts": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "liveAnswerMsg": {
                        "type": "string"
                    },
                    "machAnswerMsg": {
                        "type": "string"
                    },
                    "machineDetect": {
                        "type": "boolean"
                    },
                    "maxDailyPasses": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxDailyPassesInclude": {
                        "type": "string"
                    },
                    "maxDialLimit": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxPasses": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxPassesExclude": {
                        "type": "string"
                    },
                    "maxRingTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxRingTimeTransfer": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minPredictiveCallsHistory": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "monSched": {
                        "type": "string"
                    },
                    "onHoldMsg": {
                        "type": "string"
                    },
                    "passDelayMin": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "pauseRecordingSec": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "perspectiveRecordingMode": {
                        "enum": [
                            "DISABLED",
                            "ALL_AGENT_LEGS"
                        ],
                        "type": "string"
                    },
                    "postCallSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "postDispSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "quotaGroup": {
                        "$ref": "#/components/schemas/QuotaGroup"
                    },
                    "realtimeDncUrl": {
                        "type": "string"
                    },
                    "recordCall": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "recordingInConference": {
                        "type": "boolean"
                    },
                    "recordingSettings": {
                        "enum": [
                            "RECORD_FULL_CALL",
                            "AGENT_FULL_CONTROL_DEFAULT_ON",
                            "AGENT_FULL_CONTROL_DEFAULT_OFF",
                            "AGENT_PAUSE"
                        ],
                        "type": "string"
                    },
                    "requeueType": {
                        "enum": [
                            "ADVANCED",
                            "RESTRICTED"
                        ],
                        "type": "string"
                    },
                    "rescrubInterval": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "satSched": {
                        "type": "string"
                    },
                    "script": {
                        "$ref": "#/components/schemas/Script"
                    },
                    "scrubDisconnectNoanswer": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "seedAbandonRate": {
                        "format": "double",
                        "type": "number"
                    },
                    "seedSuccessRate": {
                        "format": "double",
                        "type": "number"
                    },
                    "showLeadInfo": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "showLeadPasses": {
                        "type": "boolean"
                    },
                    "showListName": {
                        "type": "boolean"
                    },
                    "singleChannelEnabled": {
                        "type": "boolean"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "stopRecordingOnTransfer": {
                        "type": "boolean"
                    },
                    "sunSched": {
                        "type": "string"
                    },
                    "survey": {
                        "$ref": "#/components/schemas/Survey"
                    },
                    "surveyPopType": {
                        "type": "string"
                    },
                    "targetAbandonRate": {
                        "format": "double",
                        "type": "number"
                    },
                    "thuSched": {
                        "type": "string"
                    },
                    "trackSpeedToLead": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "transferCallerId": {
                        "type": "string"
                    },
                    "transferTermSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "tueSched": {
                        "type": "string"
                    },
                    "useGlobalWhitelist": {
                        "type": "boolean"
                    },
                    "wedSched": {
                        "type": "string"
                    },
                    "whisperMsg": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignCriteriaGroupAccess": {
                "properties": {
                    "campaignId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CampaignDisposition": {
                "properties": {
                    "campaign": {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    "contactForwarding": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "createCopy": {
                        "type": "boolean"
                    },
                    "destCampaign": {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    "dispSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "disposition": {
                        "type": "string"
                    },
                    "dispositionId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dncTagLabel": {
                        "type": "string"
                    },
                    "doNotCall": {
                        "type": "boolean"
                    },
                    "dtmfMapping": {
                        "type": "string"
                    },
                    "emailDestinations": {
                        "type": "string"
                    },
                    "emailTemplate": {
                        "$ref": "#/components/schemas/EmailTemplate"
                    },
                    "excludeAbandon": {
                        "type": "boolean"
                    },
                    "isComplete": {
                        "type": "boolean"
                    },
                    "isContact": {
                        "type": "boolean"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isRequeued": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isSuccess": {
                        "type": "boolean"
                    },
                    "mergeOriginal": {
                        "type": "boolean"
                    },
                    "rank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "requeueDelay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "requireNote": {
                        "type": "boolean"
                    },
                    "saveSurvey": {
                        "type": "boolean"
                    },
                    "setAgentFlag": {
                        "type": "boolean"
                    },
                    "termMessage": {
                        "type": "string"
                    },
                    "timeout": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "xfer": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "xferDest": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignFilterStates": {
                "properties": {
                    "campaign": {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    "campaignId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignFilterTimezones": {
                "properties": {
                    "campaign": {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    "campaignId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "timezone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignLead": {
                "properties": {
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    },
                    "auxData1": {
                        "type": "string"
                    },
                    "auxData2": {
                        "type": "string"
                    },
                    "auxData3": {
                        "type": "string"
                    },
                    "auxData4": {
                        "type": "string"
                    },
                    "auxData5": {
                        "type": "string"
                    },
                    "auxExternalUrl": {
                        "type": "string"
                    },
                    "auxGreeting": {
                        "type": "string"
                    },
                    "auxPhone": {
                        "type": "string"
                    },
                    "callerId": {
                        "type": "string"
                    },
                    "campaign": {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    "campaignRedials": {
                        "items": {
                            "$ref": "#/components/schemas/CampaignRedial"
                        },
                        "type": "array"
                    },
                    "city": {
                        "type": "string"
                    },
                    "dupeKeyOverride": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "extendedLeadData": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "externId": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "gateKeeper": {
                        "type": "string"
                    },
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "lastPassDisposition": {
                        "enum": [
                            "ANSWER",
                            "NOANSWER",
                            "BUSY",
                            "MACHINE",
                            "INTERCEPT",
                            "DISCONNECT",
                            "ABANDON",
                            "CONGESTION",
                            "MANUAL_PASS",
                            "INBOUND_CALLBACK",
                            "APP_DNC",
                            "APP_REQUEUE",
                            "APP_REQUEUE_COMPLETE",
                            "APP_REQUEUE_ABANDON",
                            "INBOUND_ABANDON",
                            "API_BLOCKED",
                            "API_ERROR"
                        ],
                        "type": "string"
                    },
                    "lastPassDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "leadId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadPasses": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadPhone": {
                        "type": "string"
                    },
                    "leadPriority": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadState": {
                        "enum": [
                            "ACTIVE",
                            "AGENT-CALLBACK",
                            "CALLBACK-CANCELLED",
                            "CALLBACK",
                            "CANCELLED",
                            "COMPLETE",
                            "DISCONNECTED",
                            "DO-NOT-CALL",
                            "INTERCEPT",
                            "MAX-DIAL-LIMIT",
                            "PAUSED",
                            "PENDING-CALLBACK",
                            "PENDING-ERR",
                            "PENDING-HCI",
                            "PENDING",
                            "READY",
                            "TRANSITIONED",
                            "WHITELIST"
                        ],
                        "type": "string"
                    },
                    "leadTimezone": {
                        "type": "string"
                    },
                    "liveAnswerMessage": {
                        "type": "string"
                    },
                    "loadedDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "machAnswerMessage": {
                        "type": "string"
                    },
                    "maxPasses": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "midName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nextDialTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "quotaTargetIds": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "quotaTargets": {
                        "$ref": "#/components/schemas/CollectionQuotaTarget"
                    },
                    "sortCol": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "stateDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "suffix": {
                        "type": "string"
                    },
                    "suppressed": {
                        "type": "boolean"
                    },
                    "title": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignLeadList": {
                "properties": {
                    "deleteLeads": {
                        "type": "boolean"
                    },
                    "deletedDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "dncTagList": {
                        "type": "string"
                    },
                    "exportFlag": {
                        "type": "boolean"
                    },
                    "lastDncScrubDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "leadsAccepted": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadsConverted": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadsDoNotCall": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadsSupplied": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadsWhitelist": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "listDesc": {
                        "type": "string"
                    },
                    "listId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "listPriority": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "listState": {
                        "enum": [
                            "ACTIVE",
                            "PAUSED",
                            "PENDING_DNC",
                            "LOADING",
                            "DELETED",
                            "READY",
                            "CALLBACKS",
                            "CALLBACKS_AGENT",
                            "DUPLICATES_NOT_MERGED",
                            "DUPLICATES_NOT_MOVED"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "originalFormat": {
                        "type": "string"
                    },
                    "result": {
                        "type": "string"
                    },
                    "unloadFilename": {
                        "type": "string"
                    },
                    "uploadDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "uploadedBy": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignLeadSearchCriteria": {
                "properties": {
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    },
                    "agentDispositions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "auxData1": {
                        "type": "string"
                    },
                    "auxData2": {
                        "type": "string"
                    },
                    "auxData3": {
                        "type": "string"
                    },
                    "auxData4": {
                        "type": "string"
                    },
                    "auxData5": {
                        "type": "string"
                    },
                    "callerId": {
                        "type": "string"
                    },
                    "campaignIds": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "city": {
                        "type": "string"
                    },
                    "emailAddress": {
                        "type": "string"
                    },
                    "externIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "lastPassTimeCriteria": {
                        "$ref": "#/components/schemas/DateTimeComparableSearchField"
                    },
                    "leadIds": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "leadPassesCriteria": {
                        "$ref": "#/components/schemas/ComparableSearchField"
                    },
                    "leadPhoneNum": {
                        "type": "string"
                    },
                    "leadPhoneNumbers": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "leadStates": {
                        "items": {
                            "enum": [
                                "ACTIVE",
                                "AGENT-CALLBACK",
                                "CALLBACK-CANCELLED",
                                "CALLBACK",
                                "CANCELLED",
                                "COMPLETE",
                                "DISCONNECTED",
                                "DO-NOT-CALL",
                                "INTERCEPT",
                                "MAX-DIAL-LIMIT",
                                "PAUSED",
                                "PENDING-CALLBACK",
                                "PENDING-ERR",
                                "PENDING-HCI",
                                "PENDING",
                                "READY",
                                "TRANSITIONED",
                                "WHITELIST"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "leadTimezones": {
                        "items": {
                            "$ref": "#/components/schemas/Timezone"
                        },
                        "type": "array"
                    },
                    "listIds": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "loadedDtsEnd": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "loadedDtsStart": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "nextDialTimeCriteria": {
                        "$ref": "#/components/schemas/DateTimeComparableSearchField"
                    },
                    "orphanedLeadsOnly": {
                        "type": "boolean"
                    },
                    "pendingAgentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "physicalStates": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "suppressed": {
                        "enum": [
                            "ONLY_SUPPRESSED",
                            "ONLY_UNSUPPRESSED",
                            "ALL"
                        ],
                        "type": "string"
                    },
                    "systemDispositions": {
                        "items": {
                            "enum": [
                                "ANSWER",
                                "NOANSWER",
                                "BUSY",
                                "MACHINE",
                                "INTERCEPT",
                                "DISCONNECT",
                                "ABANDON",
                                "CONGESTION",
                                "MANUAL_PASS",
                                "INBOUND_CALLBACK",
                                "APP_DNC",
                                "APP_REQUEUE",
                                "APP_REQUEUE_COMPLETE",
                                "APP_REQUEUE_ABANDON",
                                "INBOUND_ABANDON",
                                "API_BLOCKED",
                                "API_ERROR"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "zip": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignLeadSearchResultsView": {
                "properties": {
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    },
                    "agentDispostion": {
                        "type": "string"
                    },
                    "auxData1": {
                        "type": "string"
                    },
                    "auxData2": {
                        "type": "string"
                    },
                    "auxData3": {
                        "type": "string"
                    },
                    "auxData4": {
                        "type": "string"
                    },
                    "auxData5": {
                        "type": "string"
                    },
                    "auxExternalUrl": {
                        "type": "string"
                    },
                    "auxGreeting": {
                        "type": "string"
                    },
                    "auxPhone": {
                        "type": "string"
                    },
                    "callerId": {
                        "type": "string"
                    },
                    "campaignId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "campaignLead": {
                        "$ref": "#/components/schemas/CampaignLead"
                    },
                    "campaignName": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "dialGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dupeKeyOverride": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "externId": {
                        "type": "string"
                    },
                    "extraData": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "gateKeeper": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "lastPassAgentName": {
                        "type": "string"
                    },
                    "lastPassDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "lastPassDispo": {
                        "type": "string"
                    },
                    "lastPassDisposition": {
                        "type": "string"
                    },
                    "lastPassDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "leadId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadPasses": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadPhone": {
                        "type": "string"
                    },
                    "leadState": {
                        "type": "string"
                    },
                    "leadTimezone": {
                        "type": "string"
                    },
                    "listDesc": {
                        "type": "string"
                    },
                    "listId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "liveAnswerMessage": {
                        "type": "string"
                    },
                    "loadedDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "machAnswerMessage": {
                        "type": "string"
                    },
                    "maxPasses": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "midName": {
                        "type": "string"
                    },
                    "nextDialTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "pendingAgentName": {
                        "type": "string"
                    },
                    "sortCol": {
                        "type": "string"
                    },
                    "speedToLeadAgentConn": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "speedToLeadFirstPass": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "stateDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "suffix": {
                        "type": "string"
                    },
                    "suppressed": {
                        "type": "boolean"
                    },
                    "title": {
                        "type": "string"
                    },
                    "uploadDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "uploadedBy": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignPass": {
                "properties": {
                    "agent": {
                        "$ref": "#/components/schemas/Agent"
                    },
                    "agentDisposition": {
                        "type": "string"
                    },
                    "agentNotes": {
                        "type": "string"
                    },
                    "callStart": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "campaignRedials": {
                        "items": {
                            "$ref": "#/components/schemas/CampaignRedial"
                        },
                        "type": "array"
                    },
                    "dialDuration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialType": {
                        "type": "boolean"
                    },
                    "duration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "export": {
                        "type": "boolean"
                    },
                    "exportFlag": {
                        "type": "boolean"
                    },
                    "leadPhone": {
                        "type": "string"
                    },
                    "passDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "passDisposition": {
                        "enum": [
                            "ANSWER",
                            "NOANSWER",
                            "BUSY",
                            "MACHINE",
                            "INTERCEPT",
                            "DISCONNECT",
                            "ABANDON",
                            "CONGESTION",
                            "MANUAL_PASS",
                            "INBOUND_CALLBACK",
                            "APP_DNC",
                            "APP_REQUEUE",
                            "APP_REQUEUE_COMPLETE",
                            "APP_REQUEUE_ABANDON",
                            "INBOUND_ABANDON",
                            "API_BLOCKED",
                            "API_ERROR"
                        ],
                        "type": "string"
                    },
                    "passNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "passUii": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignPassDisposition": {
                "properties": {
                    "createCopy": {
                        "type": "boolean"
                    },
                    "destCampaign": {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    "isComplete": {
                        "type": "boolean"
                    },
                    "machineDetect": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "mergeOriginal": {
                        "type": "boolean"
                    },
                    "pass": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "passDispositionId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "passEnd": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "requeueDelay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "requeueType": {
                        "enum": [
                            "DEFAULT",
                            "NONE",
                            "STANDARD",
                            "PRIORITY"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignRedial": {
                "properties": {
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "callBackDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "callBackPhone": {
                        "type": "string"
                    },
                    "campaignLead": {
                        "$ref": "#/components/schemas/CampaignLead"
                    },
                    "campaignPass": {
                        "$ref": "#/components/schemas/CampaignPass"
                    },
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "redialId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CampaignStats": {
                "properties": {
                    "campaignId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "campaignName": {
                        "type": "string"
                    },
                    "complete": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "doNotCall": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "maxPasses": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "other": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "paused": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "readyFuture": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "readyNow": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "suppressed": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "targetId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CampaignTimeZoneDialCount": {
                "properties": {
                    "dialFuture": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialNow": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "suppressed": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "timezone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CampaignTimeZoneDialCountWrapper": {
                "properties": {
                    "campaignId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "campaignName": {
                        "type": "string"
                    },
                    "dialGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialGroupName": {
                        "type": "string"
                    },
                    "dialMode": {
                        "enum": [
                            "PREVIEW",
                            "CLICK_TO_TALK",
                            "PREDICTIVE",
                            "POWER",
                            "TCPA_SAFE_MODE"
                        ],
                        "type": "string"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "leadData": {
                        "items": {
                            "$ref": "#/components/schemas/CampaignTimeZoneDialCount"
                        },
                        "type": "array"
                    },
                    "maxPasses": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "passDelayMin": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateTime"
                    }
                },
                "type": "object"
            },
            "CampaignUnlimitedFieldGroup": {
                "properties": {
                    "campaigns": {
                        "items": {
                            "$ref": "#/components/schemas/Campaign"
                        },
                        "type": "array"
                    },
                    "extraDataMappings": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "unlimitedFieldGroupId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ChatGroup": {
                "properties": {
                    "billingKey": {
                        "type": "string"
                    },
                    "chatGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatGroupSkills": {
                        "items": {
                            "$ref": "#/components/schemas/ChatGroupSkill"
                        },
                        "type": "array"
                    },
                    "chatGroups": {
                        "items": {
                            "$ref": "#/components/schemas/ChatQueue"
                        },
                        "type": "array"
                    },
                    "chatQueues": {
                        "items": {
                            "$ref": "#/components/schemas/ChatQueue"
                        },
                        "type": "array"
                    },
                    "createdOn": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ChatGroupSkill": {
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "agentSkillProfiles": {
                        "$ref": "#/components/schemas/CollectionAgentSkillProfile"
                    },
                    "chatRequeueShortcuts": {
                        "items": {
                            "$ref": "#/components/schemas/ChatRequeueShortcut"
                        },
                        "type": "array"
                    },
                    "createdOn": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "skillDesc": {
                        "type": "string"
                    },
                    "skillId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "skillName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChatPriorityGroup": {
                "properties": {
                    "chatPriorityGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatQueues": {
                        "items": {
                            "$ref": "#/components/schemas/ChatQueue"
                        },
                        "type": "array"
                    },
                    "priorityGroupName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChatQueue": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "agentConnectHttpService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "agentConnectMsg": {
                        "type": "string"
                    },
                    "agentFrom": {
                        "type": "string"
                    },
                    "agentMaxAcceptTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentTermHttpService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "agentWrapTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "appUrl": {
                        "type": "string"
                    },
                    "callbackCampaign": {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    "chatGroup": {
                        "$ref": "#/components/schemas/ChatGroup"
                    },
                    "chatPriorityGroup": {
                        "$ref": "#/components/schemas/ChatPriorityGroup"
                    },
                    "chatQueueDescription": {
                        "type": "string"
                    },
                    "chatQueueId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatQueueName": {
                        "type": "string"
                    },
                    "chatQueueOpen": {
                        "type": "boolean"
                    },
                    "clientFrom": {
                        "type": "string"
                    },
                    "companyLogo": {
                        "$ref": "#/components/schemas/Blob"
                    },
                    "createdOn": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "dequeueHttpService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "dispTimeout": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "friSched": {
                        "type": "string"
                    },
                    "gateQueueAnips": {
                        "items": {
                            "$ref": "#/components/schemas/ChatQueueAnip"
                        },
                        "type": "array"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "idleTimeout": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "longChatTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxQueueEvent": {
                        "type": "string"
                    },
                    "maxQueueLimit": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "monSched": {
                        "type": "string"
                    },
                    "newChatHttpService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "noAgentEvent": {
                        "type": "string"
                    },
                    "observeDst": {
                        "type": "boolean"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "postChatHttpService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "postDispHttpService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "queueClosedEvent": {
                        "type": "string"
                    },
                    "queuePriority": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "requeueShortcutAccess": {
                        "items": {
                            "$ref": "#/components/schemas/ChatRequeueShortcutGroupChatQueueAccess"
                        },
                        "type": "array"
                    },
                    "requeueType": {
                        "type": "string"
                    },
                    "requireCaptcha": {
                        "type": "boolean"
                    },
                    "satSched": {
                        "type": "string"
                    },
                    "script": {
                        "$ref": "#/components/schemas/Script"
                    },
                    "shortChatTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "slaTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "specialIpEvent": {
                        "type": "string"
                    },
                    "sunSched": {
                        "type": "string"
                    },
                    "surveyId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "surveyPopType": {
                        "type": "string"
                    },
                    "throttleCalls": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "throttleDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "throttleIpEvent": {
                        "type": "string"
                    },
                    "thuSched": {
                        "type": "string"
                    },
                    "tueSched": {
                        "type": "string"
                    },
                    "wedSched": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChatQueueAnip": {
                "properties": {
                    "anip": {
                        "type": "string"
                    },
                    "chatQueueId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dateAdded": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChatQueueChatWidgetAccess": {
                "properties": {
                    "chatQueue": {
                        "$ref": "#/components/schemas/ChatQueue"
                    },
                    "chatQueueId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatWidget": {
                        "$ref": "#/components/schemas/ChatWidget"
                    },
                    "guid": {
                        "type": "string"
                    },
                    "jsonMetadata": {
                        "type": "string"
                    },
                    "widgetId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ChatQueueClosedMessage": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "chatQueueClosedMessageId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatQueueId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "jsonBaggage": {
                        "type": "string"
                    },
                    "sourceIp": {
                        "type": "string"
                    },
                    "timeStamp": {
                        "$ref": "#/components/schemas/DateTime"
                    }
                },
                "type": "object"
            },
            "ChatQueueDisposition": {
                "properties": {
                    "chatGroupSkill": {
                        "$ref": "#/components/schemas/ChatGroupSkill"
                    },
                    "chatQueue": {
                        "$ref": "#/components/schemas/ChatQueue"
                    },
                    "destChatQueue": {
                        "$ref": "#/components/schemas/ChatQueue"
                    },
                    "dispServiceId": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "disposition": {
                        "type": "string"
                    },
                    "dispositionId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "emailDestinations": {
                        "type": "string"
                    },
                    "emailTemplate": {
                        "$ref": "#/components/schemas/EmailTemplate"
                    },
                    "isComplete": {
                        "type": "boolean"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isSuccess": {
                        "type": "boolean"
                    },
                    "rank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "timeout": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ChatQueueEvent": {
                "properties": {
                    "chatQueue": {
                        "$ref": "#/components/schemas/ChatQueue"
                    },
                    "eventDuration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "eventId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "eventRank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "queueEvent": {
                        "type": "string"
                    },
                    "sendMessage": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChatQueueScheduleOverride": {
                "properties": {
                    "chatQueue": {
                        "$ref": "#/components/schemas/ChatQueue"
                    },
                    "overrideClosedEvent": {
                        "type": "string"
                    },
                    "overrideDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "overrideLabel": {
                        "type": "string"
                    },
                    "overrideSched": {
                        "type": "string"
                    },
                    "scheduleOverrideId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ChatQueueSkinny": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "chatGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatQueueId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatQueueName": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ChatQueueSpecialAnip": {
                "properties": {
                    "anip": {
                        "type": "string"
                    },
                    "dateAdded": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "id": {
                        "type": "object"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChatRequeueShortcut": {
                "properties": {
                    "chatGroupSkill": {
                        "$ref": "#/components/schemas/ChatGroupSkill"
                    },
                    "chatRequeueShortcutId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "requeueGroup": {
                        "$ref": "#/components/schemas/ChatGroup"
                    },
                    "requeueQueue": {
                        "$ref": "#/components/schemas/ChatQueue"
                    }
                },
                "type": "object"
            },
            "ChatRequeueShortcutGroup": {
                "properties": {
                    "chatRequeueShortcutGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChatRequeueShortcutGroupChatQueueAccess": {
                "properties": {
                    "chatQueue": {
                        "$ref": "#/components/schemas/ChatQueue"
                    },
                    "chatQueueId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatRequeueShortcutGroup": {
                        "$ref": "#/components/schemas/ChatRequeueShortcutGroup"
                    },
                    "chatRequeueShortcutGroupId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ChatRoom": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "permissionType": {
                        "enum": [
                            "ALL",
                            "EXPLICIT"
                        ],
                        "type": "string"
                    },
                    "roomDesc": {
                        "type": "string"
                    },
                    "roomId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "roomName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChatStats": {
                "properties": {
                    "abandoned": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "accepted": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "active": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "available": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatQueueGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatQueueGroupName": {
                        "type": "string"
                    },
                    "chatQueueId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatQueueName": {
                        "type": "string"
                    },
                    "deflected": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "inQueue": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastUpdate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "longestInQueue": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "presented": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "routing": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "schedule": {
                        "type": "string"
                    },
                    "scheduleOverride": {
                        "type": "string"
                    },
                    "selectable": {
                        "type": "boolean"
                    },
                    "staffed": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "totalAbandonTime": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "totalAnswerTime": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "totalChatTime": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "totalQueueTime": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ChatWidget": {
                "properties": {
                    "chatWidgetId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "createdDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "json": {
                        "type": "string"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "updatedDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "widgetDesc": {
                        "type": "string"
                    },
                    "widgetId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "widgetName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Chronology": {
                "properties": {
                    "zone": {
                        "$ref": "#/components/schemas/DateTimeZone"
                    }
                },
                "type": "object"
            },
            "ClassLoader": {
                "properties": {
                    "parent": {
                        "$ref": "#/components/schemas/ClassLoader"
                    }
                },
                "title": "ClassLoader",
                "type": "object"
            },
            "CloudRouteAssignedDestination": {
                "properties": {
                    "allocationPercent": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "allocationPercentHours": {
                        "type": "string"
                    },
                    "assignedDestinationId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudDestination": {
                        "$ref": "#/components/schemas/CloudRouteDestination"
                    },
                    "cloudProfile": {
                        "$ref": "#/components/schemas/CloudRouteProfile"
                    },
                    "countryCode": {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    "destinationType": {
                        "enum": [
                            "STANDARD",
                            "DID",
                            "SIP",
                            "IN_NETWORK_DID",
                            "ACD",
                            "IVR",
                            "IVR_STUDIO"
                        ],
                        "type": "string"
                    },
                    "dtmfEventsEnabled": {
                        "type": "boolean"
                    },
                    "enablePrerouteHttp": {
                        "type": "boolean"
                    },
                    "forceAcdQueue": {
                        "type": "boolean"
                    },
                    "outboundCallerId": {
                        "type": "string"
                    },
                    "overrideFlag": {
                        "type": "boolean"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "rank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "repeatIndexStart": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ringDuration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "routeDestination": {
                        "type": "string"
                    },
                    "takeBackDtmf": {
                        "type": "string"
                    },
                    "ttAccept": {
                        "type": "boolean"
                    },
                    "ttAcceptTime": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CloudRouteAssignedOverride": {
                "properties": {
                    "assignedDestination": {
                        "$ref": "#/components/schemas/CloudRouteAssignedDestination"
                    },
                    "assignedOverrideId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "countryId": {
                        "type": "string"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "routeDestination": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CloudRouteDestination": {
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "address": {
                        "type": "string"
                    },
                    "authKey": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "cloudDestinationId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudRouteGroup": {
                        "$ref": "#/components/schemas/CloudRouteGroup"
                    },
                    "countryCode": {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "destinationDesc": {
                        "type": "string"
                    },
                    "destinationName": {
                        "type": "string"
                    },
                    "destinationType": {
                        "enum": [
                            "STANDARD",
                            "DID",
                            "SIP",
                            "IN_NETWORK_DID",
                            "ACD",
                            "IVR",
                            "IVR_STUDIO"
                        ],
                        "type": "string"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "forceAcdQueue": {
                        "type": "boolean"
                    },
                    "friSched": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "lat": {
                        "format": "double",
                        "type": "number"
                    },
                    "lon": {
                        "format": "double",
                        "type": "number"
                    },
                    "maxConcurrent": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxConcurrentHours": {
                        "type": "string"
                    },
                    "maxConcurrentType": {
                        "type": "string"
                    },
                    "monSched": {
                        "type": "string"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "prerouteHttpUrl": {
                        "type": "string"
                    },
                    "ringDuration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "routeDestination": {
                        "type": "string"
                    },
                    "satSched": {
                        "type": "string"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "state": {
                        "type": "string"
                    },
                    "sunSched": {
                        "type": "string"
                    },
                    "thuSched": {
                        "type": "string"
                    },
                    "ttAccept": {
                        "type": "boolean"
                    },
                    "ttAcceptTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "tueSched": {
                        "type": "string"
                    },
                    "wedSched": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CloudRouteDestinationOverride": {
                "properties": {
                    "cloudDestination": {
                        "$ref": "#/components/schemas/CloudRouteDestination"
                    },
                    "countryId": {
                        "type": "string"
                    },
                    "destOverrideId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "routeDestination": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CloudRouteDtmfEvent": {
                "properties": {
                    "cloudRouteDtmfId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dtmfCode": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dtmfEventData": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CloudRouteGroup": {
                "properties": {
                    "cloudGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudRouteDestinations": {
                        "$ref": "#/components/schemas/CollectionCloudRouteDestination"
                    },
                    "cloudRouteProfiles": {
                        "$ref": "#/components/schemas/CollectionCloudRouteProfile"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "CloudRouteProfile": {
                "properties": {
                    "billingCode": {
                        "type": "string"
                    },
                    "billingKey": {
                        "type": "string"
                    },
                    "callConnSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "callEndSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "callStartSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "cloudProfileId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudRouteGroup": {
                        "$ref": "#/components/schemas/CloudRouteGroup"
                    },
                    "dequeueDelay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "endcallMsg": {
                        "type": "string"
                    },
                    "geoMaxDistance": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "introMsg": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "longCall": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "outboundCallerId": {
                        "type": "string"
                    },
                    "percentAllocType": {
                        "type": "string"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "profileDesc": {
                        "type": "string"
                    },
                    "profileName": {
                        "type": "string"
                    },
                    "recordCall": {
                        "type": "boolean"
                    },
                    "repeatCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "repeatDelay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "revMatch": {
                        "type": "boolean"
                    },
                    "routeExhaustedAction": {
                        "type": "string"
                    },
                    "routingType": {
                        "type": "string"
                    },
                    "shortCall": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "stickyDestinationType": {
                        "type": "string"
                    },
                    "takeBackMsg": {
                        "type": "string"
                    },
                    "voicemailEmail": {
                        "type": "string"
                    },
                    "whisperMsg": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CloudRouteProfileSkinny": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "cloudGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "cloudProfileId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "profileName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CollectionAgent": {
                "type": "object"
            },
            "CollectionAgentAccountAccess": {
                "type": "object"
            },
            "CollectionAgentBlockMonitor": {
                "type": "object"
            },
            "CollectionAgentChatQueueAccess": {
                "type": "object"
            },
            "CollectionAgentDialGroupMember": {
                "type": "object"
            },
            "CollectionAgentGateAccess": {
                "type": "object"
            },
            "CollectionAgentLoadBalanceMember": {
                "type": "object"
            },
            "CollectionAgentLoginChatQueues": {
                "type": "object"
            },
            "CollectionAgentLoginGate": {
                "type": "object"
            },
            "CollectionAgentSkillProfile": {
                "type": "object"
            },
            "CollectionAgentSupervisor": {
                "type": "object"
            },
            "CollectionCampaign": {
                "type": "object"
            },
            "CollectionCampaignDisposition": {
                "type": "object"
            },
            "CollectionCampaignFilterStates": {
                "type": "object"
            },
            "CollectionCampaignFilterTimezones": {
                "type": "object"
            },
            "CollectionCloudRouteDestination": {
                "type": "object"
            },
            "CollectionCloudRouteProfile": {
                "type": "object"
            },
            "CollectionCustomCriteriaPlan": {
                "type": "object"
            },
            "CollectionCustomDialZone": {
                "type": "object"
            },
            "CollectionCustomDialZoneGroups": {
                "type": "object"
            },
            "CollectionDncTag": {
                "type": "object"
            },
            "CollectionJobInfo": {
                "type": "object"
            },
            "CollectionMultipartFile": {
                "type": "object"
            },
            "CollectionQuotaTarget": {
                "type": "object"
            },
            "CollectionRemoteHttpService": {
                "type": "object"
            },
            "CollectionRemoteHttpServiceInput": {
                "type": "object"
            },
            "CollectionReportMetaData": {
                "type": "object"
            },
            "CollectionRequeueShortcut": {
                "type": "object"
            },
            "CollectionRightsDocument": {
                "type": "object"
            },
            "CollectionState": {
                "type": "object"
            },
            "CollectionSurvey": {
                "type": "object"
            },
            "CollectionTracLocation": {
                "type": "object"
            },
            "CollectionVisualIvr": {
                "type": "object"
            },
            "CollectionWhitelistTagMembers": {
                "type": "object"
            },
            "Collection_AgentAccountAccess_": {
                "type": "object"
            },
            "Collection_AgentChatQueueAccess_": {
                "type": "object"
            },
            "Collection_AgentDialGroupMember_": {
                "type": "object"
            },
            "Collection_AgentGateAccess_": {
                "type": "object"
            },
            "Collection_AgentLoadBalanceMember_": {
                "type": "object"
            },
            "Collection_AgentSkillProfile_": {
                "type": "object"
            },
            "Collection_AgentSupervisor_": {
                "type": "object"
            },
            "Collection_Agent_": {
                "type": "object"
            },
            "Collection_CampaignDisposition_": {
                "type": "object"
            },
            "Collection_CampaignFilterStates_": {
                "type": "object"
            },
            "Collection_CampaignFilterTimezones_": {
                "type": "object"
            },
            "Collection_Campaign_": {
                "type": "object"
            },
            "Collection_CustomDialZone_": {
                "type": "object"
            },
            "Collection_GateSkinny_": {
                "type": "object"
            },
            "Collection_QuotaTarget_": {
                "type": "object"
            },
            "Collection_RequeueShortcut_": {
                "type": "object"
            },
            "Collection_WhitelistTagMembers_": {
                "type": "object"
            },
            "ComparableSearchField": {
                "properties": {
                    "operator": {
                        "enum": [
                            "GREATER_THAN",
                            "LESS_THAN",
                            "EQUALS"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Contact": {
                "properties": {
                    "businessPhone": {
                        "type": "string"
                    },
                    "company": {
                        "type": "string"
                    },
                    "department": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "emailAsLoginName": {
                        "type": "boolean"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "jobTitle": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "mobilePhone": {
                        "type": "string"
                    }
                },
                "title": "Contact",
                "type": "object"
            },
            "Country": {
                "properties": {
                    "countryCode": {
                        "type": "string"
                    },
                    "countryId": {
                        "description": "Country code i ISO 3166-1 alpha-3 format",
                        "type": "string"
                    },
                    "countryName": {
                        "type": "string"
                    },
                    "maxAniLength": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxUtcOffset": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minAniLength": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minUtcOffset": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "countryCode"
                ],
                "type": "object"
            },
            "CountryCode": {
                "properties": {
                    "countryCode": {
                        "type": "string"
                    },
                    "countryId": {
                        "type": "string"
                    },
                    "countryName": {
                        "type": "string"
                    },
                    "maxAniLength": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxUtcOffset": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minAniLength": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minUtcOffset": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CustomCriteriaGroup": {
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "customCriteriaPlan": {
                        "$ref": "#/components/schemas/CollectionCustomCriteriaPlan"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "CustomCriteriaPlan": {
                "properties": {
                    "criteriaJson": {
                        "type": "string"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "planId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateTime"
                    }
                },
                "type": "object"
            },
            "CustomDialZone": {
                "properties": {
                    "fridaySchedule": {
                        "type": "string"
                    },
                    "mondaySchedule": {
                        "type": "string"
                    },
                    "saturdaySchedule": {
                        "type": "string"
                    },
                    "sundaySchedule": {
                        "type": "string"
                    },
                    "thursdaySchedule": {
                        "type": "string"
                    },
                    "tuesdaySchedule": {
                        "type": "string"
                    },
                    "wednesdaySchedule": {
                        "type": "string"
                    },
                    "zoneDesc": {
                        "type": "string"
                    },
                    "zoneGroup": {
                        "$ref": "#/components/schemas/CustomDialZoneGroups"
                    },
                    "zoneGroups": {
                        "$ref": "#/components/schemas/CustomDialZoneGroups"
                    },
                    "zoneId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "zoneKey": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CustomDialZoneGroups": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "baseTimezone": {
                        "type": "string"
                    },
                    "customDialZones": {
                        "$ref": "#/components/schemas/CollectionCustomDialZone"
                    },
                    "zoneGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "zoneGroupName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Dashboard": {
                "properties": {
                    "creationDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "data": {
                        "$ref": "#/components/schemas/JsonNode"
                    },
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "shared": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Role": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "roleType": {
                  "type": "string",
                  "enum": [
                    "SUPER_USER",
                    "USER",
                    "MANAGE_USERS",
                    "MANAGE_RIGHTS",
                    "ACCESS_SIBLINGS",
                    "ACCESS_AUDIT_LOG",
                    "ACCESS_GOODDATA_ADMIN",
                    "ACCESS_GOODDATA_EDITOR",
                    "ACCESS_GOODDATA_EXPLORER",
                    "ACCESS_GOODDATA_VIEWER",
                    "ACCESS_GOODDATA_EMBEDDED_EXPLORER",
                    "ACCESS_GOODDATA_EMBEDDED_DASHBOARD",
                    "ASSUME_USERS",
                    "REPORT_ADMINISTRATIVE_USER",
                    "NO_ACCESS"
                  ]
                }
              }
            },
            "DateTime": {
                "properties": {
                    "afterNow": {
                        "type": "boolean"
                    },
                    "beforeNow": {
                        "type": "boolean"
                    },
                    "centuryOfEra": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chronology": {
                        "$ref": "#/components/schemas/Chronology"
                    },
                    "dayOfMonth": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dayOfWeek": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dayOfYear": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "equalNow": {
                        "type": "boolean"
                    },
                    "era": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "hourOfDay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "millis": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "millisOfDay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "millisOfSecond": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minuteOfDay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minuteOfHour": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "monthOfYear": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "secondOfDay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "secondOfMinute": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "weekOfWeekyear": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "weekyear": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "year": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "yearOfCentury": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "yearOfEra": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "zone": {
                        "$ref": "#/components/schemas/DateTimeZone"
                    }
                },
                "type": "object"
            },
            "DateTimeComparableSearchField": {
                "properties": {
                    "operator": {
                        "enum": [
                            "GREATER_THAN",
                            "LESS_THAN",
                            "EQUALS"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/components/schemas/DateTime"
                    }
                },
                "type": "object"
            },
            "DateTimeField": {
                "properties": {
                    "durationField": {
                        "$ref": "#/components/schemas/DurationField"
                    },
                    "leapDurationField": {
                        "$ref": "#/components/schemas/DurationField"
                    },
                    "lenient": {
                        "type": "boolean"
                    },
                    "maximumValue": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minimumValue": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rangeDurationField": {
                        "$ref": "#/components/schemas/DurationField"
                    },
                    "supported": {
                        "type": "boolean"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DateTimeFieldType"
                    }
                },
                "type": "object"
            },
            "DateTimeFieldType": {
                "properties": {
                    "durationType": {
                        "$ref": "#/components/schemas/DurationFieldType"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rangeDurationType": {
                        "$ref": "#/components/schemas/DurationFieldType"
                    }
                },
                "type": "object"
            },
            "DateTimeZone": {
                "properties": {
                    "fixed": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeferredResultMessage": {
                "properties": {
                    "result": {
                        "type": "object"
                    },
                    "setOrExpired": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "DeleteDnisRequest": {
                "properties": {
                    "dnis": {
                        "type": "string"
                    },
                    "dnisE164": {
                        "type": "string"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "DestinationCampaignRequest": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "campaignId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialGroupId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DestinationParams": {
                "properties": {
                    "destinationType": {
                        "enum": [
                            "EMAIL",
                            "FILE_TRANSFER",
                            "SECURE_FILE_TRANSFER"
                        ],
                        "type": "string"
                    },
                    "isCompress": {
                        "type": "boolean"
                    },
                    "titleDateTimeFormat": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Device": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "linePooling": {
                        "type": "string"
                    },
                    "phoneLines": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DialGroup": {
                "properties": {
                    "agentDialGroupMembers": {
                        "$ref": "#/components/schemas/CollectionAgentDialGroupMember"
                    },
                    "agentsReady": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "allowLeadSearch": {
                        "type": "string"
                    },
                    "allowPreviewLeadFilters": {
                        "type": "boolean"
                    },
                    "billingKey": {
                        "type": "string"
                    },
                    "campaigns": {
                        "$ref": "#/components/schemas/CollectionCampaign"
                    },
                    "dialGroupDesc": {
                        "type": "string"
                    },
                    "dialGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialGroupName": {
                        "type": "string"
                    },
                    "dialMode": {
                        "enum": [
                            "PREVIEW",
                            "CLICK_TO_TALK",
                            "PREDICTIVE",
                            "POWER",
                            "TCPA_SAFE_MODE"
                        ],
                        "type": "string"
                    },
                    "enableAbsolutePriority": {
                        "type": "boolean"
                    },
                    "enableAgentFilter": {
                        "type": "boolean"
                    },
                    "enableCallbacksAfterMaxDailyPass": {
                        "type": "boolean"
                    },
                    "enableCallbacksAfterMaxpass": {
                        "type": "boolean"
                    },
                    "enableListPriority": {
                        "type": "boolean"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "hciEnabled": {
                        "enum": [
                            "DISABLED",
                            "HCI_FETCH",
                            "HCI_PACING"
                        ],
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "maxLeadsReturned": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxPorts": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minPredictiveAgents": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "outdialServerGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "progressiveCallDelay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "progressiveEnabled": {
                        "type": "boolean"
                    },
                    "realTimeAgentData": {
                        "type": "boolean"
                    },
                    "requireFetchedLeadsCalled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "DialGroupTimeZoneDialCountWrapper": {
                "properties": {
                    "dialGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialGroupName": {
                        "type": "string"
                    },
                    "dialMode": {
                        "enum": [
                            "PREVIEW",
                            "CLICK_TO_TALK",
                            "PREDICTIVE",
                            "POWER",
                            "TCPA_SAFE_MODE"
                        ],
                        "type": "string"
                    },
                    "leadData": {
                        "items": {
                            "$ref": "#/components/schemas/CampaignTimeZoneDialCount"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DncListEntry": {
                "properties": {
                    "addedBy": {
                        "type": "string"
                    },
                    "addedDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "countryCode": {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    "dncTagId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DncTag": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "dncTagId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dncTagLabel": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DnisBulkUpdateRespose": {
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "updatedRows": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DnisListPreviewResponse": {
                "properties": {
                    "records": {
                        "items": {
                            "$ref": "#/components/schemas/BaseCsvDto"
                        },
                        "type": "array"
                    },
                    "uploadStatus": {
                        "$ref": "#/components/schemas/DnisResponseValidation"
                    }
                },
                "type": "object"
            },
            "DnisListRequest": {
                "properties": {
                    "accountIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "dnisState": {
                        "type": "string"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    },
                    "searchText": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DnisMigrationResult": {
                "properties": {
                    "tbl_acd_dnis_pool": {
                        "$ref": "#/components/schemas/DnisMigrationResultEntry"
                    },
                    "tbl_acd_gate_dnis": {
                        "$ref": "#/components/schemas/DnisMigrationResultEntry"
                    },
                    "tbl_acd_sms_dnis": {
                        "$ref": "#/components/schemas/DnisMigrationResultEntry"
                    }
                },
                "type": "object"
            },
            "DnisMigrationResultEntry": {
                "properties": {
                    "converted": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "convertedAsIs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "total": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DnisNotification": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "missCall": {
                        "type": "boolean"
                    },
                    "notificationId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "notifyDest": {
                        "type": "string"
                    },
                    "shortCall": {
                        "type": "boolean"
                    },
                    "voicemail": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "DnisPool": {
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "assignedDnis": {
                        "$ref": "#/components/schemas/AssignedDnis"
                    },
                    "assignedSmsDnis": {
                        "$ref": "#/components/schemas/AssignedSmsDnis"
                    },
                    "carrier": {
                        "type": "string"
                    },
                    "customAppString": {
                        "type": "string"
                    },
                    "dateCreated": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "dnisCategory": {
                        "type": "string"
                    },
                    "dnisDescription": {
                        "type": "string"
                    },
                    "dnisE164": {
                        "type": "string"
                    },
                    "dnisManagedByRC": {
                        "type": "boolean"
                    },
                    "inboundContext": {
                        "type": "string"
                    },
                    "lastModified": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "lastModifiedBy": {
                        "type": "string"
                    },
                    "mediaCode": {
                        "type": "string"
                    },
                    "mediaFormat": {
                        "type": "string"
                    },
                    "mediaIsci": {
                        "type": "string"
                    },
                    "mediaLength": {
                        "type": "string"
                    },
                    "mediaMarket": {
                        "type": "string"
                    },
                    "mediaNetwork": {
                        "type": "string"
                    },
                    "mediaUrl": {
                        "type": "string"
                    },
                    "mediaVersion": {
                        "type": "string"
                    },
                    "mediaWebSourcecode": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "originatingDnis": {
                        "type": "string"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    },
                    "platformId": {
                        "type": "string"
                    },
                    "reservedAccount": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "reservedAccountId": {
                        "type": "string"
                    },
                    "resporg": {
                        "type": "string"
                    },
                    "smsEnabled": {
                        "type": "boolean"
                    },
                    "twilioApiKey": {
                        "type": "string"
                    },
                    "vendorId": {
                        "type": "string"
                    },
                    "vruNetworkId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DnisPoolUpdateRequest": {
                "properties": {
                    "chatQueueId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dnisPool": {
                        "$ref": "#/components/schemas/DnisPoolV2"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "product": {
                        "enum": [
                            "ACCOUNT",
                            "ACD",
                            "AGENT",
                            "CHAT_QUEUE",
                            "OUTBOUND",
                            "VISUAL_IVR",
                            "CLOUD_PROFILE",
                            "CLOUD_DESTINATION",
                            "TRAC_NUMBER",
                            "HTTP_SERVICES",
                            "SCRIPTING",
                            "TN_MANAGER",
                            "SURVEY",
                            "DNIS",
                            "TEAMS",
                            "KNOWLEDGE_BASE",
                            "UTILITIES"
                        ],
                        "type": "string"
                    },
                    "productId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "smsEndDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "smsStartDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "unassignProduct": {
                        "type": "boolean"
                    },
                    "unassignSmsProduct": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "DnisPoolV2": {
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "assignedDnis": {
                        "$ref": "#/components/schemas/AssignedDnis"
                    },
                    "assignedSmsDnis": {
                        "$ref": "#/components/schemas/AssignedSmsDnis"
                    },
                    "carrier": {
                        "type": "string"
                    },
                    "customAppString": {
                        "type": "string"
                    },
                    "dateCreated": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "dnisCategory": {
                        "type": "string"
                    },
                    "dnisDescription": {
                        "type": "string"
                    },
                    "dnisE164": {
                        "type": "string"
                    },
                    "inboundContext": {
                        "type": "string"
                    },
                    "lastModified": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "lastModifiedBy": {
                        "type": "string"
                    },
                    "mediaCode": {
                        "type": "string"
                    },
                    "mediaFormat": {
                        "type": "string"
                    },
                    "mediaIsci": {
                        "type": "string"
                    },
                    "mediaLength": {
                        "type": "string"
                    },
                    "mediaMarket": {
                        "type": "string"
                    },
                    "mediaNetwork": {
                        "type": "string"
                    },
                    "mediaUrl": {
                        "type": "string"
                    },
                    "mediaVersion": {
                        "type": "string"
                    },
                    "mediaWebSourcecode": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "originatingDnis": {
                        "type": "string"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    },
                    "platformId": {
                        "type": "string"
                    },
                    "reservedAccount": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "reservedAccountId": {
                        "type": "string"
                    },
                    "resporg": {
                        "type": "string"
                    },
                    "smsEnabled": {
                        "type": "boolean"
                    },
                    "twilioApiKey": {
                        "type": "string"
                    },
                    "vendorId": {
                        "type": "string"
                    },
                    "vruNetworkId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DnisResponseValidation": {
                "properties": {
                    "errorCode": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "totalRecords": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "validRecords": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "validated": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "DurationField": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "precise": {
                        "type": "boolean"
                    },
                    "supported": {
                        "type": "boolean"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DurationFieldType"
                    },
                    "unitMillis": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DurationFieldType": {
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EVUser": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "ev_user_type": {
                        "enum": [
                            "admin",
                            "agent"
                        ],
                        "type": "string"
                    },
                    "ev_user_uid": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "rc_sync": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Element": {
                "properties": {
                    "elements": {
                        "items": {
                            "$ref": "#/components/schemas/Element"
                        },
                        "type": "array"
                    },
                    "isComplex": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EmailTemplate": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "allowBccChange": {
                        "type": "boolean"
                    },
                    "allowBodyChange": {
                        "type": "boolean"
                    },
                    "allowCcChange": {
                        "type": "boolean"
                    },
                    "allowFromChange": {
                        "type": "boolean"
                    },
                    "allowSubjectChange": {
                        "type": "boolean"
                    },
                    "allowToChange": {
                        "type": "boolean"
                    },
                    "emailBcc": {
                        "type": "string"
                    },
                    "emailCc": {
                        "type": "string"
                    },
                    "emailFrom": {
                        "type": "string"
                    },
                    "emailRte": {
                        "type": "string"
                    },
                    "emailSubject": {
                        "type": "string"
                    },
                    "emailTemplateId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "emailTo": {
                        "type": "string"
                    },
                    "sendFormat": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EmailTemplateAttachment": {
                "properties": {
                    "attachmentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "attachmentName": {
                        "type": "string"
                    },
                    "attachmentSize": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "EmbeddedChatWidget": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "isOpen": {
                        "type": "boolean"
                    },
                    "open": {
                        "type": "boolean"
                    },
                    "showPoweredBy": {
                        "type": "boolean"
                    },
                    "widgetConfiguration": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Environment": {
                "properties": {
                    "activeProfiles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "defaultProfiles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "title": "Environment",
                "type": "object"
            },
            "Error": {
                "properties": {
                    "details": {
                        "type": "string"
                    },
                    "generalMessage": {
                        "type": "string"
                    },
                    "requestUri": {
                        "type": "string"
                    },
                    "timestamp": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "Errors": {
                "properties": {
                    "cause": {
                        "type": "string"
                    },
                    "details": {
                        "type": "string"
                    },
                    "developerMessage": {
                        "type": "string"
                    },
                    "generalMessage": {
                        "type": "string"
                    },
                    "requestUri": {
                        "type": "string"
                    },
                    "timestamp": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "validationErrors": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationErrorData"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ExtendedLeadData": {
                "properties": {
                    "important": {
                        "type": "string"
                    },
                    "interested": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "FilteredIdView": {
                "properties": {
                    "permission": {
                        "enum": [
                            "CREATE",
                            "READ",
                            "UPDATE",
                            "DELETE",
                            "REPORT"
                        ],
                        "type": "string"
                    },
                    "products": {
                        "items": {
                            "enum": [
                                "ACCOUNT",
                                "ACD",
                                "AGENT",
                                "CHAT_QUEUE",
                                "OUTBOUND",
                                "VISUAL_IVR",
                                "CLOUD_PROFILE",
                                "CLOUD_DESTINATION",
                                "TRAC_NUMBER",
                                "HTTP_SERVICES",
                                "SCRIPTING",
                                "TN_MANAGER",
                                "SURVEY",
                                "DNIS",
                                "TEAMS",
                                "KNOWLEDGE_BASE",
                                "UTILITIES"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "permission",
                    "products"
                ],
                "type": "object"
            },
            "Gate": {
                "properties": {
                    "abandonCampaign": {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    "acceptTime": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "afterCallBaseState": {
                        "type": "string"
                    },
                    "afterCallState": {
                        "$ref": "#/components/schemas/AccountAuxState"
                    },
                    "agentConnSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "agentGateAccess": {
                        "items": {
                            "$ref": "#/components/schemas/AgentGateAccess"
                        },
                        "type": "array"
                    },
                    "agentPopMessage": {
                        "type": "string"
                    },
                    "agentTermSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "appUrl": {
                        "type": "string"
                    },
                    "backupAppUrl": {
                        "type": "string"
                    },
                    "billingCode": {
                        "type": "string"
                    },
                    "blockedAniMessage": {
                        "type": "string"
                    },
                    "callbackCampaign": {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    "createdOn": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "dequeueDelay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dequeueSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "dispositionTimeout": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "enableGlobalPhoneBook": {
                        "type": "boolean"
                    },
                    "enableIvrTokens": {
                        "type": "boolean"
                    },
                    "endCallMessage": {
                        "type": "string"
                    },
                    "fifoDisabled": {
                        "type": "boolean"
                    },
                    "friSched": {
                        "type": "string"
                    },
                    "gateClosedEvent": {
                        "type": "string"
                    },
                    "gateDesc": {
                        "type": "string"
                    },
                    "gateGroup": {
                        "$ref": "#/components/schemas/GateGroup"
                    },
                    "gateId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gateName": {
                        "type": "string"
                    },
                    "gateOpen": {
                        "type": "boolean"
                    },
                    "gatePriority": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gatePriorityGroup": {
                        "$ref": "#/components/schemas/GatePriorityGroup"
                    },
                    "gateQueueEvents": {
                        "items": {
                            "$ref": "#/components/schemas/GateQueueEvent"
                        },
                        "type": "array"
                    },
                    "hangupOnDisposition": {
                        "type": "boolean"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "longCallTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "manualCallerId": {
                        "type": "string"
                    },
                    "manualCallerIdE164": {
                        "type": "string"
                    },
                    "maxQueueEvent": {
                        "type": "string"
                    },
                    "maxQueueLimit": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "monSched": {
                        "type": "string"
                    },
                    "noAgentEvent": {
                        "type": "string"
                    },
                    "observeDst": {
                        "type": "boolean"
                    },
                    "onHoldMessage": {
                        "type": "string"
                    },
                    "outboundCallerId": {
                        "type": "string"
                    },
                    "pauseRecordingSec": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "perspectiveRecordingMode": {
                        "enum": [
                            "DISABLED",
                            "ALL_AGENT_LEGS"
                        ],
                        "type": "string"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    },
                    "postCallSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "postDispSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "recordCall": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "recordingInConference": {
                        "type": "boolean"
                    },
                    "recordingSettings": {
                        "enum": [
                            "RECORD_FULL_CALL",
                            "AGENT_FULL_CONTROL_DEFAULT_ON",
                            "AGENT_FULL_CONTROL_DEFAULT_OFF",
                            "AGENT_PAUSE"
                        ],
                        "type": "string"
                    },
                    "requeueType": {
                        "enum": [
                            "ADVANCED",
                            "RESTRICTED"
                        ],
                        "type": "string"
                    },
                    "resultFileDestination": {
                        "$ref": "#/components/schemas/ResultFileDestination"
                    },
                    "revMatch": {
                        "type": "boolean"
                    },
                    "satSched": {
                        "type": "string"
                    },
                    "script": {
                        "$ref": "#/components/schemas/Script"
                    },
                    "shortAbandonTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "shortCallTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "singleChannelEnabled": {
                        "type": "boolean"
                    },
                    "slaTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "specialAniEvent": {
                        "type": "string"
                    },
                    "stopRecordingOnTransfer": {
                        "type": "boolean"
                    },
                    "sunSched": {
                        "type": "string"
                    },
                    "survey": {
                        "$ref": "#/components/schemas/Survey"
                    },
                    "surveyPopType": {
                        "type": "string"
                    },
                    "syncQueueWait": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "throttleCalls": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "throttleDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "throttlingAniEvent": {
                        "type": "string"
                    },
                    "thuSched": {
                        "type": "string"
                    },
                    "transferCallerId": {
                        "type": "string"
                    },
                    "transferCallerIdE164": {
                        "type": "string"
                    },
                    "transferTermSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "ttAccept": {
                        "type": "boolean"
                    },
                    "tueSched": {
                        "type": "string"
                    },
                    "wedSched": {
                        "type": "string"
                    },
                    "whisperMessage": {
                        "type": "string"
                    },
                    "wrapTime": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "GateDisposition": {
                "properties": {
                    "destCampaign": {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    "dispSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "disposition": {
                        "type": "string"
                    },
                    "dncTagLabel": {
                        "type": "string"
                    },
                    "doNotCall": {
                        "type": "boolean"
                    },
                    "dtmfMapping": {
                        "type": "string"
                    },
                    "emailDestinations": {
                        "type": "string"
                    },
                    "emailTemplate": {
                        "$ref": "#/components/schemas/EmailTemplate"
                    },
                    "gateDispositionId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isComplete": {
                        "type": "boolean"
                    },
                    "isContact": {
                        "type": "boolean"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "isDisabled": {
                        "type": "boolean"
                    },
                    "isRequeued": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isSuccess": {
                        "type": "boolean"
                    },
                    "rank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "requeueDelay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "requireNote": {
                        "type": "boolean"
                    },
                    "saveSurvey": {
                        "type": "boolean"
                    },
                    "setAgentFlag": {
                        "type": "boolean"
                    },
                    "timeout": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "xfer": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "xferDest": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GateGroup": {
                "properties": {
                    "billingKey": {
                        "type": "string"
                    },
                    "createdOn": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "gateGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gates": {
                        "items": {
                            "$ref": "#/components/schemas/Gate"
                        },
                        "type": "array"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "groupSkills": {
                        "items": {
                            "$ref": "#/components/schemas/GateGroupSkill"
                        },
                        "type": "array"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateTime"
                    }
                },
                "type": "object"
            },
            "GateGroupSkill": {
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "agentSkillProfiles": {
                        "$ref": "#/components/schemas/CollectionAgentSkillProfile"
                    },
                    "createdOn": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "requeueShortcut": {
                        "items": {
                            "$ref": "#/components/schemas/RequeueShortcut"
                        },
                        "type": "array"
                    },
                    "skillDesc": {
                        "type": "string"
                    },
                    "skillId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "skillName": {
                        "type": "string"
                    },
                    "whisperAudio": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GateGroupSkinny": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "gateGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gates": {
                        "$ref": "#/components/schemas/Collection_GateSkinny_"
                    },
                    "groupName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GateGroupV2": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "billingKey": {
                        "type": "string"
                    },
                    "gateGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "groupName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GatePriorityGroup": {
                "properties": {
                    "gatePriorityGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gatePriorityGroupName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GateQueueDtmfEvent": {
                "properties": {
                    "dtmf": {
                        "type": "string"
                    },
                    "dtmfEvent": {
                        "type": "string"
                    },
                    "dtmfEventId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "GateQueueEvent": {
                "properties": {
                    "enableDtmf": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "eventDuration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "eventId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "eventRank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gate": {
                        "$ref": "#/components/schemas/Gate"
                    },
                    "queueEvent": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GateScheduleOverride": {
                "properties": {
                    "overrideClosedEvent": {
                        "type": "string"
                    },
                    "overrideDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "overrideLabel": {
                        "type": "string"
                    },
                    "overrideSched": {
                        "type": "string"
                    },
                    "scheduleOverrideId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "GateSkinny": {
                "properties": {
                    "gateGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gateId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gateName": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "GateSkinnyAssignable": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "gateGroup": {
                        "$ref": "#/components/schemas/GateGroupV2"
                    },
                    "gateGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gateId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "gateName": {
                        "type": "string"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isActive": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "GateSpecialAni": {
                "properties": {
                    "ani": {
                        "type": "string"
                    },
                    "aniE164": {
                        "type": "string"
                    },
                    "dateAdded": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GateSpecialAniDeleteRequest": {
                "properties": {
                    "ani": {
                        "type": "string"
                    },
                    "aniE164": {
                        "type": "string"
                    },
                    "effectiveAni": {
                        "type": "string"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GatesLoggedInAgentsView": {
                "properties": {
                    "agentGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GatesSelection": {
                "properties": {
                    "gateIds": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Generic": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            },
            "GenericEmail": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "attachments": {
                        "$ref": "#/components/schemas/CollectionMultipartFile"
                    },
                    "emailBcc": {
                        "type": "string"
                    },
                    "emailCc": {
                        "type": "string"
                    },
                    "emailFrom": {
                        "type": "string"
                    },
                    "emailPlainText": {
                        "type": "string"
                    },
                    "emailRte": {
                        "type": "string"
                    },
                    "emailSubject": {
                        "type": "string"
                    },
                    "emailTo": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GetRcLinkedAdminsRequest": {
                "properties": {
                    "rcAccountId": {
                        "type": "string"
                    },
                    "rcExtensionIds": {
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "HistorySource": {
                "properties": {
                    "sourceDescription": {
                        "type": "string"
                    },
                    "sourceGroupDescription": {
                        "type": "string"
                    },
                    "sourceGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "sourceGroupName": {
                        "type": "string"
                    },
                    "sourceId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "sourceName": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "HttpServiceMapping": {
                "properties": {
                    "originalValue": {
                        "type": "string"
                    },
                    "replacementValue": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "IVRApplication": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "appDesc": {
                        "type": "string"
                    },
                    "appId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "appName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ImportNumber": {
                "properties": {
                    "customAppString": {
                        "type": "string"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "dnisDescription": {
                        "type": "string"
                    },
                    "dnisE164": {
                        "type": "string"
                    },
                    "inboundContext": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "originatingDnis": {
                        "type": "string"
                    },
                    "resporg": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ImportNumbersRequest": {
                "properties": {
                    "numbersForImport": {
                        "items": {
                            "$ref": "#/components/schemas/ImportNumber"
                        },
                        "type": "array"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    },
                    "rcAccountId": {
                        "type": "string"
                    },
                    "subAccountId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "InputStream": {
                "type": "object"
            },
            "IvrStats": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "active": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "connected": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ivrGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ivrGroupName": {
                        "type": "string"
                    },
                    "lastUpdate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "presented": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "selectable": {
                        "type": "boolean"
                    },
                    "transferCloud": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "transferGate": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "transferTrac": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "visualIvrId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "visualIvrName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "JobInfo": {
                "properties": {
                    "finalFireTimeMillis": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "jobId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "jobParam": {
                        "$ref": "#/components/schemas/JobParamobject"
                    },
                    "jobState": {
                        "enum": [
                            "NONE",
                            "NORMAL",
                            "PAUSED",
                            "COMPLETE",
                            "ERROR",
                            "BLOCKED"
                        ],
                        "type": "string"
                    },
                    "jobType": {
                        "enum": [
                            "DNC_DOWNLOAD",
                            "ALERTING_JOB",
                            "LIST_DELETE",
                            "REPORT"
                        ],
                        "type": "string"
                    },
                    "lastRunDateTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nextFireTimeMillis": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "nextRunDateTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "ownerId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/Schedule"
                    }
                },
                "type": "object"
            },
            "JobParamobject": {
                "properties": {
                    "data": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "JsonNode": {
                "properties": {
                    "array": {
                        "type": "boolean"
                    },
                    "bigDecimal": {
                        "type": "boolean"
                    },
                    "bigInteger": {
                        "type": "boolean"
                    },
                    "binary": {
                        "type": "boolean"
                    },
                    "boolean": {
                        "type": "boolean"
                    },
                    "containerNode": {
                        "type": "boolean"
                    },
                    "double": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    },
                    "float": {
                        "type": "boolean"
                    },
                    "floatingPointNumber": {
                        "type": "boolean"
                    },
                    "int": {
                        "type": "boolean"
                    },
                    "integralNumber": {
                        "type": "boolean"
                    },
                    "long": {
                        "type": "boolean"
                    },
                    "missingNode": {
                        "type": "boolean"
                    },
                    "nodeType": {
                        "enum": [
                            "ARRAY",
                            "BINARY",
                            "BOOLEAN",
                            "MISSING",
                            null,
                            "NUMBER",
                            "OBJECT",
                            "POJO",
                            "STRING"
                        ],
                        "type": "string"
                    },
                    "null": {
                        "type": "boolean"
                    },
                    "number": {
                        "type": "boolean"
                    },
                    "object": {
                        "type": "boolean"
                    },
                    "pojo": {
                        "type": "boolean"
                    },
                    "short": {
                        "type": "boolean"
                    },
                    "textual": {
                        "type": "boolean"
                    },
                    "valueNode": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "KnowledgeBaseArticle": {
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "content": {
                        "type": "string"
                    },
                    "contentPlain": {
                        "type": "string"
                    },
                    "createdOn": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "knowledgeBaseArticleId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "knowledgeBaseCategory": {
                        "$ref": "#/components/schemas/KnowledgeBaseCategory"
                    },
                    "labels": {
                        "type": "string"
                    },
                    "order": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "showSend": {
                        "type": "boolean"
                    },
                    "title": {
                        "type": "string"
                    },
                    "updatedOn": {
                        "$ref": "#/components/schemas/DateTime"
                    }
                },
                "type": "object"
            },
            "KnowledgeBaseCategory": {
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "createdOn": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "description": {
                        "type": "string"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "knowledgeBaseArticles": {
                        "items": {
                            "$ref": "#/components/schemas/KnowledgeBaseArticle"
                        },
                        "type": "array"
                    },
                    "knowledgeBaseCategoryId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "knowledgeBaseGroup": {
                        "$ref": "#/components/schemas/KnowledgeBaseGroup"
                    },
                    "order": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "title": {
                        "type": "string"
                    },
                    "updatedOn": {
                        "$ref": "#/components/schemas/DateTime"
                    }
                },
                "type": "object"
            },
            "KnowledgeBaseGroup": {
                "properties": {
                    "knowledgeBaseCategories": {
                        "items": {
                            "$ref": "#/components/schemas/KnowledgeBaseCategory"
                        },
                        "type": "array"
                    },
                    "knowledgeBaseGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Lead": {
                "properties": {
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string"
                    },
                    "auxData1": {
                        "type": "string"
                    },
                    "auxData2": {
                        "type": "string"
                    },
                    "auxData3": {
                        "type": "string"
                    },
                    "auxData4": {
                        "type": "string"
                    },
                    "auxData5": {
                        "type": "string"
                    },
                    "auxPhone": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "extendedLeadData": {
                        "$ref": "#/components/schemas/ExtendedLeadData"
                    },
                    "externId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "gateKeeper": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "leadPhone": {
                        "description": "multiple values can be submitted with a pipe delimiter between phone numbers",
                        "type": "string"
                    },
                    "midName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "suffix": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    }
                },
                "required": [
                    "externId"
                ],
                "type": "object"
            },
            "LeadActionParams": {
                "properties": {
                    "paramMap": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "LeadActionResult": {
                "properties": {
                    "dialerRefreshed": {
                        "type": "boolean"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "leadActionType": {
                        "type": "string"
                    },
                    "leadDeleteCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadUpdateCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "redialDeleteCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "success": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "LeadListPagePreview": {
                "properties": {
                    "pageName": {
                        "type": "string"
                    },
                    "pageNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "rowData": {
                        "items": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "LeadListPreviewResponse": {
                "properties": {
                    "mappingColumns": {
                        "items": {
                            "enum": [
                                "LEAD_PHONE",
                                "EXTERN_ID",
                                "STATE",
                                "LEAD_TIMEZONE",
                                "PENDING_AGENT_ID",
                                "TITLE",
                                "FIRST_NAME",
                                "MID_NAME",
                                "LAST_NAME",
                                "SUFFIX",
                                "EMAIL",
                                "ADDRESS1",
                                "ADDRESS2",
                                "CITY",
                                "ZIP",
                                "GATE_KEEPER",
                                "AUX_DATA1",
                                "AUX_DATA2",
                                "AUX_DATA3",
                                "AUX_DATA4",
                                "AUX_DATA5",
                                "AUX_PHONE",
                                "AUX_EXTERNAL_URL",
                                "AUX_GREETING",
                                "LIVE_ANSWER_MESSAGE",
                                "MACH_ANSWER_MESSAGE",
                                "CALLER_ID",
                                "LEAD_PRIORITY"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "pagePreviews": {
                        "items": {
                            "$ref": "#/components/schemas/LeadListPagePreview"
                        },
                        "type": "array"
                    },
                    "transactionId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LeadListProcessingRequest": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "dialPriority": {
                        "enum": [
                            "IMMEDIATE",
                            "NORMAL"
                        ],
                        "type": "string"
                    },
                    "dncTags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "duplicateHandling": {
                        "enum": [
                            "RETAIN_ALL",
                            "REMOVE_ALL_EXISTING",
                            "REMOVE_FROM_LIST"
                        ],
                        "type": "string"
                    },
                    "extendedLeadDataMappings": {
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "object"
                    },
                    "fileContainsHeaders": {
                        "type": "boolean"
                    },
                    "fileType": {
                        "enum": [
                            "EXCEL",
                            "PIPE",
                            "COMMA",
                            "TAB"
                        ],
                        "type": "string"
                    },
                    "listState": {
                        "enum": [
                            "ACTIVE",
                            "PAUSED",
                            "PENDING_DNC",
                            "LOADING",
                            "DELETED",
                            "READY",
                            "CALLBACKS",
                            "CALLBACKS_AGENT",
                            "DUPLICATES_NOT_MERGED",
                            "DUPLICATES_NOT_MOVED"
                        ],
                        "type": "string"
                    },
                    "pageColumnMappings": {
                        "additionalProperties": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "object"
                    },
                    "pageNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "quoteChar": {
                        "type": "string"
                    },
                    "timeZoneOption": {
                        "enum": [
                            "NPA_NXX",
                            "ZIPCODE",
                            "EXPLICIT",
                            "NOT_APPLICABLE"
                        ],
                        "type": "string"
                    },
                    "transactionId": {
                        "type": "string"
                    },
                    "uploadLeads": {
                        "items": {
                            "$ref": "#/components/schemas/CampaignLead"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "LeadListProcessingResult": {
                "properties": {
                    "deletedCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dncReturnedCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dncUploadCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "hasDeletedLeads": {
                        "type": "boolean"
                    },
                    "internalDncCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadsAccepted": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadsConverted": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadsInserted": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadsSupplied": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "listState": {
                        "enum": [
                            "ACTIVE",
                            "PAUSED",
                            "PENDING_DNC",
                            "LOADING",
                            "DELETED",
                            "READY",
                            "CALLBACKS",
                            "CALLBACKS_AGENT",
                            "DUPLICATES_NOT_MERGED",
                            "DUPLICATES_NOT_MOVED"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "processingResult": {
                        "type": "string"
                    },
                    "processingStatus": {
                        "enum": [
                            "NO_LEADS_PASSED_VALIDATION",
                            "DNC_ACCOUNT_SETTINGS",
                            "DNC_UPLOAD_FAILED",
                            "DEFAULT_NOT_A_FAILURE",
                            "DNC_GREATER_ONE_DAY",
                            "GENERAL_FAILURE"
                        ],
                        "type": "string"
                    },
                    "quotaCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "rejectedRows": {
                        "items": {
                            "$ref": "#/components/schemas/RejectedRow"
                        },
                        "type": "array"
                    },
                    "timeZoneOption": {
                        "enum": [
                            "NPA_NXX",
                            "ZIPCODE",
                            "EXPLICIT",
                            "NOT_APPLICABLE"
                        ],
                        "type": "string"
                    },
                    "uploadFileName": {
                        "type": "string"
                    },
                    "whitelistCount": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "LeadManagerRequest": {
                "properties": {
                    "campaignLeadSearchCriteria": {
                        "$ref": "#/components/schemas/CampaignLeadSearchCriteria"
                    },
                    "leadActionParams": {
                        "$ref": "#/components/schemas/LeadActionParams"
                    }
                },
                "type": "object"
            },
            "LocalTime": {
                "properties": {
                    "chronology": {
                        "$ref": "#/components/schemas/Chronology"
                    },
                    "fieldTypes": {
                        "items": {
                            "$ref": "#/components/schemas/DateTimeFieldType"
                        },
                        "type": "array"
                    },
                    "fields": {
                        "items": {
                            "$ref": "#/components/schemas/DateTimeField"
                        },
                        "type": "array"
                    },
                    "hourOfDay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "millisOfDay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "millisOfSecond": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minuteOfHour": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "secondOfMinute": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "values": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "LoggedInAgentsByQueue": {
                "properties": {
                    "loggedInAgentCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "queueId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MainAccount": {
                "properties": {
                    "dataRetentionDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "enableAmdProfiles": {
                        "type": "boolean"
                    },
                    "enableConsultCall": {
                        "type": "boolean"
                    },
                    "enablePhoneNumbersI18n": {
                        "type": "boolean"
                    },
                    "engageAccountId": {
                        "type": "string"
                    },
                    "isActive": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "mainAccountId": {
                        "type": "string"
                    },
                    "mainAccountName": {
                        "type": "string"
                    },
                    "rcAccountId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MainAccountCreationDto": {
                "properties": {
                    "dataRetentionDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "engageAccountId": {
                        "type": "string"
                    },
                    "enterpriseAccountId": {
                        "type": "string"
                    },
                    "mainAccountId": {
                        "type": "string"
                    },
                    "mainAccountName": {
                        "type": "string"
                    },
                    "rcAccountId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MainAccountDto": {
                "properties": {
                    "dataRetentionDays": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "engageAccountId": {
                        "type": "string"
                    },
                    "isActive": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "mainAccountId": {
                        "type": "string"
                    },
                    "mainAccountName": {
                        "type": "string"
                    },
                    "rcAccountId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MainAccountUpdateDto": {
                "properties": {
                    "engageAccountId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MappingTemplate": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "createdBy": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dateCreated": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "lastUpdated": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "mappingData": {
                        "type": "string"
                    },
                    "mappingId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "mappingName": {
                        "type": "string"
                    },
                    "updatedBy": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "MediaCodeValuesOnDnisPool": {
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "string"
                    },
                    "format": {
                        "type": "string"
                    },
                    "isci": {
                        "type": "string"
                    },
                    "market": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "sourceCode": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Message": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "actionType": {
                        "enum": [
                            "INITIALIZE",
                            "CONNECT",
                            "DISCONNECT",
                            "TYPING",
                            "MESSAGE",
                            "DELIVERED",
                            "SENT",
                            "ACTIVE",
                            "MONITOR_START",
                            "MONITOR_STOP",
                            "CHAT_HISTORY"
                        ],
                        "type": "string"
                    },
                    "activeChatUii": {
                        "type": "string"
                    },
                    "apiKey": {
                        "type": "string"
                    },
                    "browserInfo": {
                        "type": "string"
                    },
                    "chatQueueId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "chatWebsocketConnectUri": {
                        "type": "string"
                    },
                    "chatWidgetAccessGuid": {
                        "type": "string"
                    },
                    "destinationJmsQueue": {
                        "type": "string"
                    },
                    "mediaLinks": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "originatingHost": {
                        "type": "string"
                    },
                    "payload": {
                        "type": "string"
                    },
                    "recipient": {
                        "type": "string"
                    },
                    "referer": {
                        "type": "string"
                    },
                    "sender": {
                        "type": "string"
                    },
                    "senderType": {
                        "type": "string"
                    },
                    "sessionGuid": {
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "SUCCESS",
                            "FAILED"
                        ],
                        "type": "string"
                    },
                    "statusMessage": {
                        "type": "string"
                    },
                    "textMessageDirection": {
                        "type": "string"
                    },
                    "textMessageType": {
                        "enum": [
                            "SMS",
                            "MMS"
                        ],
                        "type": "string"
                    },
                    "time": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "type": {
                        "enum": [
                            "SMS",
                            "WEB_CHAT",
                            "CHAT_ADMIN",
                            "SMS_TWILIO"
                        ],
                        "type": "string"
                    },
                    "whisper": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "NextivaAccountIntegration": {
                "properties": {
                    "_type": {
                        "type": "string"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "corpAcctNumber": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "encryptedAuthToken": {
                        "type": "string"
                    },
                    "hasAccess": {
                        "type": "boolean"
                    },
                    "integrationType": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "NotificationGroup": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "groupName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NotificationTarget": {
                "properties": {
                    "notificationGroup": {
                        "$ref": "#/components/schemas/NotificationGroup"
                    },
                    "smsOrEmail": {
                        "type": "string"
                    },
                    "targetId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": {
                        "enum": [
                            "SMS",
                            "EMAIL",
                            "USER"
                        ],
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "Operation": {
                "properties": {
                    "bindingName": {
                        "type": "string"
                    },
                    "operation": {
                        "type": "string"
                    },
                    "parts": {
                        "items": {
                            "$ref": "#/components/schemas/Element"
                        },
                        "type": "array"
                    },
                    "portName": {
                        "type": "string"
                    },
                    "soapAction": {
                        "type": "string"
                    },
                    "style": {
                        "type": "string"
                    },
                    "tagetNamespace": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OutboundAndInboundDailyCallData": {
                "properties": {
                    "inboundCallTotal": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "outboundCallTotal": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "OutboundStats": {
                "properties": {
                    "abandon": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "active": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "answer": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "available": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "busy": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "campaignId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "campaignName": {
                        "type": "string"
                    },
                    "complete": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "connects": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialGroupName": {
                        "type": "string"
                    },
                    "dnc": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "fax": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "intercept": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastUpdate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "machine": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "noanswer": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "notHumanAnswers": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "other": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "pending": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ready": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "selectable": {
                        "type": "boolean"
                    },
                    "staffed": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "successDispositions": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "totalTalkTime": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PassDispositionRequest": {
                "properties": {
                    "destinationCampaignRequest": {
                        "$ref": "#/components/schemas/DestinationCampaignRequest"
                    },
                    "passDisposition": {
                        "$ref": "#/components/schemas/CampaignPassDisposition"
                    }
                },
                "type": "object"
            },
            "PbxDirectoryFilter": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "contactCenterExtension": {
                        "enum": [
                            "INCLUDE_ALL",
                            "EXCLUDE_AGENTS_ONLY",
                            "EXCLUDE_AGENTS_AND_SUPERVISORS"
                        ],
                        "type": "string"
                    },
                    "corporateExtension": {
                        "enum": [
                            "INCLUDE_ALL",
                            "INCLUDE_SPECIFIC_RANGES",
                            "EXCLUDE_SPECIFIC_RANGES"
                        ],
                        "type": "string"
                    },
                    "corporateExtensionRange": {
                        "type": "string"
                    },
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "includeInactiveExtensions": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "PbxDirectoryFilterMailbox": {
                "properties": {
                    "mailboxDetails": {
                        "items": {
                            "$ref": "#/components/schemas/PbxDirectoryMailboxDetail"
                        },
                        "type": "array"
                    },
                    "pbxDirectoryEnable": {
                        "type": "boolean"
                    },
                    "pbxDirectoryFilter": {
                        "$ref": "#/components/schemas/PbxDirectoryFilter"
                    }
                },
                "type": "object"
            },
            "PbxDirectoryMailboxDetail": {
                "properties": {
                    "agentType": {
                        "enum": [
                            "AGENT",
                            "SUPERVISOR",
                            "MULTI_USER",
                            "MULTI_SUPERVISOR"
                        ],
                        "type": "string"
                    },
                    "mailboxId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PhoneBookEntry": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "countryId": {
                        "type": "string"
                    },
                    "dateCreated": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "destName": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string"
                    },
                    "entryId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "GATE",
                            "GLOBAL",
                            "CAMPAIGN"
                        ],
                        "type": "string"
                    },
                    "typeId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PhoneNumbersI18nMigrationStatusInfoResponse": {
                "properties": {
                    "errorMessage": {
                        "type": "string"
                    },
                    "finalStatus": {
                        "type": "string"
                    },
                    "startTime": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "subStatuses": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "taskId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PhoneNumbersI18nMigrationTaskResponse": {
                "properties": {
                    "finalStatus": {
                        "type": "string"
                    },
                    "mainAccount": {
                        "$ref": "#/components/schemas/MainAccount"
                    },
                    "taskId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Platform": {
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "iqPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "iqSslPort": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "iqUrl": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "platformDesc": {
                        "type": "string"
                    },
                    "platformId": {
                        "type": "string"
                    },
                    "telePlatformId": {
                        "type": "string"
                    },
                    "webSocketPort": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PlatformDialer": {
                "properties": {
                    "dialerDesc": {
                        "type": "string"
                    },
                    "dialerId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dialerType": {
                        "type": "string"
                    },
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "tcpaSafeMode": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "PoolUsage": {
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "mode": {
                        "enum": [
                            "PREVIEW",
                            "CLICK_TO_TALK",
                            "PREDICTIVE",
                            "POWER",
                            "TCPA_SAFE_MODE"
                        ],
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "usageType": {
                        "enum": [
                            "OUTBOUND",
                            "INBOUND"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PrepayMinutePool": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "notificationEmail": {
                        "type": "string"
                    },
                    "poolDesc": {
                        "type": "string"
                    },
                    "poolName": {
                        "type": "string"
                    },
                    "poolTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "tenPercentWarn": {
                        "type": "boolean"
                    },
                    "twentyPercentWarn": {
                        "type": "boolean"
                    },
                    "usedTime": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "PrepayTransaction": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "address1": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "dollarAmount": {
                        "format": "double",
                        "type": "number"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "minutes": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "poolName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "transDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "transType": {
                        "type": "string"
                    },
                    "transactionId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "transactionName": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PrerouteCheckStatus": {
                "properties": {
                    "reason": {
                        "type": "string"
                    },
                    "status": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ProductOperationResult": {
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "success": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ProductPermission": {
                "properties": {
                    "cascade": {
                        "type": "boolean"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "product": {
                        "enum": [
                            "ACCOUNT",
                            "ACD",
                            "AGENT",
                            "CHAT_QUEUE",
                            "OUTBOUND",
                            "VISUAL_IVR",
                            "CLOUD_PROFILE",
                            "CLOUD_DESTINATION",
                            "TRAC_NUMBER",
                            "HTTP_SERVICES",
                            "SCRIPTING",
                            "TN_MANAGER",
                            "SURVEY",
                            "DNIS",
                            "TEAMS",
                            "KNOWLEDGE_BASE",
                            "UTILITIES"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProductsSelection": {
                "properties": {
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ids": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "QuotaGroup": {
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "campaigns": {
                        "$ref": "#/components/schemas/CollectionCampaign"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "quotaGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "quotaGroupName": {
                        "type": "string"
                    },
                    "quotaTargets": {
                        "$ref": "#/components/schemas/CollectionQuotaTarget"
                    }
                },
                "type": "object"
            },
            "QuotaManagementGroup": {
                "properties": {
                    "quotaGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "quotaGroupName": {
                        "type": "string"
                    },
                    "quotaTargetStats": {
                        "items": {
                            "$ref": "#/components/schemas/QuotaTargetStats"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "QuotaTarget": {
                "properties": {
                    "clientMetadata": {
                        "type": "string"
                    },
                    "criteriaJs": {
                        "type": "string"
                    },
                    "currentCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "quotaGroup": {
                        "$ref": "#/components/schemas/QuotaGroup"
                    },
                    "quotaMetOn": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "quotaTargetId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "targetCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "targetName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "QuotaTargetStats": {
                "properties": {
                    "campaigns": {
                        "items": {
                            "$ref": "#/components/schemas/CampaignStats"
                        },
                        "type": "array"
                    },
                    "currentCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "quotaGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "quotaMetOn": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "quotaTargetId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "quotaTargetName": {
                        "type": "string"
                    },
                    "targetCount": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "RcAccountAccessResponse": {
                "properties": {
                    "errorMessage": {
                        "type": "string"
                    },
                    "hasAccess": {
                        "type": "boolean"
                    },
                    "rcAccountId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RcExtensionRegionalSettings": {
                "properties": {
                    "greetingsLanguageId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "greetingsLanguageLocaleCode": {
                        "type": "string"
                    },
                    "greetingsLanguageName": {
                        "type": "string"
                    },
                    "homeCountryCode": {
                        "type": "string"
                    },
                    "homeCountryId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "homeCountryName": {
                        "type": "string"
                    },
                    "regionalFormatId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "regionalFormatLocaleCode": {
                        "type": "string"
                    },
                    "regionalFormatName": {
                        "type": "string"
                    },
                    "timeFormat": {
                        "type": "string"
                    },
                    "timeZoneBias": {
                        "type": "string"
                    },
                    "timeZoneDescription": {
                        "type": "string"
                    },
                    "timeZoneId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "userLanguageId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "userLanguageLocaleCode": {
                        "type": "string"
                    },
                    "userLanguageName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RcOfficeUser": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "rcUserId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "regionalSettings": {
                        "$ref": "#/components/schemas/RcExtensionRegionalSettings"
                    }
                },
                "type": "object"
            },
            "RcUserMappingResponse": {
                "properties": {
                    "ev_users": {
                        "items": {
                            "$ref": "#/components/schemas/EVUser"
                        },
                        "type": "array"
                    },
                    "rc_user_uid": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "RcUserSyncUpdateRequest": {
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "rcSync": {
                        "type": "boolean"
                    },
                    "regionalSettings": {
                        "$ref": "#/components/schemas/RcExtensionRegionalSettings"
                    }
                },
                "type": "object"
            },
            "RecordingDestinationV2": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "destDir": {
                        "type": "string"
                    },
                    "destType": {
                        "enum": [
                            "SFTP",
                            "S3",
                            "FTP",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    },
                    "destinationId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "destinationJson": {
                        "type": "string"
                    },
                    "destinationName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RecordingTaskV2": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "filterConfig": {
                        "type": "string"
                    },
                    "lastDaySync": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "lastPushTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "lastQueryTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "nextPushTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "nextQueryTime": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "pushStatusDesc": {
                        "type": "string"
                    },
                    "queryStatusDesc": {
                        "type": "string"
                    },
                    "recordingDestinationV2": {
                        "$ref": "#/components/schemas/RecordingDestinationV2"
                    },
                    "recordingFilename": {
                        "type": "string"
                    },
                    "taskDesc": {
                        "type": "string"
                    },
                    "taskId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "taskName": {
                        "type": "string"
                    },
                    "taskStart": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "taskState": {
                        "enum": [
                            "READY",
                            "TEST",
                            "RUNNING",
                            "FAILED",
                            "DISABLED",
                            "UNKNOWN"
                        ],
                        "type": "string"
                    },
                    "taskType": {
                        "enum": [
                            "INTELLITASK_RECORDING_PUSH"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RedirectView": {
                "properties": {
                    "applicationContext": {
                        "$ref": "#/components/schemas/ApplicationContext"
                    },
                    "attributesMap": {
                        "type": "object"
                    },
                    "beanName": {
                        "type": "string"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "exposePathVariables": {
                        "type": "boolean"
                    },
                    "hosts": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "propagateQueryProperties": {
                        "type": "boolean"
                    },
                    "redirectView": {
                        "type": "boolean"
                    },
                    "requestContextAttribute": {
                        "type": "string"
                    },
                    "staticAttributes": {
                        "type": "object"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "title": "RedirectView",
                "type": "object"
            },
            "RegionalSettingRequestResponse": {
                "properties": {
                    "formattingLocale": {
                        "type": "string"
                    },
                    "greetingLanguage": {
                        "type": "string"
                    },
                    "homeCountry": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "homeCountryCode": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string"
                    },
                    "timeFormat": {
                        "type": "string"
                    },
                    "timezone": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "RejectedRow": {
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "rowData": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "RemoteHttpService": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "enableMappings": {
                        "type": "boolean"
                    },
                    "httpPassword": {
                        "type": "string"
                    },
                    "httpServiceConfig": {
                        "type": "string"
                    },
                    "httpServiceGroup": {
                        "$ref": "#/components/schemas/RemoteHttpServiceGroup"
                    },
                    "httpServiceInputs": {
                        "$ref": "#/components/schemas/CollectionRemoteHttpServiceInput"
                    },
                    "httpUsername": {
                        "type": "string"
                    },
                    "isDebug": {
                        "type": "boolean"
                    },
                    "isEnabled": {
                        "type": "boolean"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "returntype": {
                        "type": "string"
                    },
                    "sendAllSurveyData": {
                        "type": "boolean"
                    },
                    "serviceDescription": {
                        "type": "string"
                    },
                    "serviceId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "serviceType": {
                        "enum": [
                            "SOAP",
                            "HTTP_POST",
                            "HTTP_GET",
                            "HTTP"
                        ],
                        "type": "string"
                    },
                    "soapAction": {
                        "type": "string"
                    },
                    "soapEndpoint": {
                        "type": "string"
                    },
                    "soapOperationname": {
                        "type": "string"
                    },
                    "soapPortname": {
                        "type": "string"
                    },
                    "soapServicename": {
                        "type": "string"
                    },
                    "targetNamespace": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RemoteHttpServiceGroup": {
                "properties": {
                    "groupName": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "serviceGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "services": {
                        "$ref": "#/components/schemas/CollectionRemoteHttpService"
                    }
                },
                "type": "object"
            },
            "RemoteHttpServiceInput": {
                "properties": {
                    "inputId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rank": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "simpleDataType": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportCriteria": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "criteriaType": {
                        "enum": [
                            "DIALER_RESULT_DOWNLOAD_CRITERIA",
                            "GLOBAL_CALL_TYPE_CRITERIA",
                            "IVR_DETAIL_CRITERIA",
                            "TFN_DID_MANAGER_CRITERIA",
                            "ALL_CALLS_CRITERIA",
                            "CASPER_CRITERIA"
                        ],
                        "type": "string"
                    },
                    "databaseTimezone": {
                        "type": "string"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "endDateRange": {
                        "$ref": "#/components/schemas/TimeRange"
                    },
                    "scheduleTimezoneName": {
                        "type": "string"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "startDateRange": {
                        "$ref": "#/components/schemas/TimeRange"
                    },
                    "timezoneName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportMetaData": {
                "properties": {
                    "cciReport": {
                        "type": "boolean"
                    },
                    "parameterList": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "reportGroup": {
                        "type": "string"
                    },
                    "reportName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReportParams": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "compressReport": {
                        "type": "boolean"
                    },
                    "delimiter": {
                        "enum": [
                            "PIPE",
                            "COMMA",
                            "TAB",
                            "EXCEL",
                            "HTML"
                        ],
                        "type": "string"
                    },
                    "destination": {
                        "$ref": "#/components/schemas/DestinationParams"
                    },
                    "maxRows": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "reportCriteria": {
                        "$ref": "#/components/schemas/ReportCriteria"
                    },
                    "reportName": {
                        "type": "string"
                    },
                    "reportType": {
                        "enum": [
                            "DIALER_RESULT_DOWNLOAD",
                            "GLOBAL_CALL_TYPE_EXCEL",
                            "GLOBAL_CALL_TYPE_DELIMITED",
                            "ALL_CALLS",
                            "IVR_DETAIL",
                            "TFN_DID_MANAGER_SUPERUSER_EXCEL",
                            "TFN_DID_MANAGER_EXCEL",
                            "TFN_DID_MANAGER_DELIMITED",
                            "CASPER_REPORT"
                        ],
                        "type": "string"
                    },
                    "requestUser": {
                        "$ref": "#/components/schemas/User"
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/Schedule"
                    },
                    "scheduledReport": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "RequeueShortcut": {
                "properties": {
                    "campaign": {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    "gate": {
                        "$ref": "#/components/schemas/Gate"
                    },
                    "groupSkill": {
                        "$ref": "#/components/schemas/GateGroupSkill"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "requeueGate": {
                        "$ref": "#/components/schemas/Gate"
                    },
                    "requeueGateGroup": {
                        "$ref": "#/components/schemas/GateGroup"
                    },
                    "requeueShortcutId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ResourcePermission": {
                "properties": {
                    "cascade": {
                        "type": "boolean"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "resourceId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "resourceType": {
                        "enum": [
                            "ACCOUNT",
                            "GATE_GROUP",
                            "GATE",
                            "AGENT",
                            "AGENT_GROUP",
                            "OUTBOUND_DIAL_GROUP",
                            "OUTBOUND_CAMPAIGN",
                            "VISUAL_IVR",
                            "VISUAL_IVR_GROUP",
                            "TRAC_NUMBER",
                            "TRAC_GROUP",
                            "CLOUD_PROFILE",
                            "CLOUD_DESTINATION",
                            "CLOUD_PROFILE_GROUP",
                            "CLOUD_GROUP",
                            "CLOUD_DESTINATION_GROUP",
                            "HTTP_SERVICE",
                            "HTTP_SERVICE_GROUP",
                            "SCRIPT",
                            "SCRIPT_GROUP",
                            "TN_MANAGER",
                            "UTILITIES",
                            "CHAT_QUEUE",
                            "CHAT_GROUP",
                            "KNOWLEDGEBASE_GROUP",
                            "KNOWLEDGEBASE_CATEGORY"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResponseEntity": {
                "properties": {
                    "body": {
                        "type": "object"
                    },
                    "statusCode": {
                        "enum": [
                            "100",
                            "101",
                            "102",
                            "103",
                            "200",
                            "201",
                            "202",
                            "203",
                            "204",
                            "205",
                            "206",
                            "207",
                            "208",
                            "226",
                            "300",
                            "301",
                            "302",
                            "303",
                            "304",
                            "305",
                            "307",
                            "308",
                            "400",
                            "401",
                            "402",
                            "403",
                            "404",
                            "405",
                            "406",
                            "407",
                            "408",
                            "409",
                            "410",
                            "411",
                            "412",
                            "413",
                            "414",
                            "415",
                            "416",
                            "417",
                            "418",
                            "419",
                            "420",
                            "421",
                            "422",
                            "423",
                            "424",
                            "426",
                            "428",
                            "429",
                            "431",
                            "451",
                            "500",
                            "501",
                            "502",
                            "503",
                            "504",
                            "505",
                            "506",
                            "507",
                            "508",
                            "509",
                            "510",
                            "511"
                        ],
                        "type": "string"
                    },
                    "statusCodeValue": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ResultFileDestination": {
                "properties": {
                    "aggregateOutput": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "destType": {
                        "type": "string"
                    },
                    "destinationId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "destinationName": {
                        "type": "string"
                    },
                    "emailDest": {
                        "type": "string"
                    },
                    "ftpDir": {
                        "type": "string"
                    },
                    "ftpPwd": {
                        "type": "string"
                    },
                    "ftpServer": {
                        "type": "string"
                    },
                    "ftpUid": {
                        "type": "string"
                    },
                    "passive": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "sendEmptyFiles": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "sftp": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RightsDocTable": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "creationDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "isMaster": {
                        "type": "boolean"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/User"
                    },
                    "rightsDocJson": {
                        "type": "string"
                    },
                    "rightsDocName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RightsDocument": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "accountPermissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "assigned": {
                        "type": "boolean"
                    },
                    "cascade": {
                        "type": "boolean"
                    },
                    "isMaster": {
                        "type": "boolean"
                    },
                    "ownerId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "productPermissions": {
                        "items": {
                            "$ref": "#/components/schemas/ProductPermission"
                        },
                        "type": "array"
                    },
                    "resourcePermissions": {
                        "items": {
                            "$ref": "#/components/schemas/ResourcePermission"
                        },
                        "type": "array"
                    },
                    "rightsDocId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "rightsDocName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SIPRegistrationResult": {
                "properties": {
                    "device": {
                        "$ref": "#/components/schemas/Device"
                    },
                    "sipErrorCodes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "sipFlags": {
                        "$ref": "#/components/schemas/SipFlags"
                    },
                    "sipInfo": {
                        "items": {
                            "$ref": "#/components/schemas/SipInfo"
                        },
                        "type": "array"
                    },
                    "sipInfoPstn": {
                        "items": {
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Schedule": {
                "properties": {
                    "dayOfTheMonth": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "daysOfWeek": {
                        "items": {
                            "enum": [
                                "SUNDAY",
                                "MONDAY",
                                "TUESDAY",
                                "WEDNESDAY",
                                "THURSDAY",
                                "FRIDAY",
                                "SATURDAY"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "endTime": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "interval": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "month": {
                        "enum": [
                            "JANUARY",
                            "FEBRUARY",
                            "MARCH",
                            "APRIL",
                            "MAY",
                            "JUNE",
                            "JULY",
                            "AUGUST",
                            "SEPTEMBER",
                            "OCTOBER",
                            "NOVEMBER",
                            "DECEMBER"
                        ],
                        "type": "string"
                    },
                    "repeatOption": {
                        "enum": [
                            "SINGLE",
                            "MINUTE",
                            "HOURLY",
                            "DAILY",
                            "WEEKLY",
                            "MONTHLY",
                            "CALENDAR",
                            "YEARLY"
                        ],
                        "type": "string"
                    },
                    "scheduleTimezoneName": {
                        "type": "string"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "startTime": {
                        "$ref": "#/components/schemas/LocalTime"
                    },
                    "versionNum": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "SchedulerStateResponse": {
                "properties": {
                    "currentState": {
                        "enum": [
                            "RUN",
                            "PAUSE"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Script": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "created": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "description": {
                        "type": "string"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "scriptGroup": {
                        "$ref": "#/components/schemas/ScriptGroup"
                    },
                    "scriptId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "updated": {
                        "$ref": "#/components/schemas/DateTime"
                    }
                },
                "type": "object"
            },
            "ScriptConfig": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scriptId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "scriptJson": {
                        "type": "string"
                    },
                    "updated": {
                        "$ref": "#/components/schemas/DateTime"
                    }
                },
                "type": "object"
            },
            "ScriptGroup": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "scripts": {
                        "items": {
                            "$ref": "#/components/schemas/Script"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "SecurityStrategyModel": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "fullPermission": {
                        "type": "boolean"
                    },
                    "productIds": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "redshiftProduct": {
                        "enum": [
                            "ACCOUNT",
                            "AGENT",
                            "AGENT_DISPOSITION",
                            "AGENT_EXTERNAL_ID",
                            "AGENT_GROUP_ID",
                            "AGENT_TEAM",
                            "ANI",
                            "CALL_ID",
                            "CAMPAIGN",
                            "CHAT_QUEUE",
                            "CHAT_QUEUE_GROUP",
                            "CLOUD_DESTINATION",
                            "CLOUD_DESTINATION_GROUP_ID",
                            "CLOUD_PROFILE",
                            "CLOUD_PROFILE_GROUP_ID",
                            "DIAL_GROUP",
                            "DIAL_TYPE",
                            "DNC_TAG",
                            "DNIS",
                            "GATE",
                            "GATE_GROUP",
                            "INCLUDE_DIAL_GROUP",
                            "INCLUDE_MEDIA",
                            "INTERNAL_CHAT",
                            "LIST_STATE",
                            "LEAD_LIST",
                            "OPT_OUT",
                            "OUTBOUND_DISPOSITION",
                            "ROLLUP_AGENT",
                            "SCRIPTING",
                            "SCRIPT_GROUP_ID",
                            "STARTS_WITH_NPA_EXCLUDE",
                            "STARTS_WITH_NPA_INCLUDE",
                            "SURVEY",
                            "TRACK_GROUP_ID",
                            "TRACK_NUMBER",
                            "USERNAME",
                            "VISUAL_IVR",
                            "VISUAL_IVR_GROUP_ID",
                            "WHITELIST_TAG"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SecurityStrategyView": {
                "properties": {
                    "accountIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "fullPermission": {
                        "type": "boolean"
                    },
                    "redshiftProducts": {
                        "items": {
                            "enum": [
                                "ACCOUNT",
                                "AGENT",
                                "AGENT_DISPOSITION",
                                "AGENT_EXTERNAL_ID",
                                "AGENT_GROUP_ID",
                                "AGENT_TEAM",
                                "ANI",
                                "CALL_ID",
                                "CAMPAIGN",
                                "CHAT_QUEUE",
                                "CHAT_QUEUE_GROUP",
                                "CLOUD_DESTINATION",
                                "CLOUD_DESTINATION_GROUP_ID",
                                "CLOUD_PROFILE",
                                "CLOUD_PROFILE_GROUP_ID",
                                "DIAL_GROUP",
                                "DIAL_TYPE",
                                "DNC_TAG",
                                "DNIS",
                                "GATE",
                                "GATE_GROUP",
                                "INCLUDE_DIAL_GROUP",
                                "INCLUDE_MEDIA",
                                "INTERNAL_CHAT",
                                "LIST_STATE",
                                "LEAD_LIST",
                                "OPT_OUT",
                                "OUTBOUND_DISPOSITION",
                                "ROLLUP_AGENT",
                                "SCRIPTING",
                                "SCRIPT_GROUP_ID",
                                "STARTS_WITH_NPA_EXCLUDE",
                                "STARTS_WITH_NPA_INCLUDE",
                                "SURVEY",
                                "TRACK_GROUP_ID",
                                "TRACK_NUMBER",
                                "USERNAME",
                                "VISUAL_IVR",
                                "VISUAL_IVR_GROUP_ID",
                                "WHITELIST_TAG"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "accountIds",
                    "fullPermission",
                    "redshiftProducts"
                ],
                "type": "object"
            },
            "SimplePostgresChild": {
                "properties": {
                    "accountId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "objId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "objectName": {
                        "type": "string"
                    },
                    "objectTimestamp": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SimplePostgresParent": {
                "properties": {
                    "accountId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "children": {
                        "items": {
                            "$ref": "#/components/schemas/SimplePostgresChild"
                        },
                        "type": "array"
                    },
                    "filters": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "objectTimestamp": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "product": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SipFlags": {
                "properties": {
                    "dcspVoice": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dscpEnabled": {
                        "type": "boolean"
                    },
                    "dscpSignaling": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dscpVideo": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "outboundCallsEnabled": {
                        "type": "boolean"
                    },
                    "voipCountryBlocked": {
                        "type": "boolean"
                    },
                    "voipFeatureEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "SipInfo": {
                "properties": {
                    "authorizationId": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "outboundProxy": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "transport": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "State": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "StateProvince": {
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "searchString": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SuppressedType": {
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Survey": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "active": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "enableTokens": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "exportFlag": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "headingCss": {
                        "type": "string"
                    },
                    "lastModified": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "name": {
                        "type": "string"
                    },
                    "submitText": {
                        "type": "string"
                    },
                    "surveyDesc": {
                        "type": "string"
                    },
                    "surveyId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "surveyName": {
                        "type": "string"
                    },
                    "tableCss": {
                        "type": "string"
                    },
                    "textCss": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SurveyGroup": {
                "properties": {
                    "groupName": {
                        "type": "string"
                    },
                    "isDefault": {
                        "format": "byte",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "surveyGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "surveys": {
                        "$ref": "#/components/schemas/CollectionSurvey"
                    }
                },
                "type": "object"
            },
            "TelephonyServerGroup": {
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "currentConnections": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "groupVendor": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "maxAgents": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "TimeRange": {
                "properties": {
                    "rangeType": {
                        "enum": [
                            "MINUTE",
                            "HOUR",
                            "DAY",
                            "WEEK",
                            "MONTH",
                            "YEAR",
                            "NOW"
                        ],
                        "type": "string"
                    },
                    "rangeValue": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "rangeValueValid": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Timestamp": {
                "properties": {
                    "date": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "day": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "hours": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "minutes": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "month": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "nanos": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "seconds": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "time": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "timezoneOffset": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "year": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Timezone": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TnManagerSearchCriteria": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "accountIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "assigned": {
                        "type": "boolean"
                    },
                    "assignedSms": {
                        "type": "boolean"
                    },
                    "criteriaType": {
                        "enum": [
                            "DIALER_RESULT_DOWNLOAD_CRITERIA",
                            "GLOBAL_CALL_TYPE_CRITERIA",
                            "IVR_DETAIL_CRITERIA",
                            "TFN_DID_MANAGER_CRITERIA",
                            "ALL_CALLS_CRITERIA",
                            "CASPER_CRITERIA"
                        ],
                        "type": "string"
                    },
                    "customAppString": {
                        "type": "string"
                    },
                    "databaseTimezone": {
                        "type": "string"
                    },
                    "dnis": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "dnisFilter": {
                        "type": "string"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "endDateRange": {
                        "$ref": "#/components/schemas/TimeRange"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "inboundContext": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "objectId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    },
                    "product": {
                        "enum": [
                            "ACCOUNT",
                            "ACD",
                            "AGENT",
                            "CHAT_QUEUE",
                            "OUTBOUND",
                            "VISUAL_IVR",
                            "CLOUD_PROFILE",
                            "CLOUD_DESTINATION",
                            "TRAC_NUMBER",
                            "HTTP_SERVICES",
                            "SCRIPTING",
                            "TN_MANAGER",
                            "SURVEY",
                            "DNIS",
                            "TEAMS",
                            "KNOWLEDGE_BASE",
                            "UTILITIES"
                        ],
                        "type": "string"
                    },
                    "scheduleTimezoneName": {
                        "type": "string"
                    },
                    "startDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "startDateRange": {
                        "$ref": "#/components/schemas/TimeRange"
                    },
                    "timezoneName": {
                        "type": "string"
                    },
                    "vendorId": {
                        "type": "string"
                    },
                    "vruNetworkId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "TracGroup": {
                "properties": {
                    "groupName": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "tracGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "tracNumbers": {
                        "items": {
                            "$ref": "#/components/schemas/TracNumber"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "TracLocation": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "lat": {
                        "format": "double",
                        "type": "number"
                    },
                    "locationId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "locator": {
                        "$ref": "#/components/schemas/TracLocator"
                    },
                    "lon": {
                        "format": "double",
                        "type": "number"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "ringDuration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "ttAccept": {
                        "type": "boolean"
                    },
                    "zip": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TracLocator": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "locatorId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxDistance": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "tracLocation": {
                        "$ref": "#/components/schemas/CollectionTracLocation"
                    }
                },
                "type": "object"
            },
            "TracNumber": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "assignedDnis": {
                        "$ref": "#/components/schemas/AssignedDnis"
                    },
                    "billingCode": {
                        "type": "string"
                    },
                    "billingKey": {
                        "type": "string"
                    },
                    "closeLocatorId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "closeType": {
                        "enum": [
                            "STANDARD",
                            "STANDARD_PARALLEL",
                            "LOCATOR"
                        ],
                        "type": "string"
                    },
                    "dequeueDelay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endcallMsg": {
                        "type": "string"
                    },
                    "friSched": {
                        "type": "string"
                    },
                    "introMsg": {
                        "type": "string"
                    },
                    "monSched": {
                        "type": "string"
                    },
                    "openLocatorId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "openType": {
                        "enum": [
                            "STANDARD",
                            "STANDARD_PARALLEL",
                            "LOCATOR"
                        ],
                        "type": "string"
                    },
                    "outboundCallerId": {
                        "type": "string"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "postCallSoapService": {
                        "$ref": "#/components/schemas/RemoteHttpService"
                    },
                    "recordCall": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "revMatch": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "satSched": {
                        "type": "string"
                    },
                    "shortCallTime": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "sunSched": {
                        "type": "string"
                    },
                    "surveyId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "thuSched": {
                        "type": "string"
                    },
                    "tracGroup": {
                        "$ref": "#/components/schemas/TracGroup"
                    },
                    "tracId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "tueSched": {
                        "type": "string"
                    },
                    "voicemailEnabled": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "wedSched": {
                        "type": "string"
                    },
                    "whisperMsg": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TracNumberSkinny": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "tracGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "tracId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "TracRoutingRule": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string"
                    },
                    "openRule": {
                        "type": "boolean"
                    },
                    "parallelDelay": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "rank": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ringDuration": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ruleId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ruleType": {
                        "enum": [
                            "STANDARD",
                            "STANDARD_SIP",
                            "ENCRYPTED_SIP",
                            "GATE_XFER",
                            "TRAC_XFER",
                            "IN_NETWORK",
                            "VIVR"
                        ],
                        "type": "string"
                    },
                    "tracNumber": {
                        "$ref": "#/components/schemas/TracNumber"
                    },
                    "ttAccept": {
                        "type": "boolean"
                    },
                    "xferGateId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "xferTracId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "TracScheduleOverride": {
                "properties": {
                    "overrideClosedEvent": {
                        "type": "string"
                    },
                    "overrideDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "overrideLabel": {
                        "type": "string"
                    },
                    "overrideSched": {
                        "type": "string"
                    },
                    "scheduleOverrideId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UniqueAgentResponse": {
                "properties": {
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "ani": {
                        "type": "string"
                    },
                    "dnis": {
                        "type": "string"
                    },
                    "dnisE164": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "uii": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateAgentLoginDialGroupResponse": {
                "properties": {
                    "agentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentName": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "UpdatePhoneNumbersI18nRequest": {
                "properties": {
                    "enablePhoneNumbersI18n": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "UploadLeadsRequest": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "dialPriority": {
                        "description": "Setting this to `IMMEDIATE` allows you to insert a lead to the top of the dialer cache for immediate dialing if you want a normal insert then do not add this parameter.",
                        "enum": [
                            "IMMEDIATE",
                            "NORMAL"
                        ],
                        "type": "string"
                    },
                    "duplicateHandling": {
                        "enum": [
                            "RETAIN_ALL",
                            "REMOVE_ALL_EXISTING",
                            "REMOVE_FROM_LIST"
                        ],
                        "type": "string"
                    },
                    "listState": {
                        "enum": [
                            "ACTIVE"
                        ],
                        "type": "string"
                    },
                    "timeZoneOption": {
                        "enum": [
                            "NPA_NXX",
                            "ZIPCODE",
                            "EXPLICIT"
                        ],
                        "type": "string"
                    },
                    "uploadLeads": {
                        "items": {
                            "$ref": "#/components/schemas/CampaignLead"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "UploadLeadsResponse": {
                "properties": {
                    "deletedCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dncReturnedCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dncUploadCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "hasDeletedLeads": {
                        "type": "boolean"
                    },
                    "internalDncCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadsAccepted": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadsConverted": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadsInserted": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "leadsSupplied": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "listState": {
                        "type": "string"
                    },
                    "message": {
                        "description": "Values can be `Your uploaded lead list has successfully completed processing` or `Your uploaded lead list file processing has failed`",
                        "type": "string"
                    },
                    "processingResult": {
                        "description": "Values can be `OK` or `Failed`",
                        "type": "string"
                    },
                    "processingStatus": {
                        "description": "Values can be `DEFAULT_NOT_A_FAILURE` or `GENERAL_FAILURE`",
                        "type": "string"
                    },
                    "quotaCount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "timeZoneOption": {
                        "type": "string"
                    },
                    "uploadFileName": {
                        "type": "string"
                    },
                    "whitelistCount": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "message",
                    "leadsSupplied",
                    "leadsConverted",
                    "leadsAccepted",
                    "leadsInserted",
                    "internalDncCount",
                    "dncUploadCount",
                    "dncReturnedCount",
                    "whitelistCount",
                    "uploadFileName",
                    "deletedCount",
                    "quotaCount",
                    "listState",
                    "timeZoneOption",
                    "hasDeletedLeads",
                    "processingResult",
                    "processingStatus"
                ],
                "type": "object"
            },
            "User": {
                "properties": {
                    "children": {
                        "items": {
                            "$ref": "#/components/schemas/User"
                        },
                        "type": "array"
                    },
                    "creationDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "fullName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "parentPath": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "phoneNumberE164": {
                        "type": "string"
                    },
                    "phoneNumbersI18nEnabled": {
                        "type": "boolean"
                    },
                    "rcAccountId": {
                        "type": "string"
                    },
                    "rcUserId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "regionalSettings": {
                        "$ref": "#/components/schemas/RegionalSettingRequestResponse"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Role"
                      }
                    },
                    "rootUser": {
                        "type": "boolean"
                    },
                    "userId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "userManagedByRC": {
                        "type": "boolean"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserDetailsResult": {
                "properties": {
                    "adminId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "agentDetails": {
                        "items": {
                            "$ref": "#/components/schemas/AgentDetailsResult"
                        },
                        "type": "array"
                    },
                    "flr": {
                        "type": "boolean"
                    },
                    "iqUrl": {
                        "type": "string"
                    },
                    "loginHashcode": {
                        "type": "string"
                    },
                    "mainAccountId": {
                        "type": "string"
                    },
                    "managedMainAccountIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "port": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "rcAccountId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "rcUserId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "regionalSettings": {
                        "$ref": "#/components/schemas/RegionalSettingRequestResponse"
                    },
                    "xAuthToken": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserLoginView": {
                "properties": {
                    "accounts": {
                        "items": {
                            "$ref": "#/components/schemas/AccountView"
                        },
                        "type": "array"
                    },
                    "authToken": {
                        "type": "string"
                    },
                    "platformHost": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "ValidationErrorData": {
                "properties": {
                    "attributeName": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VisualIvr": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "debug": {
                        "type": "boolean"
                    },
                    "debugEmail": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "reportConfig": {
                        "type": "string"
                    },
                    "version": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "visualIvrDesc": {
                        "type": "string"
                    },
                    "visualIvrGroup": {
                        "$ref": "#/components/schemas/VisualIvrGroup"
                    },
                    "visualIvrId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "visualIvrName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VisualIvrConfig": {
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "data": {
                        "type": "string"
                    },
                    "visualIvrDesc": {
                        "type": "string"
                    },
                    "visualIvrId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "visualIvrName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "VisualIvrGroup": {
                "properties": {
                    "groupName": {
                        "type": "string"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "ivrGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "permissions": {
                        "items": {
                            "enum": [
                                "CREATE",
                                "READ",
                                "UPDATE",
                                "DELETE",
                                "REPORT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "visualIvrs": {
                        "$ref": "#/components/schemas/CollectionVisualIvr"
                    }
                },
                "type": "object"
            },
            "VisualIvrSkinny": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "groupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isDeleted": {
                        "type": "boolean"
                    },
                    "visualIvrDesc": {
                        "type": "string"
                    },
                    "visualIvrGroupId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "visualIvrId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "visualIvrName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "WFM": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "wfmType": {
                        "enum": [
                            "GENERIC",
                            "GENERIC_UDP",
                            "ASPECT",
                            "AC2",
                            "PIPKINS",
                            "MONET",
                            "NONE"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "WhitelistEntry": {
                "properties": {
                    "addedBy": {
                        "type": "string"
                    },
                    "addedDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "expireDate": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "isIntl": {
                        "type": "boolean"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "whitelistTag": {
                        "$ref": "#/components/schemas/WhitelistTag"
                    },
                    "whitelistTagId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "WhitelistTag": {
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "addedBy": {
                        "type": "string"
                    },
                    "addedDts": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "whitelistTagId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "wlTagId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "WhitelistTagMembers": {
                "properties": {
                    "campaign": {
                        "$ref": "#/components/schemas/Campaign"
                    },
                    "campaignId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "whitelistTag": {
                        "$ref": "#/components/schemas/WhitelistTag"
                    }
                },
                "type": "object"
            },
            "WsdlDefinition": {
                "properties": {
                    "operations": {
                        "items": {
                            "$ref": "#/components/schemas/Operation"
                        },
                        "type": "array"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SubAccount": {
                "type": "object",
                "required": [
                    "subAccountId",
                    "subAccountName",
                    "isActive"
                ],
                "properties": {
                    "subAccountId": {
                        "type": "string",
                        "description": "Engage Voice sub-account id",
                        "example": "15910001"
                    },
                    "subAccountName": {
                        "type": "string",
                        "description": "Engage Sub-account name",
                        "example": "Cappuccino Engage Development"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "true if sub-account is active",
                        "example": true
                    }
                }
            },
            "QueueWithAgents": {
                "type": "object",
                "required": [
                    "queueId",
                    "queueName",
                    "gateGroupId",
                    "isActive",
                    "createdOn"
                ],
                "properties": {
                    "queueId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Unique ID for inbound queue",
                        "example": 555
                    },
                    "queueName": {
                        "type": "string",
                        "description": "Name of inbound queue",
                        "example": "Test queue"
                    },
                    "gateGroupId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "inbound queue group ID",
                        "example": 1009
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "true if the inbound queue is active",
                        "example": true
                    },
                    "createdOn": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when inbound group was created",
                        "example": "2020-07-21T17:32:28Z"
                    },
                    "agentIds": {
                        "type": "array",
                        "description": "List of agents who connected to this queue",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": [
                            10,
                            20
                        ]
                    }
                }
            },
            "HistoricalReportParams": {
                "description": "Parameters for historical reports",
                "required": [
                    "startDate",
                    "timeInterval",
                    "timeZone",
                    "outputFormat"
                ],
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "description": "Start date and time for the logging interval. Note: The report will be generated to the nearest minute (Seconds will not be taken into account).",
                        "example": "2021-02-28 08:27:00"
                    },
                    "timeInterval": {
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            15,
                            30,
                            45,
                            60
                        ],
                        "description": "Interval length in minutes.",
                        "example": 60
                    },
                    "timeZone": {
                        "type": "string",
                        "description": "Timezone name which should be used for report generation",
                        "example": "US/Eastern"
                    },
                    "reportType": {
                        "type": "string",
                        "enum": [
                            "WEM"
                        ],
                        "description": "Report type which defines required input parameters",
                        "default": "WEM",
                        "example": "WEM"
                    },
                    "outputFormat": {
                        "type": "string",
                        "enum": [
                            "CSV",
                            "XML"
                        ],
                        "description": "Report file format",
                        "example": "CSV"
                    }
                }
            },
            "RealtimeReportParams": {
                "description": "Parameters for realtime reports",
                "required": [
                    "startDate",
                    "timeInterval",
                    "timeZone",
                    "outputFormat"
                ],
                "type": "object",
                "properties": {
                    "segmentEndTime": {
                        "type": "string",
                        "description": "Start date and time for the logging interval",
                        "example": "2021-02-28 08:27:15"
                    },
                    "timeInterval": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Interval length in seconds. Maximum allowed length is 3600 (1 hour). Note: if your time interval start or end in the future consecutive requests may return different list of segment. Idempotent results only guaranteed for the completed intervals. Segment recording URL may be added after delay. Allow 1-2min for processing.",
                        "example": 1800
                    },
                    "timeZone": {
                        "type": "string",
                        "description": "Timezone name which should be used for report generation",
                        "example": "US/Eastern"
                    },
                    "reportType": {
                        "type": "string",
                        "enum": [
                            "WEM"
                        ],
                        "description": "Client who requests the report",
                        "default": "WEM",
                        "example": "WEM"
                    },
                    "outputFormat": {
                        "type": "string",
                        "enum": [
                            "CSV",
                            "XML"
                        ],
                        "description": "Report file format",
                        "example": "CSV"
                    }
                }
            },
            "BaseWemStateInfo": {
                "type": "object",
                "required": [
                    "createdAt",
                    "updatedAt",
                    "version"
                ],
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "format": "datetime",
                        "description": "Creation date and time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "datetime",
                        "description": "Date and time of last update action"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version number"
                    }
                }
            },
            "MainAccountWemState": {
                "description": "Main Account WEM state",
                "type": "object",
                "required": [
                    "mainAccountId",
                    "mainAccountName",
                    "status"
                ],
                "properties": {
                    "mainAccountId": {
                        "type": "string",
                        "description": "Main Account Id",
                        "example": "99990033"
                    },
                    "mainAccountName": {
                        "type": "string",
                        "description": "Main Account Name",
                        "example": "Internal Account"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "SUSPENDED"
                        ],
                        "description": "WEM feature status:\n  * `ACTIVE` - WEM feature is active for that Customer\n  * `SUSPENDED` - WEM feature is suspended for that Customer\n",
                        "example": "ACTIVE"
                    }
                }
            },
            "SubAccountWemState": {
                "description": "Engage Voice sub-account WEM state",
                "type": "object",
                "required": [
                    "subAccountId",
                    "status"
                ],
                "properties": {
                    "subAccountId": {
                        "type": "string",
                        "description": "Engage Voice sub-account id",
                        "example": "99990033"
                    },
                    "accountName": {
                        "type": "string",
                        "description": "Engage Voice sub-account name",
                        "example": "Internal Account"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE"
                        ],
                        "description": "WEM feature status:\n  * `ACTIVE` - WEM feature is active for that subaccount\n  * `INACTIVE` - WEM feature is inactive for that subaccount\n"
                    }
                }
            },
            "AssignedDnisBulkUpdateDTO": {
                "type": "object",
                "properties": {
                    "dnisType": {
                        "type": "string",
                        "enum": [
                            "ACCOUNT",
                            "ACD",
                            "AGENT",
                            "CHAT_QUEUE",
                            "OUTBOUND",
                            "VISUAL_IVR",
                            "CLOUD_PROFILE",
                            "CLOUD_DESTINATION",
                            "TRAC_NUMBER",
                            "HTTP_SERVICES",
                            "SCRIPTING",
                            "TN_MANAGER",
                            "SURVEY",
                            "DNIS",
                            "TEAMS",
                            "KNOWLEDGE_BASE",
                            "UTILITIES"
                        ]
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AssignedSmsDnisBulkUpdateDTO": {
                "type": "object",
                "properties": {
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "DnisBulkUpdateRequest": {
                "type": "object",
                "properties": {
                    "assignedDnis": {
                        "$ref": "#/components/schemas/AssignedDnisBulkUpdateDTO"
                    },
                    "assignedSmsDnis": {
                        "$ref": "#/components/schemas/AssignedSmsDnisBulkUpdateDTO"
                    },
                    "dnisPool": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DnisPoolDTO"
                        }
                    },
                    "general": {
                        "$ref": "#/components/schemas/GeneralDTO"
                    },
                    "mediaCodes": {
                        "$ref": "#/components/schemas/MediaCodeDTO"
                    }
                }
            },
            "DnisPoolDTO": {
                "type": "object",
                "properties": {
                    "dnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reservedAccountId": {
                        "type": "string"
                    }
                }
            },
            "GeneralDTO": {
                "type": "object",
                "properties": {
                    "dnisDescription": {
                        "type": "string"
                    },
                    "inboundContext": {
                        "type": "string"
                    },
                    "originatingDnis": {
                        "type": "string"
                    },
                    "reservedAccountId": {
                        "type": "string"
                    }
                }
            },
            "MediaCodeDTO": {
                "type": "object",
                "properties": {
                    "dnisCategory": {
                        "type": "string"
                    },
                    "mediaCode": {
                        "type": "string"
                    },
                    "mediaFormat": {
                        "type": "string"
                    },
                    "mediaIsci": {
                        "type": "string"
                    },
                    "mediaLength": {
                        "type": "string"
                    },
                    "mediaMarket": {
                        "type": "string"
                    },
                    "mediaNetwork": {
                        "type": "string"
                    },
                    "mediaUrl": {
                        "type": "string"
                    },
                    "mediaVersion": {
                        "type": "string"
                    },
                    "mediaWebSourcecode": {
                        "type": "string"
                    }
                }
            },
            "CreateProductReq": {
                "required": [
                    "mainAccountId",
                    "productId",
                    "productType",
                    "rcAccountId",
                    "streamingUrl",
                    "subAccountId"
                ],
                "type": "object",
                "properties": {
                    "productType": {
                        "type": "string",
                        "enum": [
                            "QUEUE",
                            "CAMPAIGN"
                        ]
                    },
                    "productId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subAccountId": {
                        "type": "string"
                    },
                    "mainAccountId": {
                        "type": "string"
                    },
                    "rcAccountId": {
                        "type": "string"
                    },
                    "streamingUrl": {
                        "pattern": "^$|^(wss:\\/\\/)([0-9]{1,3}(?:\\.[0-9]{1,3}){3}|(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9]))(:([0-9]{1,5}))?$",
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    }
                }
            },
            "ProductResponse": {
                "required": [
                    "mainAccountId",
                    "productId",
                    "productType",
                    "subAccountId"
                ],
                "type": "object",
                "properties": {
                    "subAccountId": {
                        "type": "string"
                    },
                    "mainAccountId": {
                        "type": "string"
                    },
                    "productType": {
                        "type": "string",
                        "enum": [
                            "QUEUE",
                            "CAMPAIGN"
                        ]
                    },
                    "productId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "rcAccountId": {
                        "type": "string"
                    },
                    "streamingUrl": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    }
                }
            },
            "UpdateProductReq": {
                "required": [
                    "productId",
                    "productType",
                    "streamingUrl",
                    "subAccountId"
                ],
                "type": "object",
                "properties": {
                    "productType": {
                        "type": "string",
                        "enum": [
                            "QUEUE",
                            "CAMPAIGN"
                        ]
                    },
                    "productId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subAccountId": {
                        "type": "string"
                    },
                    "mainAccountId": {
                        "type": "string"
                    },
                    "rcAccountId": {
                        "type": "string"
                    },
                    "streamingUrl": {
                        "pattern": "^$|^(wss:\\/\\/)([0-9]{1,3}(?:\\.[0-9]{1,3}){3}|(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9]))(:([0-9]{1,5}))?$",
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    }
                }
            },
            "InteractionMetadataRequest": {
                "description": "Parameters for realtime reports",
                "required": [
                    "segmentEndTime",
                    "timeInterval",
                    "timeZone"
                ],
                "type": "object",
                "properties": {
                    "segmentEndTime": {
                        "type": "string",
                        "description": "Start date and time for the logging interval",
                        "example": "2021-02-28 08:27:15"
                    },
                    "timeInterval": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Interval length in seconds. Maximum allowed length is 3600 (1 hour). Note: if your time interval start or end in the future consecutive requests may return different list of segment. Idempotent results only guaranteed for the completed intervals. Segment recording URL may be added after delay. Allow 1-2min for processing.",
                        "example": 1800
                    },
                    "timeZone": {
                        "type": "string",
                        "description": "Timezone name which should be used for report generation",
                        "example": "US/Eastern"
                    }
                }
            },
            "InteractionSegmentMetaData2Array": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/InteractionSegmentMetaData2"
                }
            },
            "InteractionSegmentMetaData2": {
                "type": "object",
                "required": [
                    "interactionId",
                    "interactionStartTime",
                    "interactionDuration",
                    "segmentId",
                    "segmentAgentId",
                    "segmentContactStartTime",
                    "segmentDuration",
                    "segmentCallingAddress",
                    "segmentCalledAddress",
                    "segmentDirection",
                    "segmentRecordingURL",
                    "segmentAgentGroupId"
                ],
                "properties": {
                    "interactionId": {
                        "type": "string",
                        "description": "Unique interaction ID used to connect different call segments together in transfer/conference scenarios.",
                        "example": "20200721123305013105000001977"
                    },
                    "interactionStartTimeMs": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time of the interaction. Could be different from segment start time if customer was engaged with the IVR, waited in queue, etc before agent joined the conversation. Milliseconds precision.",
                        "example": "2020-07-21T17:32:28.001Z"
                    },
                    "interactionDurationMs": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total duration of the interaction. Milliseconds precision.",
                        "example": 832
                    },
                    "segmentID": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Unique segment sequnce ID within the interaction.",
                        "example": 2
                    },
                    "segmentAgentId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "RingCentral user id.",
                        "example": 1009
                    },
                    "segmentContactStartTimeMs": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time agent joined the conversation. Milliseconds precision.",
                        "example": "2020-07-21T17:32:40.002Z"
                    },
                    "segmentContactEndTimeMs": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time agent left the conversation. Milliseconds precision.",
                        "example": "2020-07-21T17:32:42.045Z"
                    },
                    "segmentDuration": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Segment duration (available even when segmentContactEndTime is not provided). Seconds.",
                        "example": 832
                    },
                    "interactionCallingAddress": {
                        "type": "string",
                        "description": "The ANI of the interaction",
                        "example": 4155058987
                    },
                    "interactionCalledAddress": {
                        "type": "string",
                        "description": "The DNIS of the interaction",
                        "example": 8776239199
                    },
                    "interactionDirection": {
                        "type": "string",
                        "enum": [
                            "INBOUND",
                            "OUTBOUND"
                        ],
                        "description": "Direction of the interaction.",
                        "example": "INBOUND"
                    },
                    "segmentRecordingURL": {
                        "type": "string",
                        "description": "URL for segment recording",
                        "example": "https://c02-recordings.virtualacd.biz/api/v1/calls/recordings/?v=1&accountId=99990001&bucket=c02-recordings&region=us-east-1&compliance=false&file=99990001/202205/09/20220509120710013214000058679-2.WAV"
                    },
                    "segmentAgentGroupId": {
                        "type": "string",
                        "description": "Agent group Id",
                        "example": 8
                    },
                    "segmentEvents": {
                        "type": "array",
                        "description": "Ordered list of events. Can be empty if segmentRecordingURL is empty. In other cases array start with the event `REC_START`. Events don't overlap each other.",
                        "items": {
                            "$ref": "#/components/schemas/InteractionSegmentEvent"
                        }
                    }
                }
            },
            "InteractionSegmentEvent": {
                "type": "object",
                "required": [
                    "eventTimeMs",
                    "clientEventTimeMs",
                    "eventType"
                ],
                "properties": {
                    "eventTimeMs": {
                        "type": "string",
                        "format": "date-time",
                        "description": "event time with milliseconds precision. Server side.",
                        "example": "2020-07-21T17:32:28.000Z"
                    },
                    "clientEventTimeMs": {
                        "type": "string",
                        "format": "date-time",
                        "description": "event time with milliseconds precision. Client side.",
                        "example": "2020-07-21T17:32:28.000Z"
                    },
                    "eventType": {
                        "type": "string",
                        "enum": [
                            "REC_START",
                            "REC_STOP"
                        ],
                        "example": "REC_START"
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "scheme": "bearer",
                "type": "http"
            },
            "apiKey": {
                "in": "header",
                "name": "apiKey",
                "type": "apiKey"
            }
        }
    },
    "info": {
        "contact": {},
        "license": {
            "name": "none"
        },
        "termsOfService": "https://developers.ringcentral.com",
        "title": "RingCentral RingCx API",
        "version": "1.0.0"
    },
    "openapi": "3.0.0",
    "paths": {
        "/api/auth/login/rc/accesstoken": {
            "post": {
                "operationId": "loginWithRcAccessToken",
                "parameters": [
                    {
                        "description": "Includes the refresh token along with the Engage Access Token.",
                        "in": "query",
                        "name": "includeRefresh",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "To acquire an Engage Access Token, you will need to first [retrieve a Ring Central Access Token](https://developers.ringcentral.com/engage/voice/guide/authentication/auth-ringcentral#retrieve-ringcentral-access-token).",
                        "in": "query",
                        "name": "rcAccessToken",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The Ring Central Token Type is a 'Bearer' type using the [OAuth 2.0](https://developers.ringcentral.com/api-reference/authentication) bearer token.",
                        "example": "Bearer",
                        "in": "query",
                        "name": "rcTokenType",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenUserDetails"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Logs in an RC user via their access token issued by the RC API server. Returns Engage access token and user details",
                "tags": [
                    "RingCentral Auth"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/activeCalls/createManualAgentCall": {
            "post": {
                "description": "Permissions: READ on Account (Permission Override)",
                "operationId": "createManualAgentCall",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "username",
                        "in": "query",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "destination",
                        "in": "query",
                        "name": "destination",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ringDuration",
                        "in": "query",
                        "name": "ringDuration",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "callerId",
                        "in": "query",
                        "name": "callerId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a manual agent call",
                "tags": [
                    "Active Calls"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/activeCalls/list": {
            "get": {
                "description": "Permissions: READ on Account",
                "operationId": "getProductActiveCallsListRequest",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "product",
                        "in": "query",
                        "name": "product",
                        "schema": {
                            "enum": [
                                "ACCOUNT",
                                "ACD",
                                "AGENT",
                                "CHAT_QUEUE",
                                "OUTBOUND",
                                "VISUAL_IVR",
                                "CLOUD_PROFILE",
                                "CLOUD_DESTINATION",
                                "TRAC_NUMBER",
                                "HTTP_SERVICES",
                                "SCRIPTING",
                                "TN_MANAGER",
                                "SURVEY",
                                "DNIS",
                                "TEAMS",
                                "KNOWLEDGE_BASE",
                                "UTILITIES"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "productId",
                        "in": "query",
                        "name": "productId",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "externalId",
                        "in": "query",
                        "name": "externalId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ActiveCallListResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of current active calls for a given product OR externalId, on an account",
                "tags": [
                    "Active Calls"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/activeCalls/prerouteChecks/checkQueueStatus": {
            "get": {
                "description": "Check queue status API returns true or false (with more info) if the queue is available to take calls based on the max queue time.",
                "operationId": "checkQueueStatus",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "DNIS to be used for queue lookup. Must be assigned to the queue.",
                        "in": "query",
                        "name": "destination_number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Max queue time. If max queue time is greater than 0, then if the longest in queue time is less than the passed in max queue time, return TRUE, else return FALSE with message containing the number of calls in queue and the longest queue time. If the max queue time is <=0, then return TRUE if there are any agents available in the queue to take the call, else return FALSE. auth_token - permanent API x-auth-token. More info https://developers.ringcentral.com/engage/voice/guide/authentication/auth-legacy",
                        "in": "query",
                        "name": "maxq",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "phoneNumbersI18nEnabled",
                        "in": "query",
                        "name": "phoneNumbersI18nEnabled",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PrerouteCheckStatus"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Check queue status",
                "tags": [
                    "Active Calls"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/activeCalls/prerouteChecks/checkQueueThreshold": {
            "get": {
                "description": "Check queue threshold API Returns true or false based on the current number of calls in queue and the passed in threshold value.",
                "operationId": "checkQueueThreshold",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "DNIS to be used for queue lookup. Must be assigned to the queue.",
                        "in": "query",
                        "name": "destination_number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "If the number of calls currently in queue is less than the passed maxCallsQueued value (default 0) it returns TRUE, else FALSE. auth_token - permanent API x-auth-token. More info https://developers.ringcentral.com/engage/voice/guide/authentication/auth-legacy",
                        "in": "query",
                        "name": "maxCallsQueued",
                        "schema": {
                            "default": 10,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "phoneNumbersI18nEnabled",
                        "in": "query",
                        "name": "phoneNumbersI18nEnabled",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PrerouteCheckStatus"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Check queue threshold",
                "tags": [
                    "Active Calls"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/activeCalls/{uii}/addSessionToCall": {
            "post": {
                "description": "Permissions: READ on Account (Permission Override)",
                "operationId": "addSessionToCall",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "uii",
                        "in": "path",
                        "name": "uii",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "destination",
                        "in": "query",
                        "name": "destination",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "sessionType",
                        "in": "query",
                        "name": "sessionType",
                        "required": true,
                        "schema": {
                            "enum": [
                                "MONITOR",
                                "BARGEIN",
                                "COACHING"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Provides support for adding sessions to an active call",
                "tags": [
                    "Active Calls"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/activeCalls/{uii}/dispositionCall": {
            "post": {
                "description": "Permissions: READ on Account (Permission Override)",
                "operationId": "dispositionCall",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "uii",
                        "in": "path",
                        "name": "uii",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "disposition",
                        "in": "query",
                        "name": "disposition",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "callback",
                        "in": "query",
                        "name": "callback",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "callBackDTS",
                        "in": "query",
                        "name": "callBackDTS",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "notes",
                        "in": "query",
                        "name": "notes",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Sets the call disposition for either INBOUND or OUTBOUND calls and releases the agent from PD state",
                "tags": [
                    "Active Calls"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/activeCalls/{uii}/hangupCall": {
            "post": {
                "description": "Permissions: READ on Account (Permission Override)",
                "operationId": "hangupCall",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "uii",
                        "in": "path",
                        "name": "uii",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Terminates an active call",
                "tags": [
                    "Active Calls"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/activeCalls/{uii}/hangupSession": {
            "post": {
                "description": "Permissions: READ on Account (Permission Override)",
                "operationId": "hangupSession",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "uii",
                        "in": "path",
                        "name": "uii",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "phone",
                        "in": "query",
                        "name": "phone",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Terminates an active session",
                "tags": [
                    "Active Calls"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/activeCalls/{uii}/toggleCallRecording": {
            "post": {
                "description": "Permissions: READ on Account (Permission Override)",
                "operationId": "toggleCallRecording",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "uii",
                        "in": "path",
                        "name": "uii",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "record",
                        "in": "query",
                        "name": "record",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Provides support for toggling call recording on/off for an active call",
                "tags": [
                    "Active Calls"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/agentGroups": {
            "get": {
                "description": "Permissions: READ on Account, Post Filtered Results",
                "operationId": "getAgentGroupList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "includePermissions",
                        "in": "query",
                        "name": "includePermissions",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AgentGroup"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of agent groups for an account",
                "tags": [
                    "Agent Groups"
                ]
            },
            "post": {
                "description": "Permissions: CREATE on Account",
                "operationId": "createAgentGroup",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgentGroup"
                            }
                        }
                    },
                    "description": "agentGroup",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgentGroup"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a single new agent group for an account",
                "tags": [
                    "Agent Groups"
                ],
                "x-codegen-request-body-name": "agentGroup"
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/agentGroups/{agentGroupId}": {
            "delete": {
                "deprecated": true,
                "description": "Permissions: DELETE on Agent Group",
                "operationId": "deleteAgentGroup",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "agentGroupId",
                        "in": "path",
                        "name": "agentGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Deletes an agent group for an account",
                "tags": [
                    "Agent Groups"
                ]
            },
            "get": {
                "description": "Permissions: READ on Gate Group",
                "operationId": "getAgentGroup",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "agentGroupId",
                        "in": "path",
                        "name": "agentGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "includePermissions",
                        "in": "query",
                        "name": "includePermissions",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgentGroup"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of agent groups for an account",
                "tags": [
                    "Agent Groups"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Agent Group",
                "operationId": "updateAgentGroup",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "agentGroupId",
                        "in": "path",
                        "name": "agentGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgentGroup"
                            }
                        }
                    },
                    "description": "agentGroup",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgentGroup"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates an agent group for an account",
                "tags": [
                    "Agent Groups"
                ],
                "x-codegen-request-body-name": "agentGroup"
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/agentGroups/{agentGroupId}/agents": {
            "get": {
                "description": "Permissions: READ on Agent Group, Post Filtered Results",
                "operationId": "getAgentList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "agentGroupId",
                        "in": "path",
                        "name": "agentGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Agent"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of agents for an agent group",
                "tags": [
                    "Agents"
                ]
            },
            "post": {
                "description": "Permissions: CREATE on Agent Group",
                "operationId": "createAgent",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "agentGroupId",
                        "in": "path",
                        "name": "agentGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgentRequest"
                            }
                        }
                    },
                    "description": "agentRequest",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agent"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a single agent for an agent group",
                "tags": [
                    "Agents"
                ],
                "x-codegen-request-body-name": "agentRequest"
            },
            "put": {
                "description": "Permissions: UPDATE on Agent Group",
                "operationId": "updateAgents",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "agentGroupId",
                        "in": "path",
                        "name": "agentGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/Agent"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "agents",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Agent"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a listing of agents for an agent group",
                "tags": [
                    "Agents"
                ],
                "x-codegen-request-body-name": "agents"
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/agentGroups/{agentGroupId}/agents/{agentId}": {
            "delete": {
                "description": "Permissions: DELETE on Agent",
                "operationId": "deleteAgent",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "agentGroupId",
                        "in": "path",
                        "name": "agentGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "agentId",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Deletes an agent for an agent group",
                "tags": [
                    "Agents"
                ]
            },
            "get": {
                "description": "Permissions: READ on Agent",
                "operationId": "getAgent",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "agentGroupId",
                        "in": "path",
                        "name": "agentGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "agentId",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agent"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a single agent for an agent group",
                "tags": [
                    "Agents"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Agent",
                "operationId": "updateAgent",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "agentGroupId",
                        "in": "path",
                        "name": "agentGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "agentId",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgentRequest"
                            }
                        }
                    },
                    "description": "updateRequest",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Agent"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a single agent for an agent group",
                "tags": [
                    "Agents"
                ],
                "x-codegen-request-body-name": "updateRequest"
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/agentGroups/{agentGroupId}/gateGroups/{gateGroupId}/gates/{gateId}": {
            "get": {
                "description": "Permissions: READ on Account, READ on requested Gate",
                "operationId": "getLoggedInAgentsByAgentGroupPerQueue",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "agentGroupId",
                        "in": "path",
                        "name": "agentGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns the count of agents in an agentGroup logged into a Queue ",
                "tags": [
                    "Agent Access"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/actions": {
            "put": {
                "description": "Permissions: READ on Account (Permission Override), UPDATE on Campaign",
                "operationId": "performLeadAction",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "leadAction",
                        "in": "query",
                        "name": "leadAction",
                        "required": true,
                        "schema": {
                            "enum": [
                                "RESET_LEADS",
                                "CANCEL_LEADS",
                                "DELETE_LEADS",
                                "PAUSE_LEADS",
                                "DIALER_REFRESH",
                                "READY_LEADS",
                                "MANUAL_LEADS",
                                "EMAIL_LEADS",
                                "CALLBACK_LEADS",
                                "MOVE_TO_CAMPAIGN",
                                "AGENT_RESERVATION",
                                "SUPPRESS_LEADS",
                                "UNSUPPRESS_LEADS"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeadManagerRequest"
                            }
                        }
                    },
                    "description": "leadManagerActionRequest",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadActionResult"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Performs a lead action against the matching campaign leads found for the given the search criteria",
                "tags": [
                    "Campaigns"
                ],
                "x-codegen-request-body-name": "leadManagerActionRequest"
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/leadSearch": {
            "post": {
                "description": "Permissions: READ on Account (Permission Override)",
                "operationId": "searchForCampaignLeads",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "count",
                        "in": "query",
                        "name": "count",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignLeadSearchCriteria"
                            }
                        }
                    },
                    "description": "searchRequest",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Allows searching of campaign leads for a single campaign",
                "tags": [
                    "Leads"
                ],
                "x-codegen-request-body-name": "searchRequest"
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/leadSearchByPhoneList": {
            "post": {
                "description": "Permissions: READ on Account (Permission Override)",
                "operationId": "uploadSearchCriteriaForCampaignLeads",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "file",
                                        "format": "binary",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "file"
                                ],
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CampaignLeadSearchResultsView"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Allows searching of campaign leads for a single campaign",
                "tags": [
                    "Campaigns"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/leadStates": {
            "get": {
                "description": "Permissions: READ on Account",
                "operationId": "getLeadStates",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "enum": [
                                            "ACTIVE",
                                            "AGENT-CALLBACK",
                                            "CALLBACK-CANCELLED",
                                            "CALLBACK",
                                            "CANCELLED",
                                            "COMPLETE",
                                            "DISCONNECTED",
                                            "DO-NOT-CALL",
                                            "INTERCEPT",
                                            "MAX-DIAL-LIMIT",
                                            "PAUSED",
                                            "PENDING-CALLBACK",
                                            "PENDING-ERR",
                                            "PENDING-HCI",
                                            "PENDING",
                                            "READY",
                                            "TRANSITIONED",
                                            "WHITELIST"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of all lead states for an account",
                "tags": [
                    "Leads"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/systemDispositions": {
            "get": {
                "description": "Permissions: READ on Account",
                "operationId": "getSystemDispositions",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "enum": [
                                            "ANSWER",
                                            "NOANSWER",
                                            "BUSY",
                                            "MACHINE",
                                            "INTERCEPT",
                                            "DISCONNECT",
                                            "ABANDON",
                                            "CONGESTION",
                                            "MANUAL_PASS",
                                            "INBOUND_CALLBACK",
                                            "APP_DNC",
                                            "APP_REQUEUE",
                                            "APP_REQUEUE_COMPLETE",
                                            "APP_REQUEUE_ABANDON",
                                            "INBOUND_ABANDON",
                                            "API_BLOCKED",
                                            "API_ERROR"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of all system dispositions for an account",
                "tags": [
                    "Leads"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/{leadId}": {
            "patch": {
                "description": "Permissions: READ on Account (Permission Override), UPDATE on Campaign",
                "operationId": "patchCampaignLead",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "leadId",
                        "in": "path",
                        "name": "leadId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "campaignId",
                        "in": "query",
                        "name": "campaignId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "listId",
                        "in": "query",
                        "name": "listId",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "timezoneOption",
                        "in": "query",
                        "name": "timezoneOption",
                        "schema": {
                            "enum": [
                                "NPA_NXX",
                                "ZIPCODE",
                                "EXPLICIT",
                                "NOT_APPLICABLE"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "duplicateHandling",
                        "in": "query",
                        "name": "duplicateHandling",
                        "schema": {
                            "default": "RETAIN_ALL",
                            "enum": [
                                "RETAIN_ALL",
                                "REMOVE_ALL_EXISTING",
                                "REMOVE_FROM_LIST"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignLead"
                            }
                        }
                    },
                    "description": "campaignLead",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignLead"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Allows updating of a campaign lead, only updating those fields passed in",
                "tags": [
                    "Leads"
                ],
                "x-codegen-request-body-name": "campaignLead"
            },
            "put": {
                "description": "Permissions: READ on Account (Permission Override), UPDATE on Campaign",
                "operationId": "updateCampaignLead",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "leadId",
                        "in": "path",
                        "name": "leadId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "campaignId",
                        "in": "query",
                        "name": "campaignId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "listId",
                        "in": "query",
                        "name": "listId",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "timezoneOption",
                        "in": "query",
                        "name": "timezoneOption",
                        "schema": {
                            "enum": [
                                "NPA_NXX",
                                "ZIPCODE",
                                "EXPLICIT",
                                "NOT_APPLICABLE"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "duplicateHandling",
                        "in": "query",
                        "name": "duplicateHandling",
                        "schema": {
                            "default": "RETAIN_ALL",
                            "enum": [
                                "RETAIN_ALL",
                                "REMOVE_ALL_EXISTING",
                                "REMOVE_FROM_LIST"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignLead"
                            }
                        }
                    },
                    "description": "campaignLead",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignLead"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Allows updating of a campaign lead, updating entire lead including fields not passed in",
                "tags": [
                    "Leads"
                ],
                "x-codegen-request-body-name": "campaignLead"
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/campaigns/{campaignId}/leadLoader/direct": {
            "post": {
                "description": "Permissions: Update on Campaign (Permission Override)",
                "operationId": "loadDirectLeads",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "campaignId",
                        "in": "path",
                        "name": "campaignId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeadListProcessingRequest"
                            }
                        }
                    },
                    "description": "request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadListProcessingResult"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Uploads a single lead or list of leads to a new or existing list",
                "tags": [
                    "Leads"
                ],
                "x-codegen-request-body-name": "request"
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/campaigns/{campaignId}/leadLoader/preview": {
            "post": {
                "description": "Permissions: UPDATE on Campaign (Permission Override)",
                "operationId": "previewLeadList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "campaignId",
                        "in": "path",
                        "name": "campaignId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "fileType",
                        "in": "query",
                        "name": "fileType",
                        "required": true,
                        "schema": {
                            "enum": [
                                "EXCEL",
                                "PIPE",
                                "COMMA",
                                "TAB"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "quoteCharacter",
                        "in": "query",
                        "name": "quoteCharacter",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "file",
                                        "format": "binary",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "file"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeadListPreviewResponse"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Upload new leads to a new or existing list",
                "tags": [
                    "Outbound"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/campaigns/{campaignId}/leadLoader/process": {
            "post": {
                "description": "Permissions: UPDATE on Campaign (Permission Override)",
                "operationId": "loadList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "campaignId",
                        "in": "path",
                        "name": "campaignId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeadListProcessingRequest"
                            }
                        }
                    },
                    "description": "request",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "202": {
                        "description": "Accepted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Upload new leads to a new or existing list",
                "tags": [
                    "Outbound"
                ],
                "x-codegen-request-body-name": "request"
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/countries/available": {
            "get": {
                "description": "Permissions: READ on Account",
                "operationId": "getCountryList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CountryCode"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of all country codes available on the system",
                "tags": [
                    "Countries"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/dialGroups": {
            "get": {
                "description": "Permissions: READ on Account, Post Filtered Results",
                "operationId": "getDialGroupListByAccount",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/DialGroup"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of dial groups for an account",
                "tags": [
                    "Dial Groups"
                ]
            },
            "post": {
                "description": "Permissions: CREATE on Account",
                "operationId": "createDialGroup",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DialGroup"
                            }
                        }
                    },
                    "description": "dialGroup",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DialGroup"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a dial group for an account",
                "tags": [
                    "Dial Groups"
                ],
                "x-codegen-request-body-name": "dialGroup"
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/dialGroups/withChildren": {
            "get": {
                "description": "Permissions: READ on Account, Post Filtered Results for Dial Groups and Campaigns",
                "operationId": "getDialGroupListWithChildren",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "includePermissions",
                        "in": "query",
                        "name": "includePermissions",
                        "schema": {
                            "default": false,
                            "type": "string"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/DialGroup"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of dial groups with associated campaigns for an account",
                "tags": [
                    "Dial Groups"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}": {
            "delete": {
                "description": "Permissions: DELETE on Account",
                "operationId": "deleteDialGroup",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dialGroupId",
                        "in": "path",
                        "name": "dialGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Deletes a dial group for an account",
                "tags": [
                    "Dial Groups"
                ]
            },
            "get": {
                "description": "Permissions: READ on Dial Group",
                "operationId": "getDialGroup",
                "parameters": [
                    {
                        "description": "dialGroupId",
                        "in": "path",
                        "name": "dialGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DialGroup"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a dial group for an account",
                "tags": [
                    "Dial Groups"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Dial Group",
                "operationId": "updateDialGroup",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dialGroupId",
                        "in": "path",
                        "name": "dialGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DialGroup"
                            }
                        }
                    },
                    "description": "dialGroup",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DialGroup"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a dial group for an account",
                "tags": [
                    "Dial Groups"
                ],
                "x-codegen-request-body-name": "dialGroup"
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/assignAgents": {
            "put": {
                "description": "Permissions: UPDATE on Dial Group and READ on Agent",
                "operationId": "assignAgentsToDialGroups",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dialGroupId",
                        "in": "path",
                        "name": "dialGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/AgentDialGroupMember"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "agentDialGroupMembers",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionAgent"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Assigns a listing of agents to a dial group",
                "tags": [
                    "Dial Groups"
                ],
                "x-codegen-request-body-name": "agentDialGroupMembers"
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/assignedAgents": {
            "get": {
                "description": "Permissions: READ on Dial Group",
                "operationId": "getAgentsFromDialGroup",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dialGroupId",
                        "in": "path",
                        "name": "dialGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Agent"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of all agents assigned to a dial group",
                "tags": [
                    "Dial Groups"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/campaigns": {
            "get": {
                "description": "Permissions: READ on Dial Group, Post Filtered Results",
                "operationId": "getCampaignList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dialGroupId",
                        "in": "path",
                        "name": "dialGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Campaign"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of campaigns for a dial group",
                "tags": [
                    "Campaigns"
                ]
            },
            "post": {
                "description": "Permissions: UPDATE on Dial Group (Permission Override)",
                "operationId": "createCampaign",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dialGroupId",
                        "in": "path",
                        "name": "dialGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Campaign"
                            }
                        }
                    },
                    "description": "campaign",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a campaign for a dial group",
                "tags": [
                    "Campaigns"
                ],
                "x-codegen-request-body-name": "campaign"
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/campaigns/{campaignId}": {
            "delete": {
                "deprecated": true,
                "description": "Permissions: DELETE on Campaign",
                "operationId": "deleteCampaign",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dialGroupId",
                        "in": "path",
                        "name": "dialGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "campaignId",
                        "in": "path",
                        "name": "campaignId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Deletes a campaign for a dial group",
                "tags": [
                    "Campaigns"
                ]
            },
            "get": {
                "description": "Permissions: READ on Campaign",
                "operationId": "getCampaign",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dialGroupId",
                        "in": "path",
                        "name": "dialGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "campaignId",
                        "in": "path",
                        "name": "campaignId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a campaign for a dial group",
                "tags": [
                    "Campaigns"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Campaign",
                "operationId": "updateCampaign",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dialGroupId",
                        "in": "path",
                        "name": "dialGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "campaignId",
                        "in": "path",
                        "name": "campaignId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Campaign"
                            }
                        }
                    },
                    "description": "campaign",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campaign"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a campaign for a dial group",
                "tags": [
                    "Campaigns"
                ],
                "x-codegen-request-body-name": "campaign"
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/campaigns/{campaignId}/clearCache": {
            "post": {
                "description": "Permissions: READ on Campaign (Permission Override)",
                "operationId": "forceDialerRefresh",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "dialGroupId",
                        "in": "path",
                        "name": "dialGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "campaignId",
                        "in": "path",
                        "name": "campaignId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Clears the cache for a campaign",
                "tags": [
                    "Campaigns"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups": {
            "get": {
                "description": "Permissions: READ on Account, Post Filtered Results",
                "operationId": "getGateGroupList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GateGroup"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of queue groups (AKA gate groups) for an account",
                "tags": [
                    "Queue Groups"
                ]
            },
            "post": {
                "description": "Permissions: CREATE on Account",
                "operationId": "createGateGroup",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GateGroup"
                            }
                        }
                    },
                    "description": "gateGroup",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateGroup"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Create a single queue group (AKA gate group) for an account",
                "tags": [
                    "Queue Groups"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/withChildren": {
            "get": {
                "description": "Permissions: READ on Account, Post Filtered Results",
                "operationId": "getGateGroupListWithChildren",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "includePermissions",
                        "in": "query",
                        "name": "includePermissions",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GateGroup"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of queue groups (AKA gate groups) with related data for an account",
                "tags": [
                    "Queue Groups"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/withChildren/additionalData": {
            "get": {
                "description": "Permissions: READ on Account, Post Filtered Results",
                "operationId": "getGateGroupListWithChildrenAdditionalData",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GateGroup"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of queue groups (AKA gate groups) with related and additional data for an account",
                "tags": [
                    "Queue Groups"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}": {
            "delete": {
                "deprecated": true,
                "description": "Permissions: DELETE on Gate Group",
                "operationId": "deleteGateGroup",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Deletes a single queue group (AKA gate group)",
                "tags": [
                    "Queue Groups"
                ]
            },
            "get": {
                "description": "Permissions: READ on Gate Group",
                "operationId": "getGateGroup",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateGroup"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a single queue group (AKA gate group) for an account",
                "tags": [
                    "Queue Groups"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate Group",
                "operationId": "updateGateGroup",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GateGroup"
                            }
                        }
                    },
                    "description": "gateGroup",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateGroup"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a single queue group (AKA gate group) for an account",
                "tags": [
                    "Queue Groups"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates": {
            "get": {
                "description": "Permissions: READ on Gate Group, Post Filtered Results",
                "operationId": "getGateList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Gate"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of all queues (AKA gates) for a queue group",
                "tags": [
                    "Queues"
                ]
            },
            "post": {
                "description": "Permissions: CREATE on Gate Group",
                "operationId": "createGate",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Gate"
                            }
                        }
                    },
                    "description": "gate",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gate"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a new queue (AKA gate) for a queue group",
                "tags": [
                    "Queues"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}": {
            "delete": {
                "deprecated": true,
                "description": "Permissions: DELETE on Gate",
                "operationId": "deleteGate",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Deletes a queue (AKA gate) for a queue group",
                "tags": [
                    "Queues"
                ]
            },
            "get": {
                "description": "Permissions: READ on Gate",
                "operationId": "getGate",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gate"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a single queue (AKA gate) for a queue group",
                "tags": [
                    "Queues"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "updateGate",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Gate"
                            }
                        }
                    },
                    "description": "gate",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gate"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a queue (AKA gate) for a queue group",
                "tags": [
                    "Queues"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/assignAgents": {
            "put": {
                "description": "Permissions: UPDATE on Gate and READ on Agents",
                "operationId": "assignAgentsToGate",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/AgentGateAccess"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "agentAccessRequests",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Agent"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Assigns a listing of agents to a queue (AKA gate)",
                "tags": [
                    "Agents"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/assignGateToPriorityGroup": {
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "assignGateToPriorityGroup",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "priorityGroupId",
                        "in": "query",
                        "name": "priorityGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "priorityGroupRank",
                        "in": "query",
                        "name": "priorityGroupRank",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gate"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Assigns a queue (AKA gate) to a queue priority group for an account",
                "tags": [
                    "Queues"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/assignedAgents": {
            "get": {
                "description": "Permissions: READ on Gate",
                "operationId": "getAssignedAgentsForGate",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Agent"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of assigned agents for a queue (AKA gate) ",
                "tags": [
                    "Agents"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/clone": {
            "post": {
                "description": "Permissions: READ on cloned Gate and CREATE on new Gate Group (Permission Override",
                "operationId": "cloneGate",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "newGateGroupId",
                        "in": "query",
                        "name": "newGateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "newGateName",
                        "in": "query",
                        "name": "newGateName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gate"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a clone of a queue (AKA gate) for a queue group",
                "tags": [
                    "Queues"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/dispositions": {
            "get": {
                "description": "Permissions: READ on Gate, Post Filtered Results",
                "operationId": "getGateDispositionList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GateDisposition"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of dispositions for a queue (AKA gate)",
                "tags": [
                    "Queue Dispositions"
                ]
            },
            "post": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "createGateDisposition",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GateDisposition"
                            }
                        }
                    },
                    "description": "gateDisposition",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateDisposition"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a disposition for a queue (AKA gate)",
                "tags": [
                    "Queue Dispositions"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "saveGateDispositionList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/GateDisposition"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "gateDispositions",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GateDisposition"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Saves a list of dispositions for a queue (AKA gate)",
                "tags": [
                    "Queue Dispositions"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/dispositions/{gateDispositionId}": {
            "delete": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "deleteGateDisposition",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateDispositionId",
                        "in": "path",
                        "name": "gateDispositionId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Deletes a disposition for a queue (AKA gate)",
                "tags": [
                    "Queue Dispositions"
                ]
            },
            "get": {
                "description": "Permissions: READ on Gate",
                "operationId": "getGateDisposition",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateDispositionId",
                        "in": "path",
                        "name": "gateDispositionId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateDisposition"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a single disposition for a queue (AKA gate)",
                "tags": [
                    "Queue Dispositions"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "updateGateDisposition",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateDispositionId",
                        "in": "path",
                        "name": "gateDispositionId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GateDisposition"
                            }
                        }
                    },
                    "description": "gateDisposition",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateDisposition"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a single disposition for a queue (AKA gate)",
                "tags": [
                    "Queue Dispositions"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/gateAgentAccessLogin": {
            "get": {
                "description": "Permissions: READ on Account and Read on Agent, Post Filtered Results",
                "operationId": "getGatesAgentsLoggedInto",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GatesLoggedInAgentsView"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of all agents that have access to the queue (AKA gate) - this includes data to indicate if an agent is currently logged into the queue",
                "tags": [
                    "Agent Access"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/gateQueueEvents": {
            "get": {
                "description": "Permissions: READ on Gate",
                "operationId": "getGateQueueEventList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GateQueueEvent"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of gate queue events for a queue",
                "tags": [
                    "Queue Events"
                ]
            },
            "post": {
                "deprecated": true,
                "operationId": "createGateQueueEvent",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GateQueueEvent"
                            }
                        }
                    },
                    "description": "queueEvent",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateQueueEvent"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "createGateQueueEvent",
                "tags": [
                    "Queue Events"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "saveGateQueueEventList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/GateQueueEvent"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "queueEvents",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GateQueueEvent"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Saves a list of gate queue events for a queue",
                "tags": [
                    "Queue Events"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/gateQueueEvents/{eventId}": {
            "delete": {
                "description": "Permissions: UPDATE on Gate (Override Permission Request)",
                "operationId": "deleteGateQueueEvent",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "eventId",
                        "in": "path",
                        "name": "eventId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Deletes a gate queue event for a queue",
                "tags": [
                    "Queue Events"
                ]
            },
            "get": {
                "description": "Permissions: READ on Gate",
                "operationId": "getGateQueueEvent",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "eventId",
                        "in": "path",
                        "name": "eventId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateQueueEvent"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a single gate queue event for a queue",
                "tags": [
                    "Queue Events"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "updateGateQueueEvent",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "eventId",
                        "in": "path",
                        "name": "eventId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GateQueueEvent"
                            }
                        }
                    },
                    "description": "queueEvent",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateQueueEvent"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a single gate queue event for a queue",
                "tags": [
                    "Queue Events"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/gateQueueEvents/{eventId}/gateQueueDtmfEvents": {
            "get": {
                "description": "Permissions: READ on Gate",
                "operationId": "getGateQueueDtmfEventList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "eventId",
                        "in": "path",
                        "name": "eventId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GateQueueDtmfEvent"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of Gate Queue Dtmp Events for a Queue",
                "tags": [
                    "Queue Events"
                ]
            },
            "post": {
                "description": "Permissions: UPDATE on Gate (Permission Override)",
                "operationId": "createGateQueueDtmfEvent",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "eventId",
                        "in": "path",
                        "name": "eventId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GateQueueDtmfEvent"
                            }
                        }
                    },
                    "description": "postPayload",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateQueueDtmfEvent"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a new Gate Queue Dtmp Event",
                "tags": [
                    "Queue Events"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "saveGateQueueDtmfEventList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "eventId",
                        "in": "path",
                        "name": "eventId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/GateQueueDtmfEvent"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "postPayload",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GateQueueDtmfEvent"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a listing of Gate Queue Dtmp Events",
                "tags": [
                    "Queue Events"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/gateQueueEvents/{eventId}/gateQueueDtmfEvents/{dtmfEventId}": {
            "delete": {
                "description": "Permissions: UPDATE on Gate (Permission Override)",
                "operationId": "deleteGateQueueDtmfEvent",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "eventId",
                        "in": "path",
                        "name": "eventId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "dtmfEventId",
                        "in": "path",
                        "name": "dtmfEventId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Deletes a Gate Queue Dtmp Event",
                "tags": [
                    "Queue Events"
                ]
            },
            "get": {
                "description": "Permissions: READ on Gate",
                "operationId": "getGateQueueDtmfEvent",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "eventId",
                        "in": "path",
                        "name": "eventId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "dtmfEventId",
                        "in": "path",
                        "name": "dtmfEventId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateQueueDtmfEvent"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a single Gate Queue Dtmp Event",
                "tags": [
                    "Queue Events"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "updateGateQueueDtmfEvent",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "eventId",
                        "in": "path",
                        "name": "eventId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "dtmfEventId",
                        "in": "path",
                        "name": "dtmfEventId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GateQueueDtmfEvent"
                            }
                        }
                    },
                    "description": "postPayload",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateQueueDtmfEvent"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a single Gate Queue Dtmp Event",
                "tags": [
                    "Queue Events"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/moveToGroup": {
            "post": {
                "deprecated": true,
                "description": "Permissions: UPDATE on Gate and CREATE on new Gate Group (Permission Override)",
                "operationId": "moveGateToGroup",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "newGateGroupId",
                        "in": "query",
                        "name": "newGateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Move an existing queue (AKA gate) to a new existing queue group",
                "tags": [
                    "Queues"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/phoneBookEntries": {
            "get": {
                "description": "Permissions: READ on Gate",
                "operationId": "getGatePhoneBookEntries",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneBookEntry"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns all phone book entries for a queue (AKA gate)",
                "tags": [
                    "Queue Phone Book"
                ]
            },
            "post": {
                "description": "Permissions: UPDATE on Gate (Permission Override)",
                "operationId": "create",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneBookEntry"
                            }
                        }
                    },
                    "description": "entry",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneBookEntry"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a phone book entry for a queue (AKA gate)",
                "tags": [
                    "Queue Phone Book"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "updateGatePhoneBookEntries",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/PhoneBookEntry"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "entries",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PhoneBookEntry"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a listing of phone book entries for a queue (AKA gate)",
                "tags": [
                    "Queue Phone Book"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/phoneBookEntries/{entryId}": {
            "delete": {
                "description": "Permissions: UPDATE on Gate (Permission Override)",
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "entryId",
                        "in": "path",
                        "name": "entryId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Deletes a single phone book entry for a queue (AKA gate)",
                "tags": [
                    "Queue Phone Book"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "updatePhoneBookEntry",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "entryId",
                        "in": "path",
                        "name": "entryId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneBookEntry"
                            }
                        }
                    },
                    "description": "entry",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhoneBookEntry"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a phone book entry for a queue (AKA gate)",
                "tags": [
                    "Queue Phone Book"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/requeueShortcuts": {
            "get": {
                "description": "Permissions: READ on Gate",
                "operationId": "getGateRequeueShortcutList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/RequeueShortcut"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of requeue shortcuts for a queue (AKA gate)",
                "tags": [
                    "Requeue Shortcuts"
                ]
            },
            "post": {
                "description": "Permissions: UPDATE on Gate (Override Permission Request)",
                "operationId": "createGateRequeueShortcut",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequeueShortcut"
                            }
                        }
                    },
                    "description": "shortcut",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequeueShortcut"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a requeue shortcut for a queue (AKA gate)",
                "tags": [
                    "Requeue Shortcuts"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "createGateRequeueShortcuts",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/RequeueShortcut"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "shortcuts",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/RequeueShortcut"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a list of requeue shortcuts for a queue (AKA gate)",
                "tags": [
                    "Requeue Shortcuts"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/requeueShortcuts/{requeueShortcutId}": {
            "delete": {
                "description": "Permissions: UPDATE on Gate (Permission Override)",
                "operationId": "deleteGateRequeueShortcut",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "requeueShortcutId",
                        "in": "path",
                        "name": "requeueShortcutId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of requeue shortcuts for a queue (AKA gate)",
                "tags": [
                    "Requeue Shortcuts"
                ]
            },
            "get": {
                "description": "Permissions: READ on Gate",
                "operationId": "getGateRequeueShortcut",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "requeueShortcutId",
                        "in": "path",
                        "name": "requeueShortcutId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequeueShortcut"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a requeue shortcut for a queue (AKA gate)",
                "tags": [
                    "Requeue Shortcuts"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "updateGateRequeueShortcut",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "requeueShortcutId",
                        "in": "path",
                        "name": "requeueShortcutId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequeueShortcut"
                            }
                        }
                    },
                    "description": "requeueShortcut",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequeueShortcut"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a requeue shortcut for a queue (AKA gate)",
                "tags": [
                    "Requeue Shortcuts"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/scheduleOverrides": {
            "get": {
                "description": "Permissions: READ on Gate",
                "operationId": "getOverridesForGate",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GateScheduleOverride"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of schedule overrides for a queue (AKA gate)",
                "tags": [
                    "Queue Schedule"
                ]
            },
            "post": {
                "description": "Permissions: UPDATE on Gate (Permission Override)",
                "operationId": "createGateScheduledOverride",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GateScheduleOverride"
                            }
                        }
                    },
                    "description": "scheduleOverride",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateScheduleOverride"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a schedule override for a queue (AKA gate)",
                "tags": [
                    "Queue Schedule"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "saveList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/GateScheduleOverride"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "scheduleOverrides",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GateScheduleOverride"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Saves a listing of schedule overrides for a queue (AKA gate)",
                "tags": [
                    "Queue Schedule"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/scheduleOverrides/{scheduleOverrideId}": {
            "delete": {
                "description": "Permissions: UPDATE on Gate (Permission Override)",
                "operationId": "deleteGateScheduledOverride",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "scheduleOverrideId",
                        "in": "path",
                        "name": "scheduleOverrideId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Deletes a schedule override for a queue (AKA gate)",
                "tags": [
                    "Queue Schedule"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "updateGateScheduledOverride",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "scheduleOverrideId",
                        "in": "path",
                        "name": "scheduleOverrideId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GateScheduleOverride"
                            }
                        }
                    },
                    "description": "scheduleOverride",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateScheduleOverride"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a schedule override for a queue (AKA gate)",
                "tags": [
                    "Queue Schedule"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/setIsActive": {
            "put": {
                "description": "Permissions: UPDATE on Gate",
                "operationId": "setGateIsActive",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActiveState_boolean_"
                            }
                        }
                    },
                    "description": "state",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Set queue (AKA gate) active state",
                "tags": [
                    "Queues"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/specialAnis": {
            "delete": {
                "description": "Permissions: UPDATE on Gate (Permission Override)",
                "operationId": "deleteSpecialAni",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "type",
                        "in": "query",
                        "name": "type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ani",
                        "in": "query",
                        "name": "ani",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Deletes a special ani for a queue (AKA gate)",
                "tags": [
                    "Queue Special ANI"
                ]
            },
            "get": {
                "description": "Permissions: READ on Gate",
                "operationId": "getGateSpecialAniList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "type",
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "maxRows",
                        "in": "query",
                        "name": "maxRows",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GateSpecialAni"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of special anis for a queue (AKA gate)",
                "tags": [
                    "Queue Special ANI"
                ]
            },
            "post": {
                "description": "Permissions: UPDATE on Gate (Permission Override)",
                "operationId": "createGateSpecialAni",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GateSpecialAni"
                            }
                        }
                    },
                    "description": "gateSpecialAni",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateSpecialAni"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a special ani for a queue (AKA gate)",
                "tags": [
                    "Queue Special ANI"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/specialAnis/upload": {
            "post": {
                "description": "Permissions: UPDATE on Gate (Permission Override)",
                "operationId": "uploadSpecialAniList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "operation",
                        "in": "query",
                        "name": "operation",
                        "schema": {
                            "default": "APPEND",
                            "type": "string"
                        }
                    },
                    {
                        "description": "type",
                        "in": "query",
                        "name": "type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "S-ANI",
                                "THROTTLE"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "file",
                                        "format": "binary",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "file"
                                ],
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Uploads a special ani for a queue (AKA gate)",
                "tags": [
                    "Queue Special ANI"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/unassignAgent/{agentId}": {
            "delete": {
                "description": "Permissions: UPDATE on Gate (Permission Override), READ on agent",
                "operationId": "unassignAgentFromGate",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "gateId",
                        "in": "path",
                        "name": "gateId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "agentId",
                        "in": "path",
                        "name": "agentId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Unassigns a single agent from a queue (AKA gate)",
                "tags": [
                    "Agents"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/skills": {
            "get": {
                "description": "Permissions: READ on Gate Group",
                "operationId": "getList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GateGroupSkill"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of skills for a queue group (AKA gate group)",
                "tags": [
                    "Queue Skills"
                ]
            },
            "post": {
                "description": "Permissions: UPDATE on Gate Group (Permission Override)",
                "operationId": "createGateGroupSkill",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GateGroupSkill"
                            }
                        }
                    },
                    "description": "skill",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateGroupSkill"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a skill for a queue group (AKA gate group)",
                "tags": [
                    "Queue Skills"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate Group",
                "operationId": "saveGateGroupSkillList",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/GateGroupSkill"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "skills",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/GateGroupSkill"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates an existing list of skills for a queue group (AKA gate group)",
                "tags": [
                    "Queue Skills"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/skills/{skillId}": {
            "delete": {
                "description": "Permissions: UPDATE on Gate Group (Permission Override)",
                "operationId": "deleteGateGroupSkill",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "skillId",
                        "in": "path",
                        "name": "skillId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Deletes a skill for a queue group (AKA gate group)",
                "tags": [
                    "Queue Skills"
                ]
            },
            "get": {
                "description": "Permissions: READ on Gate Group",
                "operationId": "getDetail",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "skillId",
                        "in": "path",
                        "name": "skillId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateGroupSkill"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a skill for a queue group (AKA gate group)",
                "tags": [
                    "Queue Skills"
                ]
            },
            "put": {
                "description": "Permissions: UPDATE on Gate Group",
                "operationId": "updateGateGroupSkill",
                "parameters": [
                    {
                        "description": "accountId",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "gateGroupId",
                        "in": "path",
                        "name": "gateGroupId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "skillId",
                        "in": "path",
                        "name": "skillId",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GateGroupSkill"
                            }
                        }
                    },
                    "description": "skill",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GateGroupSkill"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Updates a skill for a queue group (AKA gate group)",
                "tags": [
                    "Queue Skills"
                ]
            }
        },
        "/voice/api/v1/admin/accounts/{accountId}/reportsStreaming": {
            "post": {
                "deprecated": true,
                "description": "Permissions: READ on Account",
                "operationId": "streamFile",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReportParams"
                            }
                        }
                    },
                    "description": "params",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Builds a report in different formats: xls/xlsx/csv/etc",
                "tags": [
                    "Reporting"
                ],
                "x-codegen-request-body-name": "params"
            }
        },
        "/voice/api/v1/admin/reports/{reportType}": {
            "get": {
                "description": "Permissions: Authenticated User",
                "operationId": "getReportCriteriaTemplate",
                "parameters": [
                    {
                        "description": "reportType",
                        "in": "path",
                        "name": "reportType",
                        "required": true,
                        "schema": {
                            "enum": [
                                "DIALER_RESULT_DOWNLOAD",
                                "GLOBAL_CALL_TYPE_EXCEL",
                                "GLOBAL_CALL_TYPE_DELIMITED",
                                "ALL_CALLS",
                                "IVR_DETAIL",
                                "TFN_DID_MANAGER_SUPERUSER_EXCEL",
                                "TFN_DID_MANAGER_EXCEL",
                                "TFN_DID_MANAGER_DELIMITED",
                                "CASPER_REPORT"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportCriteria"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a report criteria definition for a report type",
                "tags": [
                    "Reporting"
                ]
            }
        },
        "/voice/api/v1/admin/token": {
            "get": {
                "description": "Permissions: Authenticated User",
                "operationId": "getApiTokensForLoggedInUser",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Retrieves all Api Tokens for AuthenticatedUser",
                "tags": [
                    "Legacy Auth"
                ]
            },
            "post": {
                "description": "Permissions: Authenticated User",
                "operationId": "createApiTokenForLoggedInUser",
                "responses": {
                    "200": {
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a new 'Api Token' based AuthenticatedUser that does not expire",
                "tags": [
                    "Legacy Auth"
                ]
            }
        },
        "/voice/api/v1/admin/token/{token}": {
            "delete": {
                "description": "Permissions: Anonymous User",
                "operationId": "removeApiToken",
                "parameters": [
                    {
                        "description": "token",
                        "in": "path",
                        "name": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Removes an api token",
                "tags": [
                    "Legacy Auth"
                ]
            }
        },
        "/voice/api/v1/admin/users": {
            "get": {
                "description": "Permissions: MANAGE_USERS or SUPER_USER role",
                "operationId": "listAllUsers",
                "parameters": [
                    {
                        "description": "activeOnly",
                        "in": "query",
                        "name": "activeOnly",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "flatten",
                        "in": "query",
                        "name": "flatten",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Returns a listing of all users that a user has access to",
                "tags": [
                    "Users"
                ]
            },
            "post": {
                "description": "Permissions: MANAGE_USERS or SUPER_USER role",
                "operationId": "createUser",
                "parameters": [
                    {
                        "description": "parentUserId",
                        "in": "query",
                        "name": "parentUserId",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "returnUri",
                        "in": "query",
                        "name": "returnUri",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "isSSO",
                        "in": "query",
                        "name": "isSSO",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminUserRequest"
                            }
                        }
                    },
                    "description": "userRequest",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Creates a single new user",
                "tags": [
                    "Users"
                ],
                "x-codegen-request-body-name": "userRequest"
            }
        },
        "/voice/api/v1/auth/login": {
            "post": {
                "description": "Permissions: Anonymous User",
                "operationId": "doLogin",
                "parameters": [
                    {
                        "description": "username",
                        "in": "query",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "password",
                        "in": "query",
                        "name": "password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "stayLoggedIn",
                        "in": "query",
                        "name": "stayLoggedIn",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLoginView"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Application login to authenticate and receive an X-Auth-Token",
                "tags": [
                    "Legacy Auth"
                ]
            }
        },
        "/voice/api/integration/v1/admin/users/{mainAccountId}": {
            "get": {
                "tags": [
                    "Integration User Controller"
                ],
                "summary": "Returns a listing of all users that a user has access to",
                "description": "Permissions: WFO_ACCESS role",
                "operationId": "getUserList",
                "parameters": [
                    {
                        "name": "mainAccountId",
                        "in": "path",
                        "description": "Main Account Id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99990033"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                },
                                "example": [
                                    {
                                        "rcUserId": 1009,
                                        "userId": 3289,
                                        "engageUserName": "jane.doe+wfo1@ringcentral.com",
                                        "userName": "jane.doe+wfo1+eo1@ringcentral.com",
                                        "email": "jane.doe@ringcentral.com",
                                        "firstName": "Jane",
                                        "lastName": "Doe",
                                        "parentPath": "2181.2979.2983.3064",
                                        "envID": "eo1"
                                    },
                                    {
                                        "rcUserId": 1010,
                                        "userId": 3290,
                                        "engageUserName": "joe.doe+wfo1@ringcentral.com",
                                        "userName": "joe.doe+wfo1+eo1@ringcentral.com",
                                        "email": "joe.doe@ringcentral.com",
                                        "firstName": "Joe",
                                        "lastName": "Doe",
                                        "parentPath": "2181.2979.2983.3064",
                                        "envID": "eo1"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "The supplied data is not valid",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "voice/api/integration/v1/admin/users/99990033 - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Jwt is expired"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "You do not have permission to access this resource",
                                    "details": "",
                                    "developerMessage": "Access is denied",
                                    "cause": "",
                                    "requestUri": "voice/api/integration/v1/admin/users/99990033 - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "The resource you have requested does not exist",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "voice/api/integration/v1/admin/users/99990033 - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "An Internal Server Error occurred while processing this request",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "voice/api/integration/v1/admin/users/99990033 - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/voice/api/integration/v1/admin/accounts/{mainAccountId}/subaccounts": {
            "get": {
                "tags": [
                    "Integration Account Controller"
                ],
                "summary": "Returns a listing of sub accounts by Engage Voice Main account identifier",
                "description": "Permissions: WFO_ACCESS role",
                "operationId": "getSubAccountsByMainAccountId",
                "parameters": [
                    {
                        "name": "mainAccountId",
                        "in": "path",
                        "description": "Main Account Id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99990033"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubAccount"
                                    },
                                    "example": [
                                        {
                                            "subAccountId": "15910001",
                                            "subAccountName": "Cappuccino Engage Development",
                                            "isActive": true
                                        },
                                        {
                                            "subAccountId": "15910006",
                                            "subAccountName": "Cappuccino Engage Development",
                                            "isActive": true
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "The supplied data is not valid",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/subaccounts - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Jwt is expired"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "You do not have permission to access this resource",
                                    "details": "",
                                    "developerMessage": "Access is denied",
                                    "cause": "",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/subaccounts - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "The resource you have requested does not exist",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/subaccounts - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "An Internal Server Error occurred while processing this request",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/subaccounts - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/voice/api/integration/v1/admin/accounts/{subAccountId}/agentGroups/{agentGroupId}/agents": {
            "get": {
                "tags": [
                    "Integration Agent Controller"
                ],
                "summary": "Returns a list of read only agents for an agent group",
                "description": "Permissions: WFO_ACCESS role",
                "operationId": "getAgentList",
                "parameters": [
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "Engage Voice sub-account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99990033"
                        }
                    },
                    {
                        "name": "agentGroupId",
                        "in": "path",
                        "description": "Agent Group Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "example": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Agent"
                                    },
                                    "example": [
                                        {
                                            "rcUserId": 1009,
                                            "agentId": 1386703,
                                            "agentGroupId": 30,
                                            "firstName": "Jane",
                                            "lastName": "Doe",
                                            "engageUserName": "jane.doe+wfo1@ringcentral.com",
                                            "userName": "jane.doe+wfo1+eo1@ringcentral.com",
                                            "email": "jane.doe@ringcentral.com",
                                            "agentType": "SUPERVISOR",
                                            "isActive": true,
                                            "supervisorAgentIds": [
                                                1386605,
                                                1386600
                                            ],
                                            "superviseeAgentIds": [
                                                1386804,
                                                1386905
                                            ],
                                            "envID": "eo1"
                                        },
                                        {
                                            "rcUserId": 1010,
                                            "agentId": 1389175,
                                            "agentGroupId": 30,
                                            "firstName": "Joe",
                                            "lastName": "Doe",
                                            "userName": "Joe.D+15910001_172+eo1@c1.local",
                                            "engageUserName": "Joe.D+15910001_172@c1.local",
                                            "email": "joe.d@ringcentral.com",
                                            "agentType": "AGENT",
                                            "isActive": true,
                                            "supervisorAgentIds": [
                                                1386605
                                            ],
                                            "superviseeAgentIds": [],
                                            "envID": "eo1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "The supplied data is not valid",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/agentGroups/30/agents - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Jwt is expired"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "You do not have permission to access this resource",
                                    "details": "",
                                    "developerMessage": "Access is denied",
                                    "cause": "",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/agentGroups/30/agents - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "The resource you have requested does not exist",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/agentGroups/30/agents - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "An Internal Server Error occurred while processing this request",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/agentGroups/30/agents - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/voice/api/integration/v1/admin/accounts/{subAccountId}/agentGroups": {
            "get": {
                "tags": [
                    "Integration Agent Group Controller"
                ],
                "summary": "Returns a list of agent groups for a sub-account",
                "description": "Permissions: WFO_ACCESS role",
                "operationId": "getAgentGroups",
                "parameters": [
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "Engage Voice sub-account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99990033"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AgentGroup"
                                    },
                                    "example": [
                                        {
                                            "agentGroupId": 1009,
                                            "groupName": "Team A1"
                                        },
                                        {
                                            "agentGroupId": 1010,
                                            "groupName": "Team A2"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "The supplied data is not valid",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/agentGroups - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Jwt is expired"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "You do not have permission to access this resource",
                                    "details": "",
                                    "developerMessage": "Access is denied",
                                    "cause": "",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/agentGroups - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "The resource you have requested does not exist",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/agentGroups - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "An Internal Server Error occurred while processing this request",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/agentGroups - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/voice/api/integration/v1/admin/accounts/{subAccountId}/gateGroups": {
            "get": {
                "tags": [
                    "Integration Gate Group Controller"
                ],
                "summary": "Returns a list of inbound queue groups",
                "description": "Permissions: WFO_ACCESS role",
                "operationId": "getGateGroups",
                "parameters": [
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "Engage Voice sub-account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99990033"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GateGroup"
                                    },
                                    "example": [
                                        {
                                            "gateGroupId": 1009,
                                            "groupName": "Queue group 1"
                                        },
                                        {
                                            "gateGroupId": 1010,
                                            "groupName": "Queue group 2"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "The supplied data is not valid",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/gateGroups - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Jwt is expired"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "You do not have permission to access this resource",
                                    "details": "",
                                    "developerMessage": "Access is denied",
                                    "cause": "",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/gateGroups - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "The resource you have requested does not exist",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/gateGroups - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "An Internal Server Error occurred while processing this request",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/gateGroups - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/voice/api/integration/v1/admin/accounts/{subAccountId}/gateGroups/{gateGroupId}/withAgents": {
            "get": {
                "tags": [
                    "Integration Gate Group Controller"
                ],
                "summary": "Returns a list of queues with agent IDs",
                "description": "Permissions: WFO_ACCESS role",
                "operationId": "getGateGroupsWithAgents",
                "parameters": [
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "Engage Voice sub-account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99990033"
                        }
                    },
                    {
                        "name": "gateGroupId",
                        "in": "path",
                        "description": "Inbound queue group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1009
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QueueWithAgents"
                                    },
                                    "example": [
                                        {
                                            "queueId": 555,
                                            "queueName": "Test queue 1",
                                            "gateGroupId": 1009,
                                            "isActive": true,
                                            "createdOn": "2020-07-21T17:32:28Z",
                                            "agentIds": [
                                                10,
                                                20
                                            ]
                                        },
                                        {
                                            "queueId": 556,
                                            "queueName": "Test queue 2",
                                            "gateGroupId": 1009,
                                            "isActive": true,
                                            "createdOn": "2020-07-21T17:32:28Z",
                                            "agentId": [
                                                30
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "The supplied data is not valid",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/gateGroups/1009/withAgents - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Jwt is expired"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "You do not have permission to access this resource",
                                    "details": "",
                                    "developerMessage": "Access is denied",
                                    "cause": "",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/gateGroups/1009/withAgents - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "The resource you have requested does not exist",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/gateGroups/1009/withAgents - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "An Internal Server Error occurred while processing this request",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "voice/api/integration/v1/admin/accounts/99990033/gateGroups/1009/withAgents - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/voice/api/integration/v1/admin/reports/accounts/{subAccountId}/aggAgentExtendedStats": {
            "post": {
                "tags": [
                    "Integration Report Controller"
                ],
                "summary": "Builds Queue Extended Statistics Report in requested format",
                "description": "Permissions: WFO_ACCESS role",
                "operationId": "streamFileAggAgentExtendedStats",
                "parameters": [
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "Engage Voice sub-account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99990033"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/HistoricalReportParams"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "voice/api/integration/v1/admin/reports/accounts/99990033/aggAgentExtendedStats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Jwt is expired"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "You do not have permission to access this resource",
                                    "details": "",
                                    "developerMessage": "Access is denied",
                                    "cause": "",
                                    "requestUri": "voice/api/integration/v1/admin/reports/accounts/99990033/aggAgentExtendedStats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "voice/api/integration/v1/admin/reports/accounts/99990033/aggAgentExtendedStats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "voice/api/integration/v1/admin/reports/accounts/99990033/aggAgentExtendedStats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/voice/api/integration/v2/admin/reports/accounts/{subAccountId}/interactionMetadata": {
            "post": {
                "tags": [
                    "Integration Report Controller"
                ],
                "summary": "Builds Agent Segment Metadata Report in requested format",
                "description": "Permissions: WFO_ACCESS role",
                "operationId": "streamFileInteractionMetadata",
                "parameters": [
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "Engage Voice sub-account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99990033"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/InteractionMetadataRequest"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InteractionSegmentMetaData2Array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Bad request",
                                    "cause": "",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "voice/api/integration/v2/admin/reports/accounts/99990033/interactionMetadata - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Jwt is expired"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "You do not have permission to access this resource",
                                    "details": "",
                                    "developerMessage": "Access is denied",
                                    "cause": "",
                                    "requestUri": "voice/api/integration/v2/admin/reports/accounts/99990033/interactionMetadata - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Not found",
                                    "cause": "",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "voice/api/integration/v2/admin/reports/accounts/99990033/interactionMetadata - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Internal server error",
                                    "cause": "",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "voice/api/integration/v2/admin/reports/accounts/99990033/interactionMetadata - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/voice/api/integration/v1/admin/reports/accounts/{subAccountId}/aggAgentStats": {
            "post": {
                "tags": [
                    "Integration Report Controller"
                ],
                "summary": "Builds Agent statistics Report in requested format",
                "description": "Permissions: WFO_ACCESS role",
                "operationId": "streamFileAggAgentStats",
                "parameters": [
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "Engage Voice sub-account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99990033"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/HistoricalReportParams"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "voice/api/integration/v1/admin/reports/accounts/99990033/aggAgentStats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Jwt is expired"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "You do not have permission to access this resource",
                                    "details": "",
                                    "developerMessage": "Access is denied",
                                    "cause": "",
                                    "requestUri": "voice/api/integration/v1/admin/reports/accounts/99990033/aggAgentStats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "voice/api/integration/v1/admin/reports/accounts/99990033/aggAgentStats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "voice/api/integration/v1/admin/reports/accounts/99990033/aggAgentStats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/voice/api/integration/v1/admin/reports/accounts/{subAccountId}/aggQueueStats": {
            "post": {
                "tags": [
                    "Integration Report Controller"
                ],
                "summary": "Builds Inbound/Outbound queue statistics in requested format",
                "description": "Permissions: WFO_ACCESS role",
                "operationId": "streamFileAggQueueStats",
                "parameters": [
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "Engage Voice sub-account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99990033"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "*/*": {
                            "schema": {
                                "$ref": "#/components/schemas/HistoricalReportParams"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "voice/api/integration/v1/admin/reports/accounts/99990033/aggQueueStats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Jwt is expired"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "You do not have permission to access this resource",
                                    "details": "",
                                    "developerMessage": "Access is denied",
                                    "cause": "",
                                    "requestUri": "voice/api/integration/v1/admin/reports/accounts/99990033/aggQueueStats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "voice/api/integration/v1/admin/reports/accounts/99990033/aggQueueStats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "voice/api/integration/v1/admin/reports/accounts/99990033/aggQueueStats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/cx/integration/v1/accounts/{rcAccountId}/sub-accounts/{subAccountId}/recordings/dialogs/{dialogId}/segments/{segmentId}": {
            "get": {
                "tags": [
                    "Public Integration API"
                ],
                "summary": "Fetches recordings data",
                "description": "This API fetches recording data for a specified dialog and segment. This is a streaming API, it will return an audio stream for given request.",
                "operationId": "getRecordingSegmentData",
                "parameters": [
                    {
                        "name": "rcAccountId",
                        "in": "path",
                        "description": "RC account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "980634004"
                        }
                    },
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "subaccount id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99999999"
                        }
                    },
                    {
                        "name": "dialogId",
                        "in": "path",
                        "description": "dialog id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "d-65f286b0ee1c4900074c1bb2-1710393008514"
                        }
                    },
                    {
                        "name": "segmentId",
                        "in": "path",
                        "description": "segment id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "d-668cf767a626550007d021f6-668cf767a626550007d021f5"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Bad request",
                                    "cause": "",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "/cx/integration/v1/accounts/980634004/sub-accounts/99999999/recordings/dialogs/d-65f286b0ee1c4900074c1bb2-1710393008514/segments/d-668cf767a626550007d021f6-668cf767a626550007d021f5 - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "JWT has expired."
                            }
                        }
                    },
                    "403": {
                        "description": "You do not have permission to access this resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Access is denied.",
                                    "cause": "",
                                    "generalMessage": "You do not have permission to access this resource",
                                    "requestUri": "/cx/integration/v1/accounts/980634004/sub-accounts/99999999/recordings/dialogs/d-65f286b0ee1c4900074c1bb2-1710393008514/segments/d-668cf767a626550007d021f6-668cf767a626550007d021f5 - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource you requested does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Not found",
                                    "cause": "",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "/cx/integration/v1/accounts/980634004/sub-accounts/99999999/recordings/dialogs/d-65f286b0ee1c4900074c1bb2-1710393008514/segments/d-668cf767a626550007d021f6-668cf767a626550007d021f5 - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Internal server error",
                                    "cause": "",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "/cx/integration/v1/accounts/980634004/sub-accounts/99999999/recordings/dialogs/d-65f286b0ee1c4900074c1bb2-1710393008514/segments/d-668cf767a626550007d021f6-668cf767a626550007d021f5 - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/cx/integration/v1/accounts/{rcAccountId}/sub-accounts/{subAccountId}/interaction-metadata": {
            "post": {
                "tags": [
                    "Public Integration API"
                ],
                "summary": "Returns Interaction Segment Metadata",
                "description": "This API is used to fetch interaction metadata for VOICE/DIGITAL for all segments under provided time duration.",
                "operationId": "getInteractionMetadata",
                "parameters": [
                    {
                        "name": "rcAccountId",
                        "in": "path",
                        "description": "RC account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "980634004"
                        }
                    },
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "RingCX subAccount id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99999999"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InteractionMetadataRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalabrioInteractionSegmentMetaData2Array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Bad request",
                                    "cause": "",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "/cx/integration/v1/accounts/980634004/sub-accounts/99999999/interaction-metadata - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "JWT has expired."
                            }
                        }
                    },
                    "403": {
                        "description": "You do not have permission to access this resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Access is denied.",
                                    "cause": "",
                                    "generalMessage": "You do not have permission to access this resource",
                                    "requestUri": "/cx/integration/v1/accounts/980634004/sub-accounts/99999999/interaction-metadata - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource you requested does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Not found",
                                    "cause": "",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "/cx/integration/v1/accounts/980634004/sub-accounts/99999999/interaction-metadata - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Internal server error",
                                    "cause": "",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "/cx/integration/v1/accounts/980634004/sub-accounts/99999999/interaction-metadata - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/cx/integration/v1/accounts/{rcAccountId}/sub-accounts/{subAccountId}/transcripts/dialogs/{dialogId}/segments/{segmentId}": {
            "get": {
                "tags": [
                    "Public Integration API"
                ],
                "summary": "Fetches Transcript data for both voice and digital",
                "description": "This API fetches interaction transcript data for provided dialogId and segmentId. This is a streaming API, it will return an audio stream for given request.",
                "operationId": "getTranscriptSegmentData",
                "parameters": [
                    {
                        "name": "rcAccountId",
                        "in": "path",
                        "description": "RC account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "980634004"
                        }
                    },
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "Sub Account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99999999"
                        }
                    },
                    {
                        "name": "dialogId",
                        "in": "path",
                        "description": "dialog id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "d-668cf1d0a626550007d01d1b-1720512976864-1909690a312da"
                        }
                    },
                    {
                        "name": "segmentId",
                        "in": "path",
                        "description": "segment id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "d-668d1051a626550007d02828-1720520785904-19097081cf749"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RCInteractionTranscriptData"
                                },
                                "examples": {
                                    "example1": {
                                        "value": {
                                            "channelClass": "DIGITAL",
                                            "errorCode": null,
                                            "errorMessage": null,
                                            "transcript": [
                                                {
                                                    "participantId": "d-6555aa00cd0df30007872d38-6555aa00cd0df30007872d37",
                                                    "rcUserId": null,
                                                    "participantName": null,
                                                    "participantType": "contact",
                                                    "timestamp": "1721651880000",
                                                    "message": "I cannot transfer number porting"
                                                },
                                                {
                                                    "participantId": "d-6555b45ccd0df30007872dd2-1700115548459-18bd6d7301135",
                                                    "rcUserId": null,
                                                    "participantName": null,
                                                    "participantType": "agent",
                                                    "timestamp": "1721651881000",
                                                    "message": "Can you provide your RC account? And describe the steps you met?"
                                                }
                                            ]
                                        }
                                    },
                                    "example2": {
                                        "value": {
                                            "channelClass": "VOICE",
                                            "errorCode": null,
                                            "errorMessage": null,
                                            "transcript": [
                                                {
                                                    "participantId": "d-6555aa00cd0df30007872d38-6555aa00cd0df30007872d37",
                                                    "rcUserId": null,
                                                    "participantName": null,
                                                    "participantType": null,
                                                    "timestamp": "1721651880000",
                                                    "message": "yes sir"
                                                },
                                                {
                                                    "participantId": "d-6555b45ccd0df30007872dd2-1700115548459-18bd6d7301135",
                                                    "rcUserId": null,
                                                    "participantName": null,
                                                    "participantType": null,
                                                    "timestamp": "1721651881000",
                                                    "message": "ok"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Bad request",
                                    "cause": "",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "/cx/integration/v1/accounts/980634004/sub-accounts/99999999/transcripts/dialogs/d-668cf1d0a626550007d01d1b-1720512976864-1909690a312da/segments/d-668d1051a626550007d02828-1720520785904-19097081cf749 - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "JWT has expired."
                            }
                        }
                    },
                    "403": {
                        "description": "You do not have permission to access this resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Access is denied.",
                                    "cause": "",
                                    "generalMessage": "You do not have permission to access this resource",
                                    "requestUri": "/cx/integration/v1/accounts/980634004/sub-accounts/99999999/transcripts/dialogs/d-668cf1d0a626550007d01d1b-1720512976864-1909690a312da/segments/d-668d1051a626550007d02828-1720520785904-19097081cf749 - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource you requested does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Not found",
                                    "cause": "",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "/cx/integration/v1/accounts/980634004/sub-accounts/99999999/transcripts/dialogs/d-668cf1d0a626550007d01d1b-1720512976864-1909690a312da/segments/d-668d1051a626550007d02828-1720520785904-19097081cf749 - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Internal server error",
                                    "cause": "",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "/cx/integration/v1/accounts/980634004/sub-accounts/99999999/transcripts/dialogs/d-668cf1d0a626550007d01d1b-1720512976864-1909690a312da/segments/d-668d1051a626550007d02828-1720520785904-19097081cf749 - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/cx/integration/v1/accounts/{rcAccountId}/sub-accounts/{subAccountId}/queue-groups": {
            "get": {
                "tags": [
                    "Public Integration API"
                ],
                "summary": "Returns a list of queue groups",
                "description": "This API returns a list of all queue-groups for given sub-account",
                "operationId": "getQueueGroups",
                "parameters": [
                    {
                        "name": "rcAccountId",
                        "in": "path",
                        "description": "RC account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "138885004"
                        }
                    },
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "Engage Voice sub-account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99999033"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QueueGroup"
                                    },
                                    "example": [
                                        {
                                            "queueGroupId": 1009,
                                            "groupName": "Queue group 1",
                                            "queueGroupType": "VOICE"
                                        },
                                        {
                                            "queueGroupId": 1010,
                                            "groupName": "Queue group 2",
                                            "queueGroupType": "DIGITAL"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Bad request",
                                    "cause": "",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/queue-groups - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "JWT has expired."
                            }
                        }
                    },
                    "403": {
                        "description": "You do not have permission to access this resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Access is denied.",
                                    "cause": "",
                                    "generalMessage": "You do not have permission to access this resource",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/queue-groups - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource you requested does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Not found",
                                    "cause": "",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/queue-groups - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Internal server error",
                                    "cause": "",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/queue-groups - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/cx/integration/v1/accounts/{rcAccountId}/sub-accounts/{subAccountId}/queue-groups/{queueGroupId}/with-agents": {
            "get": {
                "tags": [
                    "Public Integration API"
                ],
                "summary": "Returns a list of agent ids of the queue group.",
                "description": "This API returns a list of all queues and their associated agents for given sub-account and queue-group id. Note: Maximum number of records returned by this API is 2000.",
                "operationId": "getQueuesWithAgents",
                "parameters": [
                    {
                        "name": "rcAccountId",
                        "in": "path",
                        "description": "RC account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "138885004"
                        }
                    },
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "Engage Voice sub-account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99990033"
                        }
                    },
                    {
                        "name": "queueGroupId",
                        "in": "path",
                        "description": "Queue group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1009
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CXQueueWithAgents"
                                    },
                                    "example": [
                                        {
                                            "queueId": 555,
                                            "queueType": "VOICE",
                                            "queueName": "Test queue 1",
                                            "queueGroupId": 1009,
                                            "isActive": true,
                                            "createdOn": "2020-07-21T17:32:28Z",
                                            "agentIds": [
                                                10,
                                                20
                                            ]
                                        },
                                        {
                                            "queueId": 556,
                                            "queueType": "VOICE",
                                            "queueName": "Test queue 2",
                                            "queueGroupId": 1009,
                                            "isActive": true,
                                            "createdOn": "2020-07-21T17:32:28Z",
                                            "agentIds": [
                                                30
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Bad request",
                                    "cause": "",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/queue-groups/1009/with-agents - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "JWT has expired."
                            }
                        }
                    },
                    "403": {
                        "description": "You do not have permission to access this resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Access is denied.",
                                    "cause": "",
                                    "generalMessage": "You do not have permission to access this resource",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/queue-groups/1009/with-agents - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource you requested does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Not found",
                                    "cause": "",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/queue-groups/1009/with-agents - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Internal server error",
                                    "cause": "",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/queue-groups/1009/with-agents - GET",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/cx/integration/v1/accounts/{rcAccountId}/sub-accounts/{subAccountId}/agg-queue-stats": {
            "post": {
                "tags": [
                    "Public Integration API"
                ],
                "summary": "Builds queue statistics",
                "operationId": "buildAggQueueStats",
                "description": "This API returns statistics of all queues for given sub-account and duration.",
                "parameters": [
                    {
                        "name": "rcAccountId",
                        "in": "path",
                        "description": "RC account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "138885004"
                        }
                    },
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "Engage Voice sub-account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99999033"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AggregatedIntegrationParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AggregatedQueueStats"
                                    }
                                },
                                "example": [
                                    {
                                        "interval": 60,
                                        "dateTimeFrom": "03-04-2024T01:00:00",
                                        "queue": 5682,
                                        "queueName": "Queue",
                                        "offdDirectIxnCnt": 3,
                                        "overflowInIxnCnt": 0,
                                        "abandIxnCnt": 0,
                                        "overflowOutIxnCnt": 0,
                                        "answIxnCnt": 3,
                                        "queuedAndAnswIxnDur": 9,
                                        "queuedAndAbandIxnDur": 0,
                                        "talkingIxnDur": 90,
                                        "wrapUpDur": 13,
                                        "queuedAnswLongestQueDur": 1,
                                        "queuedAbandLongestQueDur": 0,
                                        "ansServicelevelCnt": 0,
                                        "waitDur": 13,
                                        "abandShortIxnCnt": 0,
                                        "abandWithinSlCnt": 0
                                    },
                                    {
                                        "interval": 60,
                                        "dateTimeFrom": "03-04-2024T02:00:00",
                                        "queue": 5687,
                                        "queueName": "Neringa queue",
                                        "offdDirectIxnCnt": 3,
                                        "overflowInIxnCnt": 0,
                                        "abandIxnCnt": 0,
                                        "overflowOutIxnCnt": 0,
                                        "answIxnCnt": 3,
                                        "queuedAndAnswIxnDur": 0,
                                        "queuedAndAbandIxnDur": 0,
                                        "talkingIxnDur": 9,
                                        "wrapUpDur": 13,
                                        "queuedAnswLongestQueDur": 0,
                                        "queuedAbandLongestQueDur": 0,
                                        "ansServicelevelCnt": 0,
                                        "waitDur": 13,
                                        "abandShortIxnCnt": 0,
                                        "abandWithinSlCnt": 0
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Bad request",
                                    "cause": "",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/agg-queue-stats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "JWT has expired."
                            }
                        }
                    },
                    "403": {
                        "description": "You do not have permission to access this resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Access is denied.",
                                    "cause": "",
                                    "generalMessage": "You do not have permission to access this resource",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/agg-queue-stats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource you requested does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Not found",
                                    "cause": "",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/agg-queue-stats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Internal server error",
                                    "cause": "",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/agg-queue-stats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/cx/integration/v1/accounts/{rcAccountId}/sub-accounts/{subAccountId}/agg-agent-extended-stats": {
            "post": {
                "tags": [
                    "Public Integration API"
                ],
                "summary": "Builds extended agent queue statistics",
                "operationId": "buildExtendedAggQueueStats",
                "description": "This API returns statistics of all queues along with their agents for given Sub-Account and duration.",
                "parameters": [
                    {
                        "name": "rcAccountId",
                        "in": "path",
                        "description": "RC account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "138885004"
                        }
                    },
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "Engage Voice sub-account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99990033"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AggregatedIntegrationParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExtendedAggregatedQueueStats"
                                    }
                                },
                                "example": [
                                    {
                                        "interval": 60,
                                        "dateTimeFrom": "03-04-2024T05:00:00",
                                        "agentId": 1,
                                        "agentName": "aws93-l13-las01 test number",
                                        "queue": 5682,
                                        "queueName": "Queue",
                                        "talkingIxnDur": 56,
                                        "wrapUpDur": 0,
                                        "answIxnCnt": 1,
                                        "transferOutIxnCnt": 4
                                    },
                                    {
                                        "interval": 60,
                                        "dateTimeFrom": "03-04-2024T06:00:00",
                                        "agentId": 10693,
                                        "agentName": "Neringa Norkute",
                                        "queue": 5688,
                                        "queueName": "Neringa queue 2",
                                        "talkingIxnDur": 137,
                                        "wrapUpDur": 5,
                                        "answIxnCnt": 2,
                                        "transferOutIxnCnt": 0
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Bad request",
                                    "cause": "",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/agg-agent-extended-stats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "JWT has expired."
                            }
                        }
                    },
                    "403": {
                        "description": "You do not have permission to access this resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Access is denied.",
                                    "cause": "",
                                    "generalMessage": "You do not have permission to access this resource",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/agg-agent-extended-stats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource you requested does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Not found",
                                    "cause": "",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/agg-agent-extended-stats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Internal server error",
                                    "cause": "",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/agg-agent-extended-stats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/cx/integration/v1/accounts/{rcAccountId}/sub-accounts/{subAccountId}/agg-agent-stats": {
            "post": {
                "tags": [
                    "Public Integration API"
                ],
                "summary": "Builds agent statistics",
                "description": "This API returns statistics of all agents for given sub-account and duration.",
                "operationId": "buildAggAgentStats",
                "parameters": [
                    {
                        "name": "rcAccountId",
                        "in": "path",
                        "description": "RC account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "138885004"
                        }
                    },
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "description": "Engage Voice sub-account id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "99990033"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AggregatedIntegrationParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AggregatedAgentStats"
                                    }
                                },
                                "example": [
                                    {
                                        "interval": 60,
                                        "dateTimeFrom": "03-04-2024T08:00:00",
                                        "agentId": 33,
                                        "agentName": "test number, aws91-l22-engage",
                                        "availDur": 3376,
                                        "totWorkDur": 3376,
                                        "pauseDur": 0,
                                        "waitDur": 2476,
                                        "adminDur": 0,
                                        "directOutIxnCnt": 0,
                                        "directOutIxnDur": 0,
                                        "directInIxnCnt": 0,
                                        "directInIxnDur": 0
                                    },
                                    {
                                        "interval": 60,
                                        "dateTimeFrom": "03-04-2024T09:00:00",
                                        "agentId": 132598,
                                        "agentName": "kaduk, alena",
                                        "availDur": 117,
                                        "totWorkDur": 117,
                                        "pauseDur": 0,
                                        "waitDur": 113,
                                        "adminDur": 0,
                                        "directOutIxnCnt": 0,
                                        "directOutIxnDur": 0,
                                        "directInIxnCnt": 1,
                                        "directInIxnDur": 5
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Bad request",
                                    "cause": "",
                                    "generalMessage": "The supplied data is not valid",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/agg-agent-stats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "JWT has expired."
                            }
                        }
                    },
                    "403": {
                        "description": "You do not have permission to access this resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Access is denied.",
                                    "cause": "",
                                    "generalMessage": "You do not have permission to access this resource",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/agg-agent-stats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource you requested does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Not found",
                                    "cause": "",
                                    "generalMessage": "The resource you have requested does not exist",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/agg-agent-stats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Errors"
                                },
                                "example": {
                                    "details": "",
                                    "developerMessage": "Internal server error",
                                    "cause": "",
                                    "generalMessage": "An Internal Server Error occurred while processing this request",
                                    "requestUri": "/cx/integration/v1/accounts/138885004/sub-accounts/99999033/agg-agent-stats - POST",
                                    "timestamp": 1611847650696
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/utilities/tnManager/updateCustomerDnisBulk": {
            "put": {
                "tags": [
                    "Number Management"
                ],
                "summary": "Update Dnis Records in Bulk",
                "operationId": "updateCustomerDnisBulkUsingPUT",
                "requestBody": {
                    "description": "request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DnisBulkUpdateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "x-codegen-request-body-name": "request"
            }
        },
        "/v1/admin/utilities/tnManager/searchDnis": {
            "post": {
                "tags": [
                    "Number Management"
                ],
                "summary": "Returns all dnis pools for Customer",
                "description": "Permissions: READ on Account, READ on TN_MANAGER, filter out restricted accounts",
                "operationId": "getCustomerDnisPoolListUsingPOST",
                "requestBody": {
                    "description": "request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DnisListRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "x-codegen-request-body-name": "request"
            }
        },
        "/v1/admin/utilities/tnManager/updateBulkDnisPool": {
            "put": {
                "tags": [
                    "Number Management"
                ],
                "summary": "Updates for bulk csv data dnis pool, will update assignments too",
                "description": "Permissions: READ on TN_MANAGER, filter out restricted accounts",
                "operationId": "updateBulkDnisPoolListUsingPUT",
                "requestBody": {
                    "description": "dnisPools",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DnisPool"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DnisBulkUpdateRespose"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "x-codegen-request-body-name": "dnisPools"
            }
        },
        "/v1/admin/utilities/tnManager/uploadDnisPool": {
            "post": {
                "tags": [
                    "Number Management"
                ],
                "summary": "Creates a list of dnis pools from upload file",
                "description": "Has Role: SUPER_USER",
                "operationId": "previewDnisListUsingPOST",
                "parameters": [
                    {
                        "name": "fileType",
                        "in": "query",
                        "description": "fileType",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "COMMA"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "description": "file",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DnisListPreviewResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {}
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/platform/api/media/product": {
            "put": {
                "summary": "Update streaming profile",
                "tags": [
                    "Audio Streaming"
                ],
                "operationId": "updateProduct",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProductReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create streaming profile",
                "tags": [
                    "Audio Streaming"
                ],
                "operationId": "createProduct",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProductReq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/platform/api/media/product/account/{subAccountId}/type/{productTypeString}/id/{productId}": {
            "get": {
                "summary": "Get streaming profile",
                "tags": [
                    "Audio Streaming"
                ],
                "operationId": "getProduct",
                "parameters": [
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productTypeString",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete streaming profile",
                "tags": [
                    "Audio Streaming"
                ],
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "subAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productTypeString",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://engage.ringcentral.com"
        }
    ],
    "tags": [
        {
            "name": "Active Calls"
        },
        {
            "name": "Audio Streaming"
        },
        {
            "name": "Agent Access"
        },
        {
            "name": "Agent Groups"
        },
        {
            "name": "Agents"
        },
        {
            "name": "Campaigns"
        },
        {
            "name": "Countries"
        },
        {
            "name": "Dial Groups"
        },
        {
            "name": "Integration Agent"
        },
        {
            "name": "Integration Account"
        },
        {
            "name": "Integration Agent Group"
        },
        {
            "name": "Integration Gate Group"
        },
        {
            "name": "Integration Report"
        },
        {
            "name": "Integration User"
        },
        {
            "name": "Leads"
        },
        {
            "name": "Legacy Auth"
        },
        {
            "name": "Outbound"
        },
        {
            "name": "Queue Dispositions"
        },
        {
            "name": "Queue Events"
        },
        {
            "name": "Queue Groups"
        },
        {
            "name": "Queue Phone Book"
        },
        {
            "name": "Queue Schedule"
        },
        {
            "name": "Queue Skills"
        },
        {
            "name": "Queue Special ANI"
        },
        {
            "name": "Queues"
        },
        {
            "name": "Reporting"
        },
        {
            "name": "Requeue Shortcuts"
        },
        {
            "name": "RingCentral Auth"
        },
        {
            "name": "Number Management"
        },
        {
            "name": "Users"
        }
    ],
    "x-tag-groups": [
        {
            "name": "Analytics",
            "popular": true,
            "tags": [
                "Reporting",
                "Real Time Reporting"
            ]
        },
        {
            "name": "Users",
            "popular": true,
            "tags": [
                "Agents",
                "Agent Groups",
                "Users"
            ]
        },
        {
            "name": "Routing",
            "popular": true,
            "tags": [
                "Queues",
                "Queue Groups",
                "Agent Access",
                "Queue Dispositions",
                "Queue Events",
                "Queue Phone Book",
                "Queue Skills",
                "Requeue Shortcuts",
                "Queue Schedule",
                "Queue Special ANI",
                "Number Management"
            ]
        },
        {
            "name": "Workforce",
            "popular": true,
            "tags": [
                "Audio Streaming"
            ]
        },
        {
            "name": "Dialing",
            "popular": true,
            "tags": [
                "Active Calls",
                "Campaigns",
                "Campaign Groups",
                "Leads",
                "Dial Groups",
                "Outbound"
            ]
        },
        {
            "name": "Authentication",
            "popular": false,
            "tags": [
                "Authentication",
                "Password Reset",
                "Token",
                "OAuth",
                "RingCentral Auth",
                "Legacy Auth"
            ]
        },
        {
            "name": "Utilities",
            "popular": false,
            "tags": [
                "Countries"
            ]
        },
        {
            "name": "Integration",
            "popular": false,
            "tags": [
                "Integration User Controller",
                "Integration Account Controller",
                "Integration Agent Controller",
                "Integration Agent Group Controller",
                "Integration Gate Group Controller",
                "Integration Report Controller",
                "Public Integration API"
            ]
        }
    ]
}